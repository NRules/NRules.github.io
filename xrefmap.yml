### YamlMime:XRefMap
sorted: true
references:
- uid: NRules
  name: NRules
  href: api/NRules.html
  commentId: N:NRules
  fullName: NRules
  nameWithType: NRules
- uid: NRules.Activation
  name: Activation
  href: api/NRules.Activation.html
  commentId: T:NRules.Activation
  fullName: NRules.Activation
  nameWithType: Activation
- uid: NRules.Activation.Facts
  name: Facts
  href: api/NRules.Activation.html#NRules_Activation_Facts
  commentId: P:NRules.Activation.Facts
  fullName: NRules.Activation.Facts
  nameWithType: Activation.Facts
- uid: NRules.Activation.Facts*
  name: Facts
  href: api/NRules.Activation.html#NRules_Activation_Facts_
  commentId: Overload:NRules.Activation.Facts
  isSpec: "True"
  fullName: NRules.Activation.Facts
  nameWithType: Activation.Facts
- uid: NRules.Activation.Rule
  name: Rule
  href: api/NRules.Activation.html#NRules_Activation_Rule
  commentId: P:NRules.Activation.Rule
  fullName: NRules.Activation.Rule
  nameWithType: Activation.Rule
- uid: NRules.Activation.Rule*
  name: Rule
  href: api/NRules.Activation.html#NRules_Activation_Rule_
  commentId: Overload:NRules.Activation.Rule
  isSpec: "True"
  fullName: NRules.Activation.Rule
  nameWithType: Activation.Rule
- uid: NRules.Activation.Trigger
  name: Trigger
  href: api/NRules.Activation.html#NRules_Activation_Trigger
  commentId: P:NRules.Activation.Trigger
  fullName: NRules.Activation.Trigger
  nameWithType: Activation.Trigger
- uid: NRules.Activation.Trigger*
  name: Trigger
  href: api/NRules.Activation.html#NRules_Activation_Trigger_
  commentId: Overload:NRules.Activation.Trigger
  isSpec: "True"
  fullName: NRules.Activation.Trigger
  nameWithType: Activation.Trigger
- uid: NRules.AgendaExpressionEvaluationException
  name: AgendaExpressionEvaluationException
  href: api/NRules.AgendaExpressionEvaluationException.html
  commentId: T:NRules.AgendaExpressionEvaluationException
  fullName: NRules.AgendaExpressionEvaluationException
  nameWithType: AgendaExpressionEvaluationException
- uid: NRules.AgendaExpressionEvaluationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: AgendaExpressionEvaluationException(SerializationInfo, StreamingContext)
  href: api/NRules.AgendaExpressionEvaluationException.html#NRules_AgendaExpressionEvaluationException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:NRules.AgendaExpressionEvaluationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name.vb: New(SerializationInfo, StreamingContext)
  fullName: NRules.AgendaExpressionEvaluationException.AgendaExpressionEvaluationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  fullName.vb: NRules.AgendaExpressionEvaluationException.New(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: AgendaExpressionEvaluationException.AgendaExpressionEvaluationException(SerializationInfo, StreamingContext)
  nameWithType.vb: AgendaExpressionEvaluationException.New(SerializationInfo, StreamingContext)
- uid: NRules.AgendaExpressionEvaluationException.#ctor*
  name: AgendaExpressionEvaluationException
  href: api/NRules.AgendaExpressionEvaluationException.html#NRules_AgendaExpressionEvaluationException__ctor_
  commentId: Overload:NRules.AgendaExpressionEvaluationException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.AgendaExpressionEvaluationException.AgendaExpressionEvaluationException
  fullName.vb: NRules.AgendaExpressionEvaluationException.New
  nameWithType: AgendaExpressionEvaluationException.AgendaExpressionEvaluationException
  nameWithType.vb: AgendaExpressionEvaluationException.New
- uid: NRules.AgendaExpressionEvaluationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData(SerializationInfo, StreamingContext)
  href: api/NRules.AgendaExpressionEvaluationException.html#NRules_AgendaExpressionEvaluationException_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:NRules.AgendaExpressionEvaluationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: NRules.AgendaExpressionEvaluationException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: AgendaExpressionEvaluationException.GetObjectData(SerializationInfo, StreamingContext)
- uid: NRules.AgendaExpressionEvaluationException.GetObjectData*
  name: GetObjectData
  href: api/NRules.AgendaExpressionEvaluationException.html#NRules_AgendaExpressionEvaluationException_GetObjectData_
  commentId: Overload:NRules.AgendaExpressionEvaluationException.GetObjectData
  isSpec: "True"
  fullName: NRules.AgendaExpressionEvaluationException.GetObjectData
  nameWithType: AgendaExpressionEvaluationException.GetObjectData
- uid: NRules.AgendaExpressionEvaluationException.Message
  name: Message
  href: api/NRules.AgendaExpressionEvaluationException.html#NRules_AgendaExpressionEvaluationException_Message
  commentId: P:NRules.AgendaExpressionEvaluationException.Message
  fullName: NRules.AgendaExpressionEvaluationException.Message
  nameWithType: AgendaExpressionEvaluationException.Message
- uid: NRules.AgendaExpressionEvaluationException.Message*
  name: Message
  href: api/NRules.AgendaExpressionEvaluationException.html#NRules_AgendaExpressionEvaluationException_Message_
  commentId: Overload:NRules.AgendaExpressionEvaluationException.Message
  isSpec: "True"
  fullName: NRules.AgendaExpressionEvaluationException.Message
  nameWithType: AgendaExpressionEvaluationException.Message
- uid: NRules.AgendaExpressionEvaluationException.RuleName
  name: RuleName
  href: api/NRules.AgendaExpressionEvaluationException.html#NRules_AgendaExpressionEvaluationException_RuleName
  commentId: P:NRules.AgendaExpressionEvaluationException.RuleName
  fullName: NRules.AgendaExpressionEvaluationException.RuleName
  nameWithType: AgendaExpressionEvaluationException.RuleName
- uid: NRules.AgendaExpressionEvaluationException.RuleName*
  name: RuleName
  href: api/NRules.AgendaExpressionEvaluationException.html#NRules_AgendaExpressionEvaluationException_RuleName_
  commentId: Overload:NRules.AgendaExpressionEvaluationException.RuleName
  isSpec: "True"
  fullName: NRules.AgendaExpressionEvaluationException.RuleName
  nameWithType: AgendaExpressionEvaluationException.RuleName
- uid: NRules.AgendaFilters
  name: NRules.AgendaFilters
  href: api/NRules.AgendaFilters.html
  commentId: N:NRules.AgendaFilters
  fullName: NRules.AgendaFilters
  nameWithType: NRules.AgendaFilters
- uid: NRules.AgendaFilters.AgendaContext
  name: AgendaContext
  href: api/NRules.AgendaFilters.AgendaContext.html
  commentId: T:NRules.AgendaFilters.AgendaContext
  fullName: NRules.AgendaFilters.AgendaContext
  nameWithType: AgendaContext
- uid: NRules.AgendaFilters.IAgendaFilter
  name: IAgendaFilter
  href: api/NRules.AgendaFilters.IAgendaFilter.html
  commentId: T:NRules.AgendaFilters.IAgendaFilter
  fullName: NRules.AgendaFilters.IAgendaFilter
  nameWithType: IAgendaFilter
- uid: NRules.AgendaFilters.IAgendaFilter.Accept(NRules.AgendaFilters.AgendaContext,NRules.Activation)
  name: Accept(AgendaContext, Activation)
  href: api/NRules.AgendaFilters.IAgendaFilter.html#NRules_AgendaFilters_IAgendaFilter_Accept_NRules_AgendaFilters_AgendaContext_NRules_Activation_
  commentId: M:NRules.AgendaFilters.IAgendaFilter.Accept(NRules.AgendaFilters.AgendaContext,NRules.Activation)
  fullName: NRules.AgendaFilters.IAgendaFilter.Accept(NRules.AgendaFilters.AgendaContext, NRules.Activation)
  nameWithType: IAgendaFilter.Accept(AgendaContext, Activation)
- uid: NRules.AgendaFilters.IAgendaFilter.Accept*
  name: Accept
  href: api/NRules.AgendaFilters.IAgendaFilter.html#NRules_AgendaFilters_IAgendaFilter_Accept_
  commentId: Overload:NRules.AgendaFilters.IAgendaFilter.Accept
  isSpec: "True"
  fullName: NRules.AgendaFilters.IAgendaFilter.Accept
  nameWithType: IAgendaFilter.Accept
- uid: NRules.AgendaFilters.IStatefulAgendaFilter
  name: IStatefulAgendaFilter
  href: api/NRules.AgendaFilters.IStatefulAgendaFilter.html
  commentId: T:NRules.AgendaFilters.IStatefulAgendaFilter
  fullName: NRules.AgendaFilters.IStatefulAgendaFilter
  nameWithType: IStatefulAgendaFilter
- uid: NRules.AgendaFilters.IStatefulAgendaFilter.Remove(NRules.AgendaFilters.AgendaContext,NRules.Activation)
  name: Remove(AgendaContext, Activation)
  href: api/NRules.AgendaFilters.IStatefulAgendaFilter.html#NRules_AgendaFilters_IStatefulAgendaFilter_Remove_NRules_AgendaFilters_AgendaContext_NRules_Activation_
  commentId: M:NRules.AgendaFilters.IStatefulAgendaFilter.Remove(NRules.AgendaFilters.AgendaContext,NRules.Activation)
  fullName: NRules.AgendaFilters.IStatefulAgendaFilter.Remove(NRules.AgendaFilters.AgendaContext, NRules.Activation)
  nameWithType: IStatefulAgendaFilter.Remove(AgendaContext, Activation)
- uid: NRules.AgendaFilters.IStatefulAgendaFilter.Remove*
  name: Remove
  href: api/NRules.AgendaFilters.IStatefulAgendaFilter.html#NRules_AgendaFilters_IStatefulAgendaFilter_Remove_
  commentId: Overload:NRules.AgendaFilters.IStatefulAgendaFilter.Remove
  isSpec: "True"
  fullName: NRules.AgendaFilters.IStatefulAgendaFilter.Remove
  nameWithType: IStatefulAgendaFilter.Remove
- uid: NRules.AgendaFilters.IStatefulAgendaFilter.Select(NRules.AgendaFilters.AgendaContext,NRules.Activation)
  name: Select(AgendaContext, Activation)
  href: api/NRules.AgendaFilters.IStatefulAgendaFilter.html#NRules_AgendaFilters_IStatefulAgendaFilter_Select_NRules_AgendaFilters_AgendaContext_NRules_Activation_
  commentId: M:NRules.AgendaFilters.IStatefulAgendaFilter.Select(NRules.AgendaFilters.AgendaContext,NRules.Activation)
  fullName: NRules.AgendaFilters.IStatefulAgendaFilter.Select(NRules.AgendaFilters.AgendaContext, NRules.Activation)
  nameWithType: IStatefulAgendaFilter.Select(AgendaContext, Activation)
- uid: NRules.AgendaFilters.IStatefulAgendaFilter.Select*
  name: Select
  href: api/NRules.AgendaFilters.IStatefulAgendaFilter.html#NRules_AgendaFilters_IStatefulAgendaFilter_Select_
  commentId: Overload:NRules.AgendaFilters.IStatefulAgendaFilter.Select
  isSpec: "True"
  fullName: NRules.AgendaFilters.IStatefulAgendaFilter.Select
  nameWithType: IStatefulAgendaFilter.Select
- uid: NRules.Aggregators
  name: NRules.Aggregators
  href: api/NRules.Aggregators.html
  commentId: N:NRules.Aggregators
  fullName: NRules.Aggregators
  nameWithType: NRules.Aggregators
- uid: NRules.Aggregators.AggregateExpressionExtensions
  name: AggregateExpressionExtensions
  href: api/NRules.Aggregators.AggregateExpressionExtensions.html
  commentId: T:NRules.Aggregators.AggregateExpressionExtensions
  fullName: NRules.Aggregators.AggregateExpressionExtensions
  nameWithType: AggregateExpressionExtensions
- uid: NRules.Aggregators.AggregateExpressionExtensions.Find(System.Collections.Generic.IEnumerable{NRules.Aggregators.IAggregateExpression},System.String)
  name: Find(IEnumerable<IAggregateExpression>, string)
  href: api/NRules.Aggregators.AggregateExpressionExtensions.html#NRules_Aggregators_AggregateExpressionExtensions_Find_System_Collections_Generic_IEnumerable_NRules_Aggregators_IAggregateExpression__System_String_
  commentId: M:NRules.Aggregators.AggregateExpressionExtensions.Find(System.Collections.Generic.IEnumerable{NRules.Aggregators.IAggregateExpression},System.String)
  name.vb: Find(IEnumerable(Of IAggregateExpression), String)
  fullName: NRules.Aggregators.AggregateExpressionExtensions.Find(System.Collections.Generic.IEnumerable<NRules.Aggregators.IAggregateExpression>, string)
  fullName.vb: NRules.Aggregators.AggregateExpressionExtensions.Find(System.Collections.Generic.IEnumerable(Of NRules.Aggregators.IAggregateExpression), String)
  nameWithType: AggregateExpressionExtensions.Find(IEnumerable<IAggregateExpression>, string)
  nameWithType.vb: AggregateExpressionExtensions.Find(IEnumerable(Of IAggregateExpression), String)
- uid: NRules.Aggregators.AggregateExpressionExtensions.Find*
  name: Find
  href: api/NRules.Aggregators.AggregateExpressionExtensions.html#NRules_Aggregators_AggregateExpressionExtensions_Find_
  commentId: Overload:NRules.Aggregators.AggregateExpressionExtensions.Find
  isSpec: "True"
  fullName: NRules.Aggregators.AggregateExpressionExtensions.Find
  nameWithType: AggregateExpressionExtensions.Find
- uid: NRules.Aggregators.AggregateExpressionExtensions.FindSingle(System.Collections.Generic.IEnumerable{NRules.Aggregators.IAggregateExpression},System.String)
  name: FindSingle(IEnumerable<IAggregateExpression>, string)
  href: api/NRules.Aggregators.AggregateExpressionExtensions.html#NRules_Aggregators_AggregateExpressionExtensions_FindSingle_System_Collections_Generic_IEnumerable_NRules_Aggregators_IAggregateExpression__System_String_
  commentId: M:NRules.Aggregators.AggregateExpressionExtensions.FindSingle(System.Collections.Generic.IEnumerable{NRules.Aggregators.IAggregateExpression},System.String)
  name.vb: FindSingle(IEnumerable(Of IAggregateExpression), String)
  fullName: NRules.Aggregators.AggregateExpressionExtensions.FindSingle(System.Collections.Generic.IEnumerable<NRules.Aggregators.IAggregateExpression>, string)
  fullName.vb: NRules.Aggregators.AggregateExpressionExtensions.FindSingle(System.Collections.Generic.IEnumerable(Of NRules.Aggregators.IAggregateExpression), String)
  nameWithType: AggregateExpressionExtensions.FindSingle(IEnumerable<IAggregateExpression>, string)
  nameWithType.vb: AggregateExpressionExtensions.FindSingle(IEnumerable(Of IAggregateExpression), String)
- uid: NRules.Aggregators.AggregateExpressionExtensions.FindSingle*
  name: FindSingle
  href: api/NRules.Aggregators.AggregateExpressionExtensions.html#NRules_Aggregators_AggregateExpressionExtensions_FindSingle_
  commentId: Overload:NRules.Aggregators.AggregateExpressionExtensions.FindSingle
  isSpec: "True"
  fullName: NRules.Aggregators.AggregateExpressionExtensions.FindSingle
  nameWithType: AggregateExpressionExtensions.FindSingle
- uid: NRules.Aggregators.AggregationAction
  name: AggregationAction
  href: api/NRules.Aggregators.AggregationAction.html
  commentId: T:NRules.Aggregators.AggregationAction
  fullName: NRules.Aggregators.AggregationAction
  nameWithType: AggregationAction
- uid: NRules.Aggregators.AggregationAction.Added
  name: Added
  href: api/NRules.Aggregators.AggregationAction.html#NRules_Aggregators_AggregationAction_Added
  commentId: F:NRules.Aggregators.AggregationAction.Added
  fullName: NRules.Aggregators.AggregationAction.Added
  nameWithType: AggregationAction.Added
- uid: NRules.Aggregators.AggregationAction.Modified
  name: Modified
  href: api/NRules.Aggregators.AggregationAction.html#NRules_Aggregators_AggregationAction_Modified
  commentId: F:NRules.Aggregators.AggregationAction.Modified
  fullName: NRules.Aggregators.AggregationAction.Modified
  nameWithType: AggregationAction.Modified
- uid: NRules.Aggregators.AggregationAction.None
  name: None
  href: api/NRules.Aggregators.AggregationAction.html#NRules_Aggregators_AggregationAction_None
  commentId: F:NRules.Aggregators.AggregationAction.None
  fullName: NRules.Aggregators.AggregationAction.None
  nameWithType: AggregationAction.None
- uid: NRules.Aggregators.AggregationAction.Removed
  name: Removed
  href: api/NRules.Aggregators.AggregationAction.html#NRules_Aggregators_AggregationAction_Removed
  commentId: F:NRules.Aggregators.AggregationAction.Removed
  fullName: NRules.Aggregators.AggregationAction.Removed
  nameWithType: AggregationAction.Removed
- uid: NRules.Aggregators.AggregationContext
  name: AggregationContext
  href: api/NRules.Aggregators.AggregationContext.html
  commentId: T:NRules.Aggregators.AggregationContext
  fullName: NRules.Aggregators.AggregationContext
  nameWithType: AggregationContext
- uid: NRules.Aggregators.AggregationResult
  name: AggregationResult
  href: api/NRules.Aggregators.AggregationResult.html
  commentId: T:NRules.Aggregators.AggregationResult
  fullName: NRules.Aggregators.AggregationResult
  nameWithType: AggregationResult
- uid: NRules.Aggregators.AggregationResult.Action
  name: Action
  href: api/NRules.Aggregators.AggregationResult.html#NRules_Aggregators_AggregationResult_Action
  commentId: P:NRules.Aggregators.AggregationResult.Action
  fullName: NRules.Aggregators.AggregationResult.Action
  nameWithType: AggregationResult.Action
- uid: NRules.Aggregators.AggregationResult.Action*
  name: Action
  href: api/NRules.Aggregators.AggregationResult.html#NRules_Aggregators_AggregationResult_Action_
  commentId: Overload:NRules.Aggregators.AggregationResult.Action
  isSpec: "True"
  fullName: NRules.Aggregators.AggregationResult.Action
  nameWithType: AggregationResult.Action
- uid: NRules.Aggregators.AggregationResult.Added(System.Object,System.Collections.Generic.IEnumerable{NRules.RuleModel.IFact})
  name: Added(object, IEnumerable<IFact>)
  href: api/NRules.Aggregators.AggregationResult.html#NRules_Aggregators_AggregationResult_Added_System_Object_System_Collections_Generic_IEnumerable_NRules_RuleModel_IFact__
  commentId: M:NRules.Aggregators.AggregationResult.Added(System.Object,System.Collections.Generic.IEnumerable{NRules.RuleModel.IFact})
  name.vb: Added(Object, IEnumerable(Of IFact))
  fullName: NRules.Aggregators.AggregationResult.Added(object, System.Collections.Generic.IEnumerable<NRules.RuleModel.IFact>)
  fullName.vb: NRules.Aggregators.AggregationResult.Added(Object, System.Collections.Generic.IEnumerable(Of NRules.RuleModel.IFact))
  nameWithType: AggregationResult.Added(object, IEnumerable<IFact>)
  nameWithType.vb: AggregationResult.Added(Object, IEnumerable(Of IFact))
- uid: NRules.Aggregators.AggregationResult.Added*
  name: Added
  href: api/NRules.Aggregators.AggregationResult.html#NRules_Aggregators_AggregationResult_Added_
  commentId: Overload:NRules.Aggregators.AggregationResult.Added
  isSpec: "True"
  fullName: NRules.Aggregators.AggregationResult.Added
  nameWithType: AggregationResult.Added
- uid: NRules.Aggregators.AggregationResult.Aggregate
  name: Aggregate
  href: api/NRules.Aggregators.AggregationResult.html#NRules_Aggregators_AggregationResult_Aggregate
  commentId: P:NRules.Aggregators.AggregationResult.Aggregate
  fullName: NRules.Aggregators.AggregationResult.Aggregate
  nameWithType: AggregationResult.Aggregate
- uid: NRules.Aggregators.AggregationResult.Aggregate*
  name: Aggregate
  href: api/NRules.Aggregators.AggregationResult.html#NRules_Aggregators_AggregationResult_Aggregate_
  commentId: Overload:NRules.Aggregators.AggregationResult.Aggregate
  isSpec: "True"
  fullName: NRules.Aggregators.AggregationResult.Aggregate
  nameWithType: AggregationResult.Aggregate
- uid: NRules.Aggregators.AggregationResult.Empty
  name: Empty
  href: api/NRules.Aggregators.AggregationResult.html#NRules_Aggregators_AggregationResult_Empty
  commentId: F:NRules.Aggregators.AggregationResult.Empty
  fullName: NRules.Aggregators.AggregationResult.Empty
  nameWithType: AggregationResult.Empty
- uid: NRules.Aggregators.AggregationResult.Modified(System.Object,System.Object,System.Collections.Generic.IEnumerable{NRules.RuleModel.IFact})
  name: Modified(object, object, IEnumerable<IFact>)
  href: api/NRules.Aggregators.AggregationResult.html#NRules_Aggregators_AggregationResult_Modified_System_Object_System_Object_System_Collections_Generic_IEnumerable_NRules_RuleModel_IFact__
  commentId: M:NRules.Aggregators.AggregationResult.Modified(System.Object,System.Object,System.Collections.Generic.IEnumerable{NRules.RuleModel.IFact})
  name.vb: Modified(Object, Object, IEnumerable(Of IFact))
  fullName: NRules.Aggregators.AggregationResult.Modified(object, object, System.Collections.Generic.IEnumerable<NRules.RuleModel.IFact>)
  fullName.vb: NRules.Aggregators.AggregationResult.Modified(Object, Object, System.Collections.Generic.IEnumerable(Of NRules.RuleModel.IFact))
  nameWithType: AggregationResult.Modified(object, object, IEnumerable<IFact>)
  nameWithType.vb: AggregationResult.Modified(Object, Object, IEnumerable(Of IFact))
- uid: NRules.Aggregators.AggregationResult.Modified*
  name: Modified
  href: api/NRules.Aggregators.AggregationResult.html#NRules_Aggregators_AggregationResult_Modified_
  commentId: Overload:NRules.Aggregators.AggregationResult.Modified
  isSpec: "True"
  fullName: NRules.Aggregators.AggregationResult.Modified
  nameWithType: AggregationResult.Modified
- uid: NRules.Aggregators.AggregationResult.None(System.Object,System.Collections.Generic.IEnumerable{NRules.RuleModel.IFact})
  name: None(object, IEnumerable<IFact>)
  href: api/NRules.Aggregators.AggregationResult.html#NRules_Aggregators_AggregationResult_None_System_Object_System_Collections_Generic_IEnumerable_NRules_RuleModel_IFact__
  commentId: M:NRules.Aggregators.AggregationResult.None(System.Object,System.Collections.Generic.IEnumerable{NRules.RuleModel.IFact})
  name.vb: None(Object, IEnumerable(Of IFact))
  fullName: NRules.Aggregators.AggregationResult.None(object, System.Collections.Generic.IEnumerable<NRules.RuleModel.IFact>)
  fullName.vb: NRules.Aggregators.AggregationResult.None(Object, System.Collections.Generic.IEnumerable(Of NRules.RuleModel.IFact))
  nameWithType: AggregationResult.None(object, IEnumerable<IFact>)
  nameWithType.vb: AggregationResult.None(Object, IEnumerable(Of IFact))
- uid: NRules.Aggregators.AggregationResult.None*
  name: None
  href: api/NRules.Aggregators.AggregationResult.html#NRules_Aggregators_AggregationResult_None_
  commentId: Overload:NRules.Aggregators.AggregationResult.None
  isSpec: "True"
  fullName: NRules.Aggregators.AggregationResult.None
  nameWithType: AggregationResult.None
- uid: NRules.Aggregators.AggregationResult.Previous
  name: Previous
  href: api/NRules.Aggregators.AggregationResult.html#NRules_Aggregators_AggregationResult_Previous
  commentId: P:NRules.Aggregators.AggregationResult.Previous
  fullName: NRules.Aggregators.AggregationResult.Previous
  nameWithType: AggregationResult.Previous
- uid: NRules.Aggregators.AggregationResult.Previous*
  name: Previous
  href: api/NRules.Aggregators.AggregationResult.html#NRules_Aggregators_AggregationResult_Previous_
  commentId: Overload:NRules.Aggregators.AggregationResult.Previous
  isSpec: "True"
  fullName: NRules.Aggregators.AggregationResult.Previous
  nameWithType: AggregationResult.Previous
- uid: NRules.Aggregators.AggregationResult.Removed(System.Object)
  name: Removed(object)
  href: api/NRules.Aggregators.AggregationResult.html#NRules_Aggregators_AggregationResult_Removed_System_Object_
  commentId: M:NRules.Aggregators.AggregationResult.Removed(System.Object)
  name.vb: Removed(Object)
  fullName: NRules.Aggregators.AggregationResult.Removed(object)
  fullName.vb: NRules.Aggregators.AggregationResult.Removed(Object)
  nameWithType: AggregationResult.Removed(object)
  nameWithType.vb: AggregationResult.Removed(Object)
- uid: NRules.Aggregators.AggregationResult.Removed*
  name: Removed
  href: api/NRules.Aggregators.AggregationResult.html#NRules_Aggregators_AggregationResult_Removed_
  commentId: Overload:NRules.Aggregators.AggregationResult.Removed
  isSpec: "True"
  fullName: NRules.Aggregators.AggregationResult.Removed
  nameWithType: AggregationResult.Removed
- uid: NRules.Aggregators.AggregationResult.Source
  name: Source
  href: api/NRules.Aggregators.AggregationResult.html#NRules_Aggregators_AggregationResult_Source
  commentId: P:NRules.Aggregators.AggregationResult.Source
  fullName: NRules.Aggregators.AggregationResult.Source
  nameWithType: AggregationResult.Source
- uid: NRules.Aggregators.AggregationResult.Source*
  name: Source
  href: api/NRules.Aggregators.AggregationResult.html#NRules_Aggregators_AggregationResult_Source_
  commentId: Overload:NRules.Aggregators.AggregationResult.Source
  isSpec: "True"
  fullName: NRules.Aggregators.AggregationResult.Source
  nameWithType: AggregationResult.Source
- uid: NRules.Aggregators.AggregatorRegistry
  name: AggregatorRegistry
  href: api/NRules.Aggregators.AggregatorRegistry.html
  commentId: T:NRules.Aggregators.AggregatorRegistry
  fullName: NRules.Aggregators.AggregatorRegistry
  nameWithType: AggregatorRegistry
- uid: NRules.Aggregators.AggregatorRegistry.RegisterFactory(System.String,System.Type)
  name: RegisterFactory(string, Type)
  href: api/NRules.Aggregators.AggregatorRegistry.html#NRules_Aggregators_AggregatorRegistry_RegisterFactory_System_String_System_Type_
  commentId: M:NRules.Aggregators.AggregatorRegistry.RegisterFactory(System.String,System.Type)
  name.vb: RegisterFactory(String, Type)
  fullName: NRules.Aggregators.AggregatorRegistry.RegisterFactory(string, System.Type)
  fullName.vb: NRules.Aggregators.AggregatorRegistry.RegisterFactory(String, System.Type)
  nameWithType: AggregatorRegistry.RegisterFactory(string, Type)
  nameWithType.vb: AggregatorRegistry.RegisterFactory(String, Type)
- uid: NRules.Aggregators.AggregatorRegistry.RegisterFactory*
  name: RegisterFactory
  href: api/NRules.Aggregators.AggregatorRegistry.html#NRules_Aggregators_AggregatorRegistry_RegisterFactory_
  commentId: Overload:NRules.Aggregators.AggregatorRegistry.RegisterFactory
  isSpec: "True"
  fullName: NRules.Aggregators.AggregatorRegistry.RegisterFactory
  nameWithType: AggregatorRegistry.RegisterFactory
- uid: NRules.Aggregators.IAggregateExpression
  name: IAggregateExpression
  href: api/NRules.Aggregators.IAggregateExpression.html
  commentId: T:NRules.Aggregators.IAggregateExpression
  fullName: NRules.Aggregators.IAggregateExpression
  nameWithType: IAggregateExpression
- uid: NRules.Aggregators.IAggregateExpression.Invoke(NRules.Aggregators.AggregationContext,NRules.RuleModel.ITuple,NRules.RuleModel.IFact)
  name: Invoke(AggregationContext, ITuple, IFact)
  href: api/NRules.Aggregators.IAggregateExpression.html#NRules_Aggregators_IAggregateExpression_Invoke_NRules_Aggregators_AggregationContext_NRules_RuleModel_ITuple_NRules_RuleModel_IFact_
  commentId: M:NRules.Aggregators.IAggregateExpression.Invoke(NRules.Aggregators.AggregationContext,NRules.RuleModel.ITuple,NRules.RuleModel.IFact)
  fullName: NRules.Aggregators.IAggregateExpression.Invoke(NRules.Aggregators.AggregationContext, NRules.RuleModel.ITuple, NRules.RuleModel.IFact)
  nameWithType: IAggregateExpression.Invoke(AggregationContext, ITuple, IFact)
- uid: NRules.Aggregators.IAggregateExpression.Invoke*
  name: Invoke
  href: api/NRules.Aggregators.IAggregateExpression.html#NRules_Aggregators_IAggregateExpression_Invoke_
  commentId: Overload:NRules.Aggregators.IAggregateExpression.Invoke
  isSpec: "True"
  fullName: NRules.Aggregators.IAggregateExpression.Invoke
  nameWithType: IAggregateExpression.Invoke
- uid: NRules.Aggregators.IAggregateExpression.Name
  name: Name
  href: api/NRules.Aggregators.IAggregateExpression.html#NRules_Aggregators_IAggregateExpression_Name
  commentId: P:NRules.Aggregators.IAggregateExpression.Name
  fullName: NRules.Aggregators.IAggregateExpression.Name
  nameWithType: IAggregateExpression.Name
- uid: NRules.Aggregators.IAggregateExpression.Name*
  name: Name
  href: api/NRules.Aggregators.IAggregateExpression.html#NRules_Aggregators_IAggregateExpression_Name_
  commentId: Overload:NRules.Aggregators.IAggregateExpression.Name
  isSpec: "True"
  fullName: NRules.Aggregators.IAggregateExpression.Name
  nameWithType: IAggregateExpression.Name
- uid: NRules.Aggregators.IAggregator
  name: IAggregator
  href: api/NRules.Aggregators.IAggregator.html
  commentId: T:NRules.Aggregators.IAggregator
  fullName: NRules.Aggregators.IAggregator
  nameWithType: IAggregator
- uid: NRules.Aggregators.IAggregator.Add(NRules.Aggregators.AggregationContext,NRules.RuleModel.ITuple,System.Collections.Generic.IEnumerable{NRules.RuleModel.IFact})
  name: Add(AggregationContext, ITuple, IEnumerable<IFact>)
  href: api/NRules.Aggregators.IAggregator.html#NRules_Aggregators_IAggregator_Add_NRules_Aggregators_AggregationContext_NRules_RuleModel_ITuple_System_Collections_Generic_IEnumerable_NRules_RuleModel_IFact__
  commentId: M:NRules.Aggregators.IAggregator.Add(NRules.Aggregators.AggregationContext,NRules.RuleModel.ITuple,System.Collections.Generic.IEnumerable{NRules.RuleModel.IFact})
  name.vb: Add(AggregationContext, ITuple, IEnumerable(Of IFact))
  fullName: NRules.Aggregators.IAggregator.Add(NRules.Aggregators.AggregationContext, NRules.RuleModel.ITuple, System.Collections.Generic.IEnumerable<NRules.RuleModel.IFact>)
  fullName.vb: NRules.Aggregators.IAggregator.Add(NRules.Aggregators.AggregationContext, NRules.RuleModel.ITuple, System.Collections.Generic.IEnumerable(Of NRules.RuleModel.IFact))
  nameWithType: IAggregator.Add(AggregationContext, ITuple, IEnumerable<IFact>)
  nameWithType.vb: IAggregator.Add(AggregationContext, ITuple, IEnumerable(Of IFact))
- uid: NRules.Aggregators.IAggregator.Add*
  name: Add
  href: api/NRules.Aggregators.IAggregator.html#NRules_Aggregators_IAggregator_Add_
  commentId: Overload:NRules.Aggregators.IAggregator.Add
  isSpec: "True"
  fullName: NRules.Aggregators.IAggregator.Add
  nameWithType: IAggregator.Add
- uid: NRules.Aggregators.IAggregator.Modify(NRules.Aggregators.AggregationContext,NRules.RuleModel.ITuple,System.Collections.Generic.IEnumerable{NRules.RuleModel.IFact})
  name: Modify(AggregationContext, ITuple, IEnumerable<IFact>)
  href: api/NRules.Aggregators.IAggregator.html#NRules_Aggregators_IAggregator_Modify_NRules_Aggregators_AggregationContext_NRules_RuleModel_ITuple_System_Collections_Generic_IEnumerable_NRules_RuleModel_IFact__
  commentId: M:NRules.Aggregators.IAggregator.Modify(NRules.Aggregators.AggregationContext,NRules.RuleModel.ITuple,System.Collections.Generic.IEnumerable{NRules.RuleModel.IFact})
  name.vb: Modify(AggregationContext, ITuple, IEnumerable(Of IFact))
  fullName: NRules.Aggregators.IAggregator.Modify(NRules.Aggregators.AggregationContext, NRules.RuleModel.ITuple, System.Collections.Generic.IEnumerable<NRules.RuleModel.IFact>)
  fullName.vb: NRules.Aggregators.IAggregator.Modify(NRules.Aggregators.AggregationContext, NRules.RuleModel.ITuple, System.Collections.Generic.IEnumerable(Of NRules.RuleModel.IFact))
  nameWithType: IAggregator.Modify(AggregationContext, ITuple, IEnumerable<IFact>)
  nameWithType.vb: IAggregator.Modify(AggregationContext, ITuple, IEnumerable(Of IFact))
- uid: NRules.Aggregators.IAggregator.Modify*
  name: Modify
  href: api/NRules.Aggregators.IAggregator.html#NRules_Aggregators_IAggregator_Modify_
  commentId: Overload:NRules.Aggregators.IAggregator.Modify
  isSpec: "True"
  fullName: NRules.Aggregators.IAggregator.Modify
  nameWithType: IAggregator.Modify
- uid: NRules.Aggregators.IAggregator.Remove(NRules.Aggregators.AggregationContext,NRules.RuleModel.ITuple,System.Collections.Generic.IEnumerable{NRules.RuleModel.IFact})
  name: Remove(AggregationContext, ITuple, IEnumerable<IFact>)
  href: api/NRules.Aggregators.IAggregator.html#NRules_Aggregators_IAggregator_Remove_NRules_Aggregators_AggregationContext_NRules_RuleModel_ITuple_System_Collections_Generic_IEnumerable_NRules_RuleModel_IFact__
  commentId: M:NRules.Aggregators.IAggregator.Remove(NRules.Aggregators.AggregationContext,NRules.RuleModel.ITuple,System.Collections.Generic.IEnumerable{NRules.RuleModel.IFact})
  name.vb: Remove(AggregationContext, ITuple, IEnumerable(Of IFact))
  fullName: NRules.Aggregators.IAggregator.Remove(NRules.Aggregators.AggregationContext, NRules.RuleModel.ITuple, System.Collections.Generic.IEnumerable<NRules.RuleModel.IFact>)
  fullName.vb: NRules.Aggregators.IAggregator.Remove(NRules.Aggregators.AggregationContext, NRules.RuleModel.ITuple, System.Collections.Generic.IEnumerable(Of NRules.RuleModel.IFact))
  nameWithType: IAggregator.Remove(AggregationContext, ITuple, IEnumerable<IFact>)
  nameWithType.vb: IAggregator.Remove(AggregationContext, ITuple, IEnumerable(Of IFact))
- uid: NRules.Aggregators.IAggregator.Remove*
  name: Remove
  href: api/NRules.Aggregators.IAggregator.html#NRules_Aggregators_IAggregator_Remove_
  commentId: Overload:NRules.Aggregators.IAggregator.Remove
  isSpec: "True"
  fullName: NRules.Aggregators.IAggregator.Remove
  nameWithType: IAggregator.Remove
- uid: NRules.Aggregators.IAggregatorFactory
  name: IAggregatorFactory
  href: api/NRules.Aggregators.IAggregatorFactory.html
  commentId: T:NRules.Aggregators.IAggregatorFactory
  fullName: NRules.Aggregators.IAggregatorFactory
  nameWithType: IAggregatorFactory
- uid: NRules.Aggregators.IAggregatorFactory.Compile(NRules.RuleModel.AggregateElement,System.Collections.Generic.IEnumerable{NRules.Aggregators.IAggregateExpression})
  name: Compile(AggregateElement, IEnumerable<IAggregateExpression>)
  href: api/NRules.Aggregators.IAggregatorFactory.html#NRules_Aggregators_IAggregatorFactory_Compile_NRules_RuleModel_AggregateElement_System_Collections_Generic_IEnumerable_NRules_Aggregators_IAggregateExpression__
  commentId: M:NRules.Aggregators.IAggregatorFactory.Compile(NRules.RuleModel.AggregateElement,System.Collections.Generic.IEnumerable{NRules.Aggregators.IAggregateExpression})
  name.vb: Compile(AggregateElement, IEnumerable(Of IAggregateExpression))
  fullName: NRules.Aggregators.IAggregatorFactory.Compile(NRules.RuleModel.AggregateElement, System.Collections.Generic.IEnumerable<NRules.Aggregators.IAggregateExpression>)
  fullName.vb: NRules.Aggregators.IAggregatorFactory.Compile(NRules.RuleModel.AggregateElement, System.Collections.Generic.IEnumerable(Of NRules.Aggregators.IAggregateExpression))
  nameWithType: IAggregatorFactory.Compile(AggregateElement, IEnumerable<IAggregateExpression>)
  nameWithType.vb: IAggregatorFactory.Compile(AggregateElement, IEnumerable(Of IAggregateExpression))
- uid: NRules.Aggregators.IAggregatorFactory.Compile*
  name: Compile
  href: api/NRules.Aggregators.IAggregatorFactory.html#NRules_Aggregators_IAggregatorFactory_Compile_
  commentId: Overload:NRules.Aggregators.IAggregatorFactory.Compile
  isSpec: "True"
  fullName: NRules.Aggregators.IAggregatorFactory.Compile
  nameWithType: IAggregatorFactory.Compile
- uid: NRules.Aggregators.IAggregatorFactory.Create
  name: Create()
  href: api/NRules.Aggregators.IAggregatorFactory.html#NRules_Aggregators_IAggregatorFactory_Create
  commentId: M:NRules.Aggregators.IAggregatorFactory.Create
  fullName: NRules.Aggregators.IAggregatorFactory.Create()
  nameWithType: IAggregatorFactory.Create()
- uid: NRules.Aggregators.IAggregatorFactory.Create*
  name: Create
  href: api/NRules.Aggregators.IAggregatorFactory.html#NRules_Aggregators_IAggregatorFactory_Create_
  commentId: Overload:NRules.Aggregators.IAggregatorFactory.Create
  isSpec: "True"
  fullName: NRules.Aggregators.IAggregatorFactory.Create
  nameWithType: IAggregatorFactory.Create
- uid: NRules.BatchOptions
  name: BatchOptions
  href: api/NRules.BatchOptions.html
  commentId: T:NRules.BatchOptions
  fullName: NRules.BatchOptions
  nameWithType: BatchOptions
- uid: NRules.BatchOptions.AllOrNothing
  name: AllOrNothing
  href: api/NRules.BatchOptions.html#NRules_BatchOptions_AllOrNothing
  commentId: F:NRules.BatchOptions.AllOrNothing
  fullName: NRules.BatchOptions.AllOrNothing
  nameWithType: BatchOptions.AllOrNothing
- uid: NRules.BatchOptions.SkipFailed
  name: SkipFailed
  href: api/NRules.BatchOptions.html#NRules_BatchOptions_SkipFailed
  commentId: F:NRules.BatchOptions.SkipFailed
  fullName: NRules.BatchOptions.SkipFailed
  nameWithType: BatchOptions.SkipFailed
- uid: NRules.Diagnostics
  name: NRules.Diagnostics
  href: api/NRules.Diagnostics.html
  commentId: N:NRules.Diagnostics
  fullName: NRules.Diagnostics
  nameWithType: NRules.Diagnostics
- uid: NRules.Diagnostics.AgendaEventArgs
  name: AgendaEventArgs
  href: api/NRules.Diagnostics.AgendaEventArgs.html
  commentId: T:NRules.Diagnostics.AgendaEventArgs
  fullName: NRules.Diagnostics.AgendaEventArgs
  nameWithType: AgendaEventArgs
- uid: NRules.Diagnostics.AgendaEventArgs.#ctor(NRules.RuleModel.IMatch)
  name: AgendaEventArgs(IMatch)
  href: api/NRules.Diagnostics.AgendaEventArgs.html#NRules_Diagnostics_AgendaEventArgs__ctor_NRules_RuleModel_IMatch_
  commentId: M:NRules.Diagnostics.AgendaEventArgs.#ctor(NRules.RuleModel.IMatch)
  name.vb: New(IMatch)
  fullName: NRules.Diagnostics.AgendaEventArgs.AgendaEventArgs(NRules.RuleModel.IMatch)
  fullName.vb: NRules.Diagnostics.AgendaEventArgs.New(NRules.RuleModel.IMatch)
  nameWithType: AgendaEventArgs.AgendaEventArgs(IMatch)
  nameWithType.vb: AgendaEventArgs.New(IMatch)
- uid: NRules.Diagnostics.AgendaEventArgs.#ctor*
  name: AgendaEventArgs
  href: api/NRules.Diagnostics.AgendaEventArgs.html#NRules_Diagnostics_AgendaEventArgs__ctor_
  commentId: Overload:NRules.Diagnostics.AgendaEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Diagnostics.AgendaEventArgs.AgendaEventArgs
  fullName.vb: NRules.Diagnostics.AgendaEventArgs.New
  nameWithType: AgendaEventArgs.AgendaEventArgs
  nameWithType.vb: AgendaEventArgs.New
- uid: NRules.Diagnostics.AgendaEventArgs.Facts
  name: Facts
  href: api/NRules.Diagnostics.AgendaEventArgs.html#NRules_Diagnostics_AgendaEventArgs_Facts
  commentId: P:NRules.Diagnostics.AgendaEventArgs.Facts
  fullName: NRules.Diagnostics.AgendaEventArgs.Facts
  nameWithType: AgendaEventArgs.Facts
- uid: NRules.Diagnostics.AgendaEventArgs.Facts*
  name: Facts
  href: api/NRules.Diagnostics.AgendaEventArgs.html#NRules_Diagnostics_AgendaEventArgs_Facts_
  commentId: Overload:NRules.Diagnostics.AgendaEventArgs.Facts
  isSpec: "True"
  fullName: NRules.Diagnostics.AgendaEventArgs.Facts
  nameWithType: AgendaEventArgs.Facts
- uid: NRules.Diagnostics.AgendaEventArgs.Match
  name: Match
  href: api/NRules.Diagnostics.AgendaEventArgs.html#NRules_Diagnostics_AgendaEventArgs_Match
  commentId: P:NRules.Diagnostics.AgendaEventArgs.Match
  fullName: NRules.Diagnostics.AgendaEventArgs.Match
  nameWithType: AgendaEventArgs.Match
- uid: NRules.Diagnostics.AgendaEventArgs.Match*
  name: Match
  href: api/NRules.Diagnostics.AgendaEventArgs.html#NRules_Diagnostics_AgendaEventArgs_Match_
  commentId: Overload:NRules.Diagnostics.AgendaEventArgs.Match
  isSpec: "True"
  fullName: NRules.Diagnostics.AgendaEventArgs.Match
  nameWithType: AgendaEventArgs.Match
- uid: NRules.Diagnostics.AgendaEventArgs.Rule
  name: Rule
  href: api/NRules.Diagnostics.AgendaEventArgs.html#NRules_Diagnostics_AgendaEventArgs_Rule
  commentId: P:NRules.Diagnostics.AgendaEventArgs.Rule
  fullName: NRules.Diagnostics.AgendaEventArgs.Rule
  nameWithType: AgendaEventArgs.Rule
- uid: NRules.Diagnostics.AgendaEventArgs.Rule*
  name: Rule
  href: api/NRules.Diagnostics.AgendaEventArgs.html#NRules_Diagnostics_AgendaEventArgs_Rule_
  commentId: Overload:NRules.Diagnostics.AgendaEventArgs.Rule
  isSpec: "True"
  fullName: NRules.Diagnostics.AgendaEventArgs.Rule
  nameWithType: AgendaEventArgs.Rule
- uid: NRules.Diagnostics.AgendaExpressionErrorEventArgs
  name: AgendaExpressionErrorEventArgs
  href: api/NRules.Diagnostics.AgendaExpressionErrorEventArgs.html
  commentId: T:NRules.Diagnostics.AgendaExpressionErrorEventArgs
  fullName: NRules.Diagnostics.AgendaExpressionErrorEventArgs
  nameWithType: AgendaExpressionErrorEventArgs
- uid: NRules.Diagnostics.AgendaExpressionErrorEventArgs.#ctor(System.Linq.Expressions.Expression,System.Exception,System.Object[],NRules.RuleModel.IMatch)
  name: AgendaExpressionErrorEventArgs(Expression, Exception, object[], IMatch)
  href: api/NRules.Diagnostics.AgendaExpressionErrorEventArgs.html#NRules_Diagnostics_AgendaExpressionErrorEventArgs__ctor_System_Linq_Expressions_Expression_System_Exception_System_Object___NRules_RuleModel_IMatch_
  commentId: M:NRules.Diagnostics.AgendaExpressionErrorEventArgs.#ctor(System.Linq.Expressions.Expression,System.Exception,System.Object[],NRules.RuleModel.IMatch)
  name.vb: New(Expression, Exception, Object(), IMatch)
  fullName: NRules.Diagnostics.AgendaExpressionErrorEventArgs.AgendaExpressionErrorEventArgs(System.Linq.Expressions.Expression, System.Exception, object[], NRules.RuleModel.IMatch)
  fullName.vb: NRules.Diagnostics.AgendaExpressionErrorEventArgs.New(System.Linq.Expressions.Expression, System.Exception, Object(), NRules.RuleModel.IMatch)
  nameWithType: AgendaExpressionErrorEventArgs.AgendaExpressionErrorEventArgs(Expression, Exception, object[], IMatch)
  nameWithType.vb: AgendaExpressionErrorEventArgs.New(Expression, Exception, Object(), IMatch)
- uid: NRules.Diagnostics.AgendaExpressionErrorEventArgs.#ctor*
  name: AgendaExpressionErrorEventArgs
  href: api/NRules.Diagnostics.AgendaExpressionErrorEventArgs.html#NRules_Diagnostics_AgendaExpressionErrorEventArgs__ctor_
  commentId: Overload:NRules.Diagnostics.AgendaExpressionErrorEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Diagnostics.AgendaExpressionErrorEventArgs.AgendaExpressionErrorEventArgs
  fullName.vb: NRules.Diagnostics.AgendaExpressionErrorEventArgs.New
  nameWithType: AgendaExpressionErrorEventArgs.AgendaExpressionErrorEventArgs
  nameWithType.vb: AgendaExpressionErrorEventArgs.New
- uid: NRules.Diagnostics.AgendaExpressionErrorEventArgs.IsHandled
  name: IsHandled
  href: api/NRules.Diagnostics.AgendaExpressionErrorEventArgs.html#NRules_Diagnostics_AgendaExpressionErrorEventArgs_IsHandled
  commentId: P:NRules.Diagnostics.AgendaExpressionErrorEventArgs.IsHandled
  fullName: NRules.Diagnostics.AgendaExpressionErrorEventArgs.IsHandled
  nameWithType: AgendaExpressionErrorEventArgs.IsHandled
- uid: NRules.Diagnostics.AgendaExpressionErrorEventArgs.IsHandled*
  name: IsHandled
  href: api/NRules.Diagnostics.AgendaExpressionErrorEventArgs.html#NRules_Diagnostics_AgendaExpressionErrorEventArgs_IsHandled_
  commentId: Overload:NRules.Diagnostics.AgendaExpressionErrorEventArgs.IsHandled
  isSpec: "True"
  fullName: NRules.Diagnostics.AgendaExpressionErrorEventArgs.IsHandled
  nameWithType: AgendaExpressionErrorEventArgs.IsHandled
- uid: NRules.Diagnostics.AgendaExpressionEventArgs
  name: AgendaExpressionEventArgs
  href: api/NRules.Diagnostics.AgendaExpressionEventArgs.html
  commentId: T:NRules.Diagnostics.AgendaExpressionEventArgs
  fullName: NRules.Diagnostics.AgendaExpressionEventArgs
  nameWithType: AgendaExpressionEventArgs
- uid: NRules.Diagnostics.AgendaExpressionEventArgs.#ctor(System.Linq.Expressions.Expression,System.Exception,System.Object[],System.Object,NRules.RuleModel.IMatch)
  name: AgendaExpressionEventArgs(Expression, Exception, object[], object, IMatch)
  href: api/NRules.Diagnostics.AgendaExpressionEventArgs.html#NRules_Diagnostics_AgendaExpressionEventArgs__ctor_System_Linq_Expressions_Expression_System_Exception_System_Object___System_Object_NRules_RuleModel_IMatch_
  commentId: M:NRules.Diagnostics.AgendaExpressionEventArgs.#ctor(System.Linq.Expressions.Expression,System.Exception,System.Object[],System.Object,NRules.RuleModel.IMatch)
  name.vb: New(Expression, Exception, Object(), Object, IMatch)
  fullName: NRules.Diagnostics.AgendaExpressionEventArgs.AgendaExpressionEventArgs(System.Linq.Expressions.Expression, System.Exception, object[], object, NRules.RuleModel.IMatch)
  fullName.vb: NRules.Diagnostics.AgendaExpressionEventArgs.New(System.Linq.Expressions.Expression, System.Exception, Object(), Object, NRules.RuleModel.IMatch)
  nameWithType: AgendaExpressionEventArgs.AgendaExpressionEventArgs(Expression, Exception, object[], object, IMatch)
  nameWithType.vb: AgendaExpressionEventArgs.New(Expression, Exception, Object(), Object, IMatch)
- uid: NRules.Diagnostics.AgendaExpressionEventArgs.#ctor*
  name: AgendaExpressionEventArgs
  href: api/NRules.Diagnostics.AgendaExpressionEventArgs.html#NRules_Diagnostics_AgendaExpressionEventArgs__ctor_
  commentId: Overload:NRules.Diagnostics.AgendaExpressionEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Diagnostics.AgendaExpressionEventArgs.AgendaExpressionEventArgs
  fullName.vb: NRules.Diagnostics.AgendaExpressionEventArgs.New
  nameWithType: AgendaExpressionEventArgs.AgendaExpressionEventArgs
  nameWithType.vb: AgendaExpressionEventArgs.New
- uid: NRules.Diagnostics.AgendaExpressionEventArgs.Facts
  name: Facts
  href: api/NRules.Diagnostics.AgendaExpressionEventArgs.html#NRules_Diagnostics_AgendaExpressionEventArgs_Facts
  commentId: P:NRules.Diagnostics.AgendaExpressionEventArgs.Facts
  fullName: NRules.Diagnostics.AgendaExpressionEventArgs.Facts
  nameWithType: AgendaExpressionEventArgs.Facts
- uid: NRules.Diagnostics.AgendaExpressionEventArgs.Facts*
  name: Facts
  href: api/NRules.Diagnostics.AgendaExpressionEventArgs.html#NRules_Diagnostics_AgendaExpressionEventArgs_Facts_
  commentId: Overload:NRules.Diagnostics.AgendaExpressionEventArgs.Facts
  isSpec: "True"
  fullName: NRules.Diagnostics.AgendaExpressionEventArgs.Facts
  nameWithType: AgendaExpressionEventArgs.Facts
- uid: NRules.Diagnostics.AgendaExpressionEventArgs.Match
  name: Match
  href: api/NRules.Diagnostics.AgendaExpressionEventArgs.html#NRules_Diagnostics_AgendaExpressionEventArgs_Match
  commentId: P:NRules.Diagnostics.AgendaExpressionEventArgs.Match
  fullName: NRules.Diagnostics.AgendaExpressionEventArgs.Match
  nameWithType: AgendaExpressionEventArgs.Match
- uid: NRules.Diagnostics.AgendaExpressionEventArgs.Match*
  name: Match
  href: api/NRules.Diagnostics.AgendaExpressionEventArgs.html#NRules_Diagnostics_AgendaExpressionEventArgs_Match_
  commentId: Overload:NRules.Diagnostics.AgendaExpressionEventArgs.Match
  isSpec: "True"
  fullName: NRules.Diagnostics.AgendaExpressionEventArgs.Match
  nameWithType: AgendaExpressionEventArgs.Match
- uid: NRules.Diagnostics.AgendaExpressionEventArgs.Rule
  name: Rule
  href: api/NRules.Diagnostics.AgendaExpressionEventArgs.html#NRules_Diagnostics_AgendaExpressionEventArgs_Rule
  commentId: P:NRules.Diagnostics.AgendaExpressionEventArgs.Rule
  fullName: NRules.Diagnostics.AgendaExpressionEventArgs.Rule
  nameWithType: AgendaExpressionEventArgs.Rule
- uid: NRules.Diagnostics.AgendaExpressionEventArgs.Rule*
  name: Rule
  href: api/NRules.Diagnostics.AgendaExpressionEventArgs.html#NRules_Diagnostics_AgendaExpressionEventArgs_Rule_
  commentId: Overload:NRules.Diagnostics.AgendaExpressionEventArgs.Rule
  isSpec: "True"
  fullName: NRules.Diagnostics.AgendaExpressionEventArgs.Rule
  nameWithType: AgendaExpressionEventArgs.Rule
- uid: NRules.Diagnostics.Dgml
  name: NRules.Diagnostics.Dgml
  href: api/NRules.Diagnostics.Dgml.html
  commentId: N:NRules.Diagnostics.Dgml
  fullName: NRules.Diagnostics.Dgml
  nameWithType: NRules.Diagnostics.Dgml
- uid: NRules.Diagnostics.Dgml.DgmlWriter
  name: DgmlWriter
  href: api/NRules.Diagnostics.Dgml.DgmlWriter.html
  commentId: T:NRules.Diagnostics.Dgml.DgmlWriter
  fullName: NRules.Diagnostics.Dgml.DgmlWriter
  nameWithType: DgmlWriter
- uid: NRules.Diagnostics.Dgml.DgmlWriter.#ctor(NRules.Diagnostics.ReteGraph)
  name: DgmlWriter(ReteGraph)
  href: api/NRules.Diagnostics.Dgml.DgmlWriter.html#NRules_Diagnostics_Dgml_DgmlWriter__ctor_NRules_Diagnostics_ReteGraph_
  commentId: M:NRules.Diagnostics.Dgml.DgmlWriter.#ctor(NRules.Diagnostics.ReteGraph)
  name.vb: New(ReteGraph)
  fullName: NRules.Diagnostics.Dgml.DgmlWriter.DgmlWriter(NRules.Diagnostics.ReteGraph)
  fullName.vb: NRules.Diagnostics.Dgml.DgmlWriter.New(NRules.Diagnostics.ReteGraph)
  nameWithType: DgmlWriter.DgmlWriter(ReteGraph)
  nameWithType.vb: DgmlWriter.New(ReteGraph)
- uid: NRules.Diagnostics.Dgml.DgmlWriter.#ctor*
  name: DgmlWriter
  href: api/NRules.Diagnostics.Dgml.DgmlWriter.html#NRules_Diagnostics_Dgml_DgmlWriter__ctor_
  commentId: Overload:NRules.Diagnostics.Dgml.DgmlWriter.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Diagnostics.Dgml.DgmlWriter.DgmlWriter
  fullName.vb: NRules.Diagnostics.Dgml.DgmlWriter.New
  nameWithType: DgmlWriter.DgmlWriter
  nameWithType.vb: DgmlWriter.New
- uid: NRules.Diagnostics.Dgml.DgmlWriter.GetContents
  name: GetContents()
  href: api/NRules.Diagnostics.Dgml.DgmlWriter.html#NRules_Diagnostics_Dgml_DgmlWriter_GetContents
  commentId: M:NRules.Diagnostics.Dgml.DgmlWriter.GetContents
  fullName: NRules.Diagnostics.Dgml.DgmlWriter.GetContents()
  nameWithType: DgmlWriter.GetContents()
- uid: NRules.Diagnostics.Dgml.DgmlWriter.GetContents*
  name: GetContents
  href: api/NRules.Diagnostics.Dgml.DgmlWriter.html#NRules_Diagnostics_Dgml_DgmlWriter_GetContents_
  commentId: Overload:NRules.Diagnostics.Dgml.DgmlWriter.GetContents
  isSpec: "True"
  fullName: NRules.Diagnostics.Dgml.DgmlWriter.GetContents
  nameWithType: DgmlWriter.GetContents
- uid: NRules.Diagnostics.Dgml.DgmlWriter.SetMetricsProvider(NRules.Diagnostics.IMetricsProvider)
  name: SetMetricsProvider(IMetricsProvider)
  href: api/NRules.Diagnostics.Dgml.DgmlWriter.html#NRules_Diagnostics_Dgml_DgmlWriter_SetMetricsProvider_NRules_Diagnostics_IMetricsProvider_
  commentId: M:NRules.Diagnostics.Dgml.DgmlWriter.SetMetricsProvider(NRules.Diagnostics.IMetricsProvider)
  fullName: NRules.Diagnostics.Dgml.DgmlWriter.SetMetricsProvider(NRules.Diagnostics.IMetricsProvider)
  nameWithType: DgmlWriter.SetMetricsProvider(IMetricsProvider)
- uid: NRules.Diagnostics.Dgml.DgmlWriter.SetMetricsProvider*
  name: SetMetricsProvider
  href: api/NRules.Diagnostics.Dgml.DgmlWriter.html#NRules_Diagnostics_Dgml_DgmlWriter_SetMetricsProvider_
  commentId: Overload:NRules.Diagnostics.Dgml.DgmlWriter.SetMetricsProvider
  isSpec: "True"
  fullName: NRules.Diagnostics.Dgml.DgmlWriter.SetMetricsProvider
  nameWithType: DgmlWriter.SetMetricsProvider
- uid: NRules.Diagnostics.Dgml.DgmlWriter.SetRuleFilter(System.Collections.Generic.IEnumerable{System.String})
  name: SetRuleFilter(IEnumerable<string>)
  href: api/NRules.Diagnostics.Dgml.DgmlWriter.html#NRules_Diagnostics_Dgml_DgmlWriter_SetRuleFilter_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:NRules.Diagnostics.Dgml.DgmlWriter.SetRuleFilter(System.Collections.Generic.IEnumerable{System.String})
  name.vb: SetRuleFilter(IEnumerable(Of String))
  fullName: NRules.Diagnostics.Dgml.DgmlWriter.SetRuleFilter(System.Collections.Generic.IEnumerable<string>)
  fullName.vb: NRules.Diagnostics.Dgml.DgmlWriter.SetRuleFilter(System.Collections.Generic.IEnumerable(Of String))
  nameWithType: DgmlWriter.SetRuleFilter(IEnumerable<string>)
  nameWithType.vb: DgmlWriter.SetRuleFilter(IEnumerable(Of String))
- uid: NRules.Diagnostics.Dgml.DgmlWriter.SetRuleFilter*
  name: SetRuleFilter
  href: api/NRules.Diagnostics.Dgml.DgmlWriter.html#NRules_Diagnostics_Dgml_DgmlWriter_SetRuleFilter_
  commentId: Overload:NRules.Diagnostics.Dgml.DgmlWriter.SetRuleFilter
  isSpec: "True"
  fullName: NRules.Diagnostics.Dgml.DgmlWriter.SetRuleFilter
  nameWithType: DgmlWriter.SetRuleFilter
- uid: NRules.Diagnostics.Dgml.DgmlWriter.WriteAllText(System.String)
  name: WriteAllText(string)
  href: api/NRules.Diagnostics.Dgml.DgmlWriter.html#NRules_Diagnostics_Dgml_DgmlWriter_WriteAllText_System_String_
  commentId: M:NRules.Diagnostics.Dgml.DgmlWriter.WriteAllText(System.String)
  name.vb: WriteAllText(String)
  fullName: NRules.Diagnostics.Dgml.DgmlWriter.WriteAllText(string)
  fullName.vb: NRules.Diagnostics.Dgml.DgmlWriter.WriteAllText(String)
  nameWithType: DgmlWriter.WriteAllText(string)
  nameWithType.vb: DgmlWriter.WriteAllText(String)
- uid: NRules.Diagnostics.Dgml.DgmlWriter.WriteAllText*
  name: WriteAllText
  href: api/NRules.Diagnostics.Dgml.DgmlWriter.html#NRules_Diagnostics_Dgml_DgmlWriter_WriteAllText_
  commentId: Overload:NRules.Diagnostics.Dgml.DgmlWriter.WriteAllText
  isSpec: "True"
  fullName: NRules.Diagnostics.Dgml.DgmlWriter.WriteAllText
  nameWithType: DgmlWriter.WriteAllText
- uid: NRules.Diagnostics.Dgml.DgmlWriter.WriteXml(System.Xml.XmlWriter)
  name: WriteXml(XmlWriter)
  href: api/NRules.Diagnostics.Dgml.DgmlWriter.html#NRules_Diagnostics_Dgml_DgmlWriter_WriteXml_System_Xml_XmlWriter_
  commentId: M:NRules.Diagnostics.Dgml.DgmlWriter.WriteXml(System.Xml.XmlWriter)
  fullName: NRules.Diagnostics.Dgml.DgmlWriter.WriteXml(System.Xml.XmlWriter)
  nameWithType: DgmlWriter.WriteXml(XmlWriter)
- uid: NRules.Diagnostics.Dgml.DgmlWriter.WriteXml*
  name: WriteXml
  href: api/NRules.Diagnostics.Dgml.DgmlWriter.html#NRules_Diagnostics_Dgml_DgmlWriter_WriteXml_
  commentId: Overload:NRules.Diagnostics.Dgml.DgmlWriter.WriteXml
  isSpec: "True"
  fullName: NRules.Diagnostics.Dgml.DgmlWriter.WriteXml
  nameWithType: DgmlWriter.WriteXml
- uid: NRules.Diagnostics.ExpressionEventArgs
  name: ExpressionEventArgs
  href: api/NRules.Diagnostics.ExpressionEventArgs.html
  commentId: T:NRules.Diagnostics.ExpressionEventArgs
  fullName: NRules.Diagnostics.ExpressionEventArgs
  nameWithType: ExpressionEventArgs
- uid: NRules.Diagnostics.ExpressionEventArgs.#ctor(System.Linq.Expressions.Expression,System.Exception,System.Object[],System.Object)
  name: ExpressionEventArgs(Expression, Exception, object[], object)
  href: api/NRules.Diagnostics.ExpressionEventArgs.html#NRules_Diagnostics_ExpressionEventArgs__ctor_System_Linq_Expressions_Expression_System_Exception_System_Object___System_Object_
  commentId: M:NRules.Diagnostics.ExpressionEventArgs.#ctor(System.Linq.Expressions.Expression,System.Exception,System.Object[],System.Object)
  name.vb: New(Expression, Exception, Object(), Object)
  fullName: NRules.Diagnostics.ExpressionEventArgs.ExpressionEventArgs(System.Linq.Expressions.Expression, System.Exception, object[], object)
  fullName.vb: NRules.Diagnostics.ExpressionEventArgs.New(System.Linq.Expressions.Expression, System.Exception, Object(), Object)
  nameWithType: ExpressionEventArgs.ExpressionEventArgs(Expression, Exception, object[], object)
  nameWithType.vb: ExpressionEventArgs.New(Expression, Exception, Object(), Object)
- uid: NRules.Diagnostics.ExpressionEventArgs.#ctor*
  name: ExpressionEventArgs
  href: api/NRules.Diagnostics.ExpressionEventArgs.html#NRules_Diagnostics_ExpressionEventArgs__ctor_
  commentId: Overload:NRules.Diagnostics.ExpressionEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Diagnostics.ExpressionEventArgs.ExpressionEventArgs
  fullName.vb: NRules.Diagnostics.ExpressionEventArgs.New
  nameWithType: ExpressionEventArgs.ExpressionEventArgs
  nameWithType.vb: ExpressionEventArgs.New
- uid: NRules.Diagnostics.ExpressionEventArgs.Arguments
  name: Arguments
  href: api/NRules.Diagnostics.ExpressionEventArgs.html#NRules_Diagnostics_ExpressionEventArgs_Arguments
  commentId: P:NRules.Diagnostics.ExpressionEventArgs.Arguments
  fullName: NRules.Diagnostics.ExpressionEventArgs.Arguments
  nameWithType: ExpressionEventArgs.Arguments
- uid: NRules.Diagnostics.ExpressionEventArgs.Arguments*
  name: Arguments
  href: api/NRules.Diagnostics.ExpressionEventArgs.html#NRules_Diagnostics_ExpressionEventArgs_Arguments_
  commentId: Overload:NRules.Diagnostics.ExpressionEventArgs.Arguments
  isSpec: "True"
  fullName: NRules.Diagnostics.ExpressionEventArgs.Arguments
  nameWithType: ExpressionEventArgs.Arguments
- uid: NRules.Diagnostics.ExpressionEventArgs.Exception
  name: Exception
  href: api/NRules.Diagnostics.ExpressionEventArgs.html#NRules_Diagnostics_ExpressionEventArgs_Exception
  commentId: P:NRules.Diagnostics.ExpressionEventArgs.Exception
  fullName: NRules.Diagnostics.ExpressionEventArgs.Exception
  nameWithType: ExpressionEventArgs.Exception
- uid: NRules.Diagnostics.ExpressionEventArgs.Exception*
  name: Exception
  href: api/NRules.Diagnostics.ExpressionEventArgs.html#NRules_Diagnostics_ExpressionEventArgs_Exception_
  commentId: Overload:NRules.Diagnostics.ExpressionEventArgs.Exception
  isSpec: "True"
  fullName: NRules.Diagnostics.ExpressionEventArgs.Exception
  nameWithType: ExpressionEventArgs.Exception
- uid: NRules.Diagnostics.ExpressionEventArgs.Expression
  name: Expression
  href: api/NRules.Diagnostics.ExpressionEventArgs.html#NRules_Diagnostics_ExpressionEventArgs_Expression
  commentId: P:NRules.Diagnostics.ExpressionEventArgs.Expression
  fullName: NRules.Diagnostics.ExpressionEventArgs.Expression
  nameWithType: ExpressionEventArgs.Expression
- uid: NRules.Diagnostics.ExpressionEventArgs.Expression*
  name: Expression
  href: api/NRules.Diagnostics.ExpressionEventArgs.html#NRules_Diagnostics_ExpressionEventArgs_Expression_
  commentId: Overload:NRules.Diagnostics.ExpressionEventArgs.Expression
  isSpec: "True"
  fullName: NRules.Diagnostics.ExpressionEventArgs.Expression
  nameWithType: ExpressionEventArgs.Expression
- uid: NRules.Diagnostics.ExpressionEventArgs.Result
  name: Result
  href: api/NRules.Diagnostics.ExpressionEventArgs.html#NRules_Diagnostics_ExpressionEventArgs_Result
  commentId: P:NRules.Diagnostics.ExpressionEventArgs.Result
  fullName: NRules.Diagnostics.ExpressionEventArgs.Result
  nameWithType: ExpressionEventArgs.Result
- uid: NRules.Diagnostics.ExpressionEventArgs.Result*
  name: Result
  href: api/NRules.Diagnostics.ExpressionEventArgs.html#NRules_Diagnostics_ExpressionEventArgs_Result_
  commentId: Overload:NRules.Diagnostics.ExpressionEventArgs.Result
  isSpec: "True"
  fullName: NRules.Diagnostics.ExpressionEventArgs.Result
  nameWithType: ExpressionEventArgs.Result
- uid: NRules.Diagnostics.IEventProvider
  name: IEventProvider
  href: api/NRules.Diagnostics.IEventProvider.html
  commentId: T:NRules.Diagnostics.IEventProvider
  fullName: NRules.Diagnostics.IEventProvider
  nameWithType: IEventProvider
- uid: NRules.Diagnostics.IEventProvider.ActivationCreatedEvent
  name: ActivationCreatedEvent
  href: api/NRules.Diagnostics.IEventProvider.html#NRules_Diagnostics_IEventProvider_ActivationCreatedEvent
  commentId: E:NRules.Diagnostics.IEventProvider.ActivationCreatedEvent
  fullName: NRules.Diagnostics.IEventProvider.ActivationCreatedEvent
  nameWithType: IEventProvider.ActivationCreatedEvent
- uid: NRules.Diagnostics.IEventProvider.ActivationDeletedEvent
  name: ActivationDeletedEvent
  href: api/NRules.Diagnostics.IEventProvider.html#NRules_Diagnostics_IEventProvider_ActivationDeletedEvent
  commentId: E:NRules.Diagnostics.IEventProvider.ActivationDeletedEvent
  fullName: NRules.Diagnostics.IEventProvider.ActivationDeletedEvent
  nameWithType: IEventProvider.ActivationDeletedEvent
- uid: NRules.Diagnostics.IEventProvider.ActivationUpdatedEvent
  name: ActivationUpdatedEvent
  href: api/NRules.Diagnostics.IEventProvider.html#NRules_Diagnostics_IEventProvider_ActivationUpdatedEvent
  commentId: E:NRules.Diagnostics.IEventProvider.ActivationUpdatedEvent
  fullName: NRules.Diagnostics.IEventProvider.ActivationUpdatedEvent
  nameWithType: IEventProvider.ActivationUpdatedEvent
- uid: NRules.Diagnostics.IEventProvider.AgendaExpressionEvaluatedEvent
  name: AgendaExpressionEvaluatedEvent
  href: api/NRules.Diagnostics.IEventProvider.html#NRules_Diagnostics_IEventProvider_AgendaExpressionEvaluatedEvent
  commentId: E:NRules.Diagnostics.IEventProvider.AgendaExpressionEvaluatedEvent
  fullName: NRules.Diagnostics.IEventProvider.AgendaExpressionEvaluatedEvent
  nameWithType: IEventProvider.AgendaExpressionEvaluatedEvent
- uid: NRules.Diagnostics.IEventProvider.AgendaExpressionFailedEvent
  name: AgendaExpressionFailedEvent
  href: api/NRules.Diagnostics.IEventProvider.html#NRules_Diagnostics_IEventProvider_AgendaExpressionFailedEvent
  commentId: E:NRules.Diagnostics.IEventProvider.AgendaExpressionFailedEvent
  fullName: NRules.Diagnostics.IEventProvider.AgendaExpressionFailedEvent
  nameWithType: IEventProvider.AgendaExpressionFailedEvent
- uid: NRules.Diagnostics.IEventProvider.FactInsertedEvent
  name: FactInsertedEvent
  href: api/NRules.Diagnostics.IEventProvider.html#NRules_Diagnostics_IEventProvider_FactInsertedEvent
  commentId: E:NRules.Diagnostics.IEventProvider.FactInsertedEvent
  fullName: NRules.Diagnostics.IEventProvider.FactInsertedEvent
  nameWithType: IEventProvider.FactInsertedEvent
- uid: NRules.Diagnostics.IEventProvider.FactInsertingEvent
  name: FactInsertingEvent
  href: api/NRules.Diagnostics.IEventProvider.html#NRules_Diagnostics_IEventProvider_FactInsertingEvent
  commentId: E:NRules.Diagnostics.IEventProvider.FactInsertingEvent
  fullName: NRules.Diagnostics.IEventProvider.FactInsertingEvent
  nameWithType: IEventProvider.FactInsertingEvent
- uid: NRules.Diagnostics.IEventProvider.FactRetractedEvent
  name: FactRetractedEvent
  href: api/NRules.Diagnostics.IEventProvider.html#NRules_Diagnostics_IEventProvider_FactRetractedEvent
  commentId: E:NRules.Diagnostics.IEventProvider.FactRetractedEvent
  fullName: NRules.Diagnostics.IEventProvider.FactRetractedEvent
  nameWithType: IEventProvider.FactRetractedEvent
- uid: NRules.Diagnostics.IEventProvider.FactRetractingEvent
  name: FactRetractingEvent
  href: api/NRules.Diagnostics.IEventProvider.html#NRules_Diagnostics_IEventProvider_FactRetractingEvent
  commentId: E:NRules.Diagnostics.IEventProvider.FactRetractingEvent
  fullName: NRules.Diagnostics.IEventProvider.FactRetractingEvent
  nameWithType: IEventProvider.FactRetractingEvent
- uid: NRules.Diagnostics.IEventProvider.FactUpdatedEvent
  name: FactUpdatedEvent
  href: api/NRules.Diagnostics.IEventProvider.html#NRules_Diagnostics_IEventProvider_FactUpdatedEvent
  commentId: E:NRules.Diagnostics.IEventProvider.FactUpdatedEvent
  fullName: NRules.Diagnostics.IEventProvider.FactUpdatedEvent
  nameWithType: IEventProvider.FactUpdatedEvent
- uid: NRules.Diagnostics.IEventProvider.FactUpdatingEvent
  name: FactUpdatingEvent
  href: api/NRules.Diagnostics.IEventProvider.html#NRules_Diagnostics_IEventProvider_FactUpdatingEvent
  commentId: E:NRules.Diagnostics.IEventProvider.FactUpdatingEvent
  fullName: NRules.Diagnostics.IEventProvider.FactUpdatingEvent
  nameWithType: IEventProvider.FactUpdatingEvent
- uid: NRules.Diagnostics.IEventProvider.LhsExpressionEvaluatedEvent
  name: LhsExpressionEvaluatedEvent
  href: api/NRules.Diagnostics.IEventProvider.html#NRules_Diagnostics_IEventProvider_LhsExpressionEvaluatedEvent
  commentId: E:NRules.Diagnostics.IEventProvider.LhsExpressionEvaluatedEvent
  fullName: NRules.Diagnostics.IEventProvider.LhsExpressionEvaluatedEvent
  nameWithType: IEventProvider.LhsExpressionEvaluatedEvent
- uid: NRules.Diagnostics.IEventProvider.LhsExpressionFailedEvent
  name: LhsExpressionFailedEvent
  href: api/NRules.Diagnostics.IEventProvider.html#NRules_Diagnostics_IEventProvider_LhsExpressionFailedEvent
  commentId: E:NRules.Diagnostics.IEventProvider.LhsExpressionFailedEvent
  fullName: NRules.Diagnostics.IEventProvider.LhsExpressionFailedEvent
  nameWithType: IEventProvider.LhsExpressionFailedEvent
- uid: NRules.Diagnostics.IEventProvider.RhsExpressionEvaluatedEvent
  name: RhsExpressionEvaluatedEvent
  href: api/NRules.Diagnostics.IEventProvider.html#NRules_Diagnostics_IEventProvider_RhsExpressionEvaluatedEvent
  commentId: E:NRules.Diagnostics.IEventProvider.RhsExpressionEvaluatedEvent
  fullName: NRules.Diagnostics.IEventProvider.RhsExpressionEvaluatedEvent
  nameWithType: IEventProvider.RhsExpressionEvaluatedEvent
- uid: NRules.Diagnostics.IEventProvider.RhsExpressionFailedEvent
  name: RhsExpressionFailedEvent
  href: api/NRules.Diagnostics.IEventProvider.html#NRules_Diagnostics_IEventProvider_RhsExpressionFailedEvent
  commentId: E:NRules.Diagnostics.IEventProvider.RhsExpressionFailedEvent
  fullName: NRules.Diagnostics.IEventProvider.RhsExpressionFailedEvent
  nameWithType: IEventProvider.RhsExpressionFailedEvent
- uid: NRules.Diagnostics.IEventProvider.RuleFiredEvent
  name: RuleFiredEvent
  href: api/NRules.Diagnostics.IEventProvider.html#NRules_Diagnostics_IEventProvider_RuleFiredEvent
  commentId: E:NRules.Diagnostics.IEventProvider.RuleFiredEvent
  fullName: NRules.Diagnostics.IEventProvider.RuleFiredEvent
  nameWithType: IEventProvider.RuleFiredEvent
- uid: NRules.Diagnostics.IEventProvider.RuleFiringEvent
  name: RuleFiringEvent
  href: api/NRules.Diagnostics.IEventProvider.html#NRules_Diagnostics_IEventProvider_RuleFiringEvent
  commentId: E:NRules.Diagnostics.IEventProvider.RuleFiringEvent
  fullName: NRules.Diagnostics.IEventProvider.RuleFiringEvent
  nameWithType: IEventProvider.RuleFiringEvent
- uid: NRules.Diagnostics.IMetricsProvider
  name: IMetricsProvider
  href: api/NRules.Diagnostics.IMetricsProvider.html
  commentId: T:NRules.Diagnostics.IMetricsProvider
  fullName: NRules.Diagnostics.IMetricsProvider
  nameWithType: IMetricsProvider
- uid: NRules.Diagnostics.IMetricsProvider.FindByNodeId(System.Int32)
  name: FindByNodeId(int)
  href: api/NRules.Diagnostics.IMetricsProvider.html#NRules_Diagnostics_IMetricsProvider_FindByNodeId_System_Int32_
  commentId: M:NRules.Diagnostics.IMetricsProvider.FindByNodeId(System.Int32)
  name.vb: FindByNodeId(Integer)
  fullName: NRules.Diagnostics.IMetricsProvider.FindByNodeId(int)
  fullName.vb: NRules.Diagnostics.IMetricsProvider.FindByNodeId(Integer)
  nameWithType: IMetricsProvider.FindByNodeId(int)
  nameWithType.vb: IMetricsProvider.FindByNodeId(Integer)
- uid: NRules.Diagnostics.IMetricsProvider.FindByNodeId*
  name: FindByNodeId
  href: api/NRules.Diagnostics.IMetricsProvider.html#NRules_Diagnostics_IMetricsProvider_FindByNodeId_
  commentId: Overload:NRules.Diagnostics.IMetricsProvider.FindByNodeId
  isSpec: "True"
  fullName: NRules.Diagnostics.IMetricsProvider.FindByNodeId
  nameWithType: IMetricsProvider.FindByNodeId
- uid: NRules.Diagnostics.IMetricsProvider.GetAll
  name: GetAll()
  href: api/NRules.Diagnostics.IMetricsProvider.html#NRules_Diagnostics_IMetricsProvider_GetAll
  commentId: M:NRules.Diagnostics.IMetricsProvider.GetAll
  fullName: NRules.Diagnostics.IMetricsProvider.GetAll()
  nameWithType: IMetricsProvider.GetAll()
- uid: NRules.Diagnostics.IMetricsProvider.GetAll*
  name: GetAll
  href: api/NRules.Diagnostics.IMetricsProvider.html#NRules_Diagnostics_IMetricsProvider_GetAll_
  commentId: Overload:NRules.Diagnostics.IMetricsProvider.GetAll
  isSpec: "True"
  fullName: NRules.Diagnostics.IMetricsProvider.GetAll
  nameWithType: IMetricsProvider.GetAll
- uid: NRules.Diagnostics.IMetricsProvider.Reset
  name: Reset()
  href: api/NRules.Diagnostics.IMetricsProvider.html#NRules_Diagnostics_IMetricsProvider_Reset
  commentId: M:NRules.Diagnostics.IMetricsProvider.Reset
  fullName: NRules.Diagnostics.IMetricsProvider.Reset()
  nameWithType: IMetricsProvider.Reset()
- uid: NRules.Diagnostics.IMetricsProvider.Reset*
  name: Reset
  href: api/NRules.Diagnostics.IMetricsProvider.html#NRules_Diagnostics_IMetricsProvider_Reset_
  commentId: Overload:NRules.Diagnostics.IMetricsProvider.Reset
  isSpec: "True"
  fullName: NRules.Diagnostics.IMetricsProvider.Reset
  nameWithType: IMetricsProvider.Reset
- uid: NRules.Diagnostics.INodeMetrics
  name: INodeMetrics
  href: api/NRules.Diagnostics.INodeMetrics.html
  commentId: T:NRules.Diagnostics.INodeMetrics
  fullName: NRules.Diagnostics.INodeMetrics
  nameWithType: INodeMetrics
- uid: NRules.Diagnostics.INodeMetrics.ElementCount
  name: ElementCount
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_ElementCount
  commentId: P:NRules.Diagnostics.INodeMetrics.ElementCount
  fullName: NRules.Diagnostics.INodeMetrics.ElementCount
  nameWithType: INodeMetrics.ElementCount
- uid: NRules.Diagnostics.INodeMetrics.ElementCount*
  name: ElementCount
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_ElementCount_
  commentId: Overload:NRules.Diagnostics.INodeMetrics.ElementCount
  isSpec: "True"
  fullName: NRules.Diagnostics.INodeMetrics.ElementCount
  nameWithType: INodeMetrics.ElementCount
- uid: NRules.Diagnostics.INodeMetrics.InsertDurationMilliseconds
  name: InsertDurationMilliseconds
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_InsertDurationMilliseconds
  commentId: P:NRules.Diagnostics.INodeMetrics.InsertDurationMilliseconds
  fullName: NRules.Diagnostics.INodeMetrics.InsertDurationMilliseconds
  nameWithType: INodeMetrics.InsertDurationMilliseconds
- uid: NRules.Diagnostics.INodeMetrics.InsertDurationMilliseconds*
  name: InsertDurationMilliseconds
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_InsertDurationMilliseconds_
  commentId: Overload:NRules.Diagnostics.INodeMetrics.InsertDurationMilliseconds
  isSpec: "True"
  fullName: NRules.Diagnostics.INodeMetrics.InsertDurationMilliseconds
  nameWithType: INodeMetrics.InsertDurationMilliseconds
- uid: NRules.Diagnostics.INodeMetrics.InsertInputCount
  name: InsertInputCount
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_InsertInputCount
  commentId: P:NRules.Diagnostics.INodeMetrics.InsertInputCount
  fullName: NRules.Diagnostics.INodeMetrics.InsertInputCount
  nameWithType: INodeMetrics.InsertInputCount
- uid: NRules.Diagnostics.INodeMetrics.InsertInputCount*
  name: InsertInputCount
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_InsertInputCount_
  commentId: Overload:NRules.Diagnostics.INodeMetrics.InsertInputCount
  isSpec: "True"
  fullName: NRules.Diagnostics.INodeMetrics.InsertInputCount
  nameWithType: INodeMetrics.InsertInputCount
- uid: NRules.Diagnostics.INodeMetrics.InsertOutputCount
  name: InsertOutputCount
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_InsertOutputCount
  commentId: P:NRules.Diagnostics.INodeMetrics.InsertOutputCount
  fullName: NRules.Diagnostics.INodeMetrics.InsertOutputCount
  nameWithType: INodeMetrics.InsertOutputCount
- uid: NRules.Diagnostics.INodeMetrics.InsertOutputCount*
  name: InsertOutputCount
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_InsertOutputCount_
  commentId: Overload:NRules.Diagnostics.INodeMetrics.InsertOutputCount
  isSpec: "True"
  fullName: NRules.Diagnostics.INodeMetrics.InsertOutputCount
  nameWithType: INodeMetrics.InsertOutputCount
- uid: NRules.Diagnostics.INodeMetrics.NodeId
  name: NodeId
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_NodeId
  commentId: P:NRules.Diagnostics.INodeMetrics.NodeId
  fullName: NRules.Diagnostics.INodeMetrics.NodeId
  nameWithType: INodeMetrics.NodeId
- uid: NRules.Diagnostics.INodeMetrics.NodeId*
  name: NodeId
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_NodeId_
  commentId: Overload:NRules.Diagnostics.INodeMetrics.NodeId
  isSpec: "True"
  fullName: NRules.Diagnostics.INodeMetrics.NodeId
  nameWithType: INodeMetrics.NodeId
- uid: NRules.Diagnostics.INodeMetrics.Reset
  name: Reset()
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_Reset
  commentId: M:NRules.Diagnostics.INodeMetrics.Reset
  fullName: NRules.Diagnostics.INodeMetrics.Reset()
  nameWithType: INodeMetrics.Reset()
- uid: NRules.Diagnostics.INodeMetrics.Reset*
  name: Reset
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_Reset_
  commentId: Overload:NRules.Diagnostics.INodeMetrics.Reset
  isSpec: "True"
  fullName: NRules.Diagnostics.INodeMetrics.Reset
  nameWithType: INodeMetrics.Reset
- uid: NRules.Diagnostics.INodeMetrics.RetractDurationMilliseconds
  name: RetractDurationMilliseconds
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_RetractDurationMilliseconds
  commentId: P:NRules.Diagnostics.INodeMetrics.RetractDurationMilliseconds
  fullName: NRules.Diagnostics.INodeMetrics.RetractDurationMilliseconds
  nameWithType: INodeMetrics.RetractDurationMilliseconds
- uid: NRules.Diagnostics.INodeMetrics.RetractDurationMilliseconds*
  name: RetractDurationMilliseconds
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_RetractDurationMilliseconds_
  commentId: Overload:NRules.Diagnostics.INodeMetrics.RetractDurationMilliseconds
  isSpec: "True"
  fullName: NRules.Diagnostics.INodeMetrics.RetractDurationMilliseconds
  nameWithType: INodeMetrics.RetractDurationMilliseconds
- uid: NRules.Diagnostics.INodeMetrics.RetractInputCount
  name: RetractInputCount
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_RetractInputCount
  commentId: P:NRules.Diagnostics.INodeMetrics.RetractInputCount
  fullName: NRules.Diagnostics.INodeMetrics.RetractInputCount
  nameWithType: INodeMetrics.RetractInputCount
- uid: NRules.Diagnostics.INodeMetrics.RetractInputCount*
  name: RetractInputCount
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_RetractInputCount_
  commentId: Overload:NRules.Diagnostics.INodeMetrics.RetractInputCount
  isSpec: "True"
  fullName: NRules.Diagnostics.INodeMetrics.RetractInputCount
  nameWithType: INodeMetrics.RetractInputCount
- uid: NRules.Diagnostics.INodeMetrics.RetractOutputCount
  name: RetractOutputCount
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_RetractOutputCount
  commentId: P:NRules.Diagnostics.INodeMetrics.RetractOutputCount
  fullName: NRules.Diagnostics.INodeMetrics.RetractOutputCount
  nameWithType: INodeMetrics.RetractOutputCount
- uid: NRules.Diagnostics.INodeMetrics.RetractOutputCount*
  name: RetractOutputCount
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_RetractOutputCount_
  commentId: Overload:NRules.Diagnostics.INodeMetrics.RetractOutputCount
  isSpec: "True"
  fullName: NRules.Diagnostics.INodeMetrics.RetractOutputCount
  nameWithType: INodeMetrics.RetractOutputCount
- uid: NRules.Diagnostics.INodeMetrics.UpdateDurationMilliseconds
  name: UpdateDurationMilliseconds
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_UpdateDurationMilliseconds
  commentId: P:NRules.Diagnostics.INodeMetrics.UpdateDurationMilliseconds
  fullName: NRules.Diagnostics.INodeMetrics.UpdateDurationMilliseconds
  nameWithType: INodeMetrics.UpdateDurationMilliseconds
- uid: NRules.Diagnostics.INodeMetrics.UpdateDurationMilliseconds*
  name: UpdateDurationMilliseconds
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_UpdateDurationMilliseconds_
  commentId: Overload:NRules.Diagnostics.INodeMetrics.UpdateDurationMilliseconds
  isSpec: "True"
  fullName: NRules.Diagnostics.INodeMetrics.UpdateDurationMilliseconds
  nameWithType: INodeMetrics.UpdateDurationMilliseconds
- uid: NRules.Diagnostics.INodeMetrics.UpdateInputCount
  name: UpdateInputCount
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_UpdateInputCount
  commentId: P:NRules.Diagnostics.INodeMetrics.UpdateInputCount
  fullName: NRules.Diagnostics.INodeMetrics.UpdateInputCount
  nameWithType: INodeMetrics.UpdateInputCount
- uid: NRules.Diagnostics.INodeMetrics.UpdateInputCount*
  name: UpdateInputCount
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_UpdateInputCount_
  commentId: Overload:NRules.Diagnostics.INodeMetrics.UpdateInputCount
  isSpec: "True"
  fullName: NRules.Diagnostics.INodeMetrics.UpdateInputCount
  nameWithType: INodeMetrics.UpdateInputCount
- uid: NRules.Diagnostics.INodeMetrics.UpdateOutputCount
  name: UpdateOutputCount
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_UpdateOutputCount
  commentId: P:NRules.Diagnostics.INodeMetrics.UpdateOutputCount
  fullName: NRules.Diagnostics.INodeMetrics.UpdateOutputCount
  nameWithType: INodeMetrics.UpdateOutputCount
- uid: NRules.Diagnostics.INodeMetrics.UpdateOutputCount*
  name: UpdateOutputCount
  href: api/NRules.Diagnostics.INodeMetrics.html#NRules_Diagnostics_INodeMetrics_UpdateOutputCount_
  commentId: Overload:NRules.Diagnostics.INodeMetrics.UpdateOutputCount
  isSpec: "True"
  fullName: NRules.Diagnostics.INodeMetrics.UpdateOutputCount
  nameWithType: INodeMetrics.UpdateOutputCount
- uid: NRules.Diagnostics.IRecoverableError
  name: IRecoverableError
  href: api/NRules.Diagnostics.IRecoverableError.html
  commentId: T:NRules.Diagnostics.IRecoverableError
  fullName: NRules.Diagnostics.IRecoverableError
  nameWithType: IRecoverableError
- uid: NRules.Diagnostics.IRecoverableError.Exception
  name: Exception
  href: api/NRules.Diagnostics.IRecoverableError.html#NRules_Diagnostics_IRecoverableError_Exception
  commentId: P:NRules.Diagnostics.IRecoverableError.Exception
  fullName: NRules.Diagnostics.IRecoverableError.Exception
  nameWithType: IRecoverableError.Exception
- uid: NRules.Diagnostics.IRecoverableError.Exception*
  name: Exception
  href: api/NRules.Diagnostics.IRecoverableError.html#NRules_Diagnostics_IRecoverableError_Exception_
  commentId: Overload:NRules.Diagnostics.IRecoverableError.Exception
  isSpec: "True"
  fullName: NRules.Diagnostics.IRecoverableError.Exception
  nameWithType: IRecoverableError.Exception
- uid: NRules.Diagnostics.IRecoverableError.IsHandled
  name: IsHandled
  href: api/NRules.Diagnostics.IRecoverableError.html#NRules_Diagnostics_IRecoverableError_IsHandled
  commentId: P:NRules.Diagnostics.IRecoverableError.IsHandled
  fullName: NRules.Diagnostics.IRecoverableError.IsHandled
  nameWithType: IRecoverableError.IsHandled
- uid: NRules.Diagnostics.IRecoverableError.IsHandled*
  name: IsHandled
  href: api/NRules.Diagnostics.IRecoverableError.html#NRules_Diagnostics_IRecoverableError_IsHandled_
  commentId: Overload:NRules.Diagnostics.IRecoverableError.IsHandled
  isSpec: "True"
  fullName: NRules.Diagnostics.IRecoverableError.IsHandled
  nameWithType: IRecoverableError.IsHandled
- uid: NRules.Diagnostics.ISessionSchemaProvider
  name: ISessionSchemaProvider
  href: api/NRules.Diagnostics.ISessionSchemaProvider.html
  commentId: T:NRules.Diagnostics.ISessionSchemaProvider
  fullName: NRules.Diagnostics.ISessionSchemaProvider
  nameWithType: ISessionSchemaProvider
- uid: NRules.Diagnostics.ISessionSchemaProvider.GetSchema
  name: GetSchema()
  href: api/NRules.Diagnostics.ISessionSchemaProvider.html#NRules_Diagnostics_ISessionSchemaProvider_GetSchema
  commentId: M:NRules.Diagnostics.ISessionSchemaProvider.GetSchema
  fullName: NRules.Diagnostics.ISessionSchemaProvider.GetSchema()
  nameWithType: ISessionSchemaProvider.GetSchema()
- uid: NRules.Diagnostics.ISessionSchemaProvider.GetSchema*
  name: GetSchema
  href: api/NRules.Diagnostics.ISessionSchemaProvider.html#NRules_Diagnostics_ISessionSchemaProvider_GetSchema_
  commentId: Overload:NRules.Diagnostics.ISessionSchemaProvider.GetSchema
  isSpec: "True"
  fullName: NRules.Diagnostics.ISessionSchemaProvider.GetSchema
  nameWithType: ISessionSchemaProvider.GetSchema
- uid: NRules.Diagnostics.LhsExpressionErrorEventArgs
  name: LhsExpressionErrorEventArgs
  href: api/NRules.Diagnostics.LhsExpressionErrorEventArgs.html
  commentId: T:NRules.Diagnostics.LhsExpressionErrorEventArgs
  fullName: NRules.Diagnostics.LhsExpressionErrorEventArgs
  nameWithType: LhsExpressionErrorEventArgs
- uid: NRules.Diagnostics.LhsExpressionErrorEventArgs.#ctor(System.Linq.Expressions.Expression,System.Exception,System.Object[],NRules.RuleModel.ITuple,NRules.RuleModel.IFact,System.Collections.Generic.IEnumerable{NRules.RuleModel.IRuleDefinition})
  name: LhsExpressionErrorEventArgs(Expression, Exception, object[], ITuple, IFact, IEnumerable<IRuleDefinition>)
  href: api/NRules.Diagnostics.LhsExpressionErrorEventArgs.html#NRules_Diagnostics_LhsExpressionErrorEventArgs__ctor_System_Linq_Expressions_Expression_System_Exception_System_Object___NRules_RuleModel_ITuple_NRules_RuleModel_IFact_System_Collections_Generic_IEnumerable_NRules_RuleModel_IRuleDefinition__
  commentId: M:NRules.Diagnostics.LhsExpressionErrorEventArgs.#ctor(System.Linq.Expressions.Expression,System.Exception,System.Object[],NRules.RuleModel.ITuple,NRules.RuleModel.IFact,System.Collections.Generic.IEnumerable{NRules.RuleModel.IRuleDefinition})
  name.vb: New(Expression, Exception, Object(), ITuple, IFact, IEnumerable(Of IRuleDefinition))
  fullName: NRules.Diagnostics.LhsExpressionErrorEventArgs.LhsExpressionErrorEventArgs(System.Linq.Expressions.Expression, System.Exception, object[], NRules.RuleModel.ITuple, NRules.RuleModel.IFact, System.Collections.Generic.IEnumerable<NRules.RuleModel.IRuleDefinition>)
  fullName.vb: NRules.Diagnostics.LhsExpressionErrorEventArgs.New(System.Linq.Expressions.Expression, System.Exception, Object(), NRules.RuleModel.ITuple, NRules.RuleModel.IFact, System.Collections.Generic.IEnumerable(Of NRules.RuleModel.IRuleDefinition))
  nameWithType: LhsExpressionErrorEventArgs.LhsExpressionErrorEventArgs(Expression, Exception, object[], ITuple, IFact, IEnumerable<IRuleDefinition>)
  nameWithType.vb: LhsExpressionErrorEventArgs.New(Expression, Exception, Object(), ITuple, IFact, IEnumerable(Of IRuleDefinition))
- uid: NRules.Diagnostics.LhsExpressionErrorEventArgs.#ctor*
  name: LhsExpressionErrorEventArgs
  href: api/NRules.Diagnostics.LhsExpressionErrorEventArgs.html#NRules_Diagnostics_LhsExpressionErrorEventArgs__ctor_
  commentId: Overload:NRules.Diagnostics.LhsExpressionErrorEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Diagnostics.LhsExpressionErrorEventArgs.LhsExpressionErrorEventArgs
  fullName.vb: NRules.Diagnostics.LhsExpressionErrorEventArgs.New
  nameWithType: LhsExpressionErrorEventArgs.LhsExpressionErrorEventArgs
  nameWithType.vb: LhsExpressionErrorEventArgs.New
- uid: NRules.Diagnostics.LhsExpressionErrorEventArgs.IsHandled
  name: IsHandled
  href: api/NRules.Diagnostics.LhsExpressionErrorEventArgs.html#NRules_Diagnostics_LhsExpressionErrorEventArgs_IsHandled
  commentId: P:NRules.Diagnostics.LhsExpressionErrorEventArgs.IsHandled
  fullName: NRules.Diagnostics.LhsExpressionErrorEventArgs.IsHandled
  nameWithType: LhsExpressionErrorEventArgs.IsHandled
- uid: NRules.Diagnostics.LhsExpressionErrorEventArgs.IsHandled*
  name: IsHandled
  href: api/NRules.Diagnostics.LhsExpressionErrorEventArgs.html#NRules_Diagnostics_LhsExpressionErrorEventArgs_IsHandled_
  commentId: Overload:NRules.Diagnostics.LhsExpressionErrorEventArgs.IsHandled
  isSpec: "True"
  fullName: NRules.Diagnostics.LhsExpressionErrorEventArgs.IsHandled
  nameWithType: LhsExpressionErrorEventArgs.IsHandled
- uid: NRules.Diagnostics.LhsExpressionEventArgs
  name: LhsExpressionEventArgs
  href: api/NRules.Diagnostics.LhsExpressionEventArgs.html
  commentId: T:NRules.Diagnostics.LhsExpressionEventArgs
  fullName: NRules.Diagnostics.LhsExpressionEventArgs
  nameWithType: LhsExpressionEventArgs
- uid: NRules.Diagnostics.LhsExpressionEventArgs.#ctor(System.Linq.Expressions.Expression,System.Exception,System.Object[],System.Object,NRules.RuleModel.ITuple,NRules.RuleModel.IFact,System.Collections.Generic.IEnumerable{NRules.RuleModel.IRuleDefinition})
  name: LhsExpressionEventArgs(Expression, Exception, object[], object, ITuple, IFact, IEnumerable<IRuleDefinition>)
  href: api/NRules.Diagnostics.LhsExpressionEventArgs.html#NRules_Diagnostics_LhsExpressionEventArgs__ctor_System_Linq_Expressions_Expression_System_Exception_System_Object___System_Object_NRules_RuleModel_ITuple_NRules_RuleModel_IFact_System_Collections_Generic_IEnumerable_NRules_RuleModel_IRuleDefinition__
  commentId: M:NRules.Diagnostics.LhsExpressionEventArgs.#ctor(System.Linq.Expressions.Expression,System.Exception,System.Object[],System.Object,NRules.RuleModel.ITuple,NRules.RuleModel.IFact,System.Collections.Generic.IEnumerable{NRules.RuleModel.IRuleDefinition})
  name.vb: New(Expression, Exception, Object(), Object, ITuple, IFact, IEnumerable(Of IRuleDefinition))
  fullName: NRules.Diagnostics.LhsExpressionEventArgs.LhsExpressionEventArgs(System.Linq.Expressions.Expression, System.Exception, object[], object, NRules.RuleModel.ITuple, NRules.RuleModel.IFact, System.Collections.Generic.IEnumerable<NRules.RuleModel.IRuleDefinition>)
  fullName.vb: NRules.Diagnostics.LhsExpressionEventArgs.New(System.Linq.Expressions.Expression, System.Exception, Object(), Object, NRules.RuleModel.ITuple, NRules.RuleModel.IFact, System.Collections.Generic.IEnumerable(Of NRules.RuleModel.IRuleDefinition))
  nameWithType: LhsExpressionEventArgs.LhsExpressionEventArgs(Expression, Exception, object[], object, ITuple, IFact, IEnumerable<IRuleDefinition>)
  nameWithType.vb: LhsExpressionEventArgs.New(Expression, Exception, Object(), Object, ITuple, IFact, IEnumerable(Of IRuleDefinition))
- uid: NRules.Diagnostics.LhsExpressionEventArgs.#ctor*
  name: LhsExpressionEventArgs
  href: api/NRules.Diagnostics.LhsExpressionEventArgs.html#NRules_Diagnostics_LhsExpressionEventArgs__ctor_
  commentId: Overload:NRules.Diagnostics.LhsExpressionEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Diagnostics.LhsExpressionEventArgs.LhsExpressionEventArgs
  fullName.vb: NRules.Diagnostics.LhsExpressionEventArgs.New
  nameWithType: LhsExpressionEventArgs.LhsExpressionEventArgs
  nameWithType.vb: LhsExpressionEventArgs.New
- uid: NRules.Diagnostics.LhsExpressionEventArgs.Facts
  name: Facts
  href: api/NRules.Diagnostics.LhsExpressionEventArgs.html#NRules_Diagnostics_LhsExpressionEventArgs_Facts
  commentId: P:NRules.Diagnostics.LhsExpressionEventArgs.Facts
  fullName: NRules.Diagnostics.LhsExpressionEventArgs.Facts
  nameWithType: LhsExpressionEventArgs.Facts
- uid: NRules.Diagnostics.LhsExpressionEventArgs.Facts*
  name: Facts
  href: api/NRules.Diagnostics.LhsExpressionEventArgs.html#NRules_Diagnostics_LhsExpressionEventArgs_Facts_
  commentId: Overload:NRules.Diagnostics.LhsExpressionEventArgs.Facts
  isSpec: "True"
  fullName: NRules.Diagnostics.LhsExpressionEventArgs.Facts
  nameWithType: LhsExpressionEventArgs.Facts
- uid: NRules.Diagnostics.LhsExpressionEventArgs.Rules
  name: Rules
  href: api/NRules.Diagnostics.LhsExpressionEventArgs.html#NRules_Diagnostics_LhsExpressionEventArgs_Rules
  commentId: P:NRules.Diagnostics.LhsExpressionEventArgs.Rules
  fullName: NRules.Diagnostics.LhsExpressionEventArgs.Rules
  nameWithType: LhsExpressionEventArgs.Rules
- uid: NRules.Diagnostics.LhsExpressionEventArgs.Rules*
  name: Rules
  href: api/NRules.Diagnostics.LhsExpressionEventArgs.html#NRules_Diagnostics_LhsExpressionEventArgs_Rules_
  commentId: Overload:NRules.Diagnostics.LhsExpressionEventArgs.Rules
  isSpec: "True"
  fullName: NRules.Diagnostics.LhsExpressionEventArgs.Rules
  nameWithType: LhsExpressionEventArgs.Rules
- uid: NRules.Diagnostics.NodeType
  name: NodeType
  href: api/NRules.Diagnostics.NodeType.html
  commentId: T:NRules.Diagnostics.NodeType
  fullName: NRules.Diagnostics.NodeType
  nameWithType: NodeType
- uid: NRules.Diagnostics.NodeType.Adapter
  name: Adapter
  href: api/NRules.Diagnostics.NodeType.html#NRules_Diagnostics_NodeType_Adapter
  commentId: F:NRules.Diagnostics.NodeType.Adapter
  fullName: NRules.Diagnostics.NodeType.Adapter
  nameWithType: NodeType.Adapter
- uid: NRules.Diagnostics.NodeType.Aggregate
  name: Aggregate
  href: api/NRules.Diagnostics.NodeType.html#NRules_Diagnostics_NodeType_Aggregate
  commentId: F:NRules.Diagnostics.NodeType.Aggregate
  fullName: NRules.Diagnostics.NodeType.Aggregate
  nameWithType: NodeType.Aggregate
- uid: NRules.Diagnostics.NodeType.AlphaMemory
  name: AlphaMemory
  href: api/NRules.Diagnostics.NodeType.html#NRules_Diagnostics_NodeType_AlphaMemory
  commentId: F:NRules.Diagnostics.NodeType.AlphaMemory
  fullName: NRules.Diagnostics.NodeType.AlphaMemory
  nameWithType: NodeType.AlphaMemory
- uid: NRules.Diagnostics.NodeType.BetaMemory
  name: BetaMemory
  href: api/NRules.Diagnostics.NodeType.html#NRules_Diagnostics_NodeType_BetaMemory
  commentId: F:NRules.Diagnostics.NodeType.BetaMemory
  fullName: NRules.Diagnostics.NodeType.BetaMemory
  nameWithType: NodeType.BetaMemory
- uid: NRules.Diagnostics.NodeType.Binding
  name: Binding
  href: api/NRules.Diagnostics.NodeType.html#NRules_Diagnostics_NodeType_Binding
  commentId: F:NRules.Diagnostics.NodeType.Binding
  fullName: NRules.Diagnostics.NodeType.Binding
  nameWithType: NodeType.Binding
- uid: NRules.Diagnostics.NodeType.Dummy
  name: Dummy
  href: api/NRules.Diagnostics.NodeType.html#NRules_Diagnostics_NodeType_Dummy
  commentId: F:NRules.Diagnostics.NodeType.Dummy
  fullName: NRules.Diagnostics.NodeType.Dummy
  nameWithType: NodeType.Dummy
- uid: NRules.Diagnostics.NodeType.Exists
  name: Exists
  href: api/NRules.Diagnostics.NodeType.html#NRules_Diagnostics_NodeType_Exists
  commentId: F:NRules.Diagnostics.NodeType.Exists
  fullName: NRules.Diagnostics.NodeType.Exists
  nameWithType: NodeType.Exists
- uid: NRules.Diagnostics.NodeType.Join
  name: Join
  href: api/NRules.Diagnostics.NodeType.html#NRules_Diagnostics_NodeType_Join
  commentId: F:NRules.Diagnostics.NodeType.Join
  fullName: NRules.Diagnostics.NodeType.Join
  nameWithType: NodeType.Join
- uid: NRules.Diagnostics.NodeType.Not
  name: Not
  href: api/NRules.Diagnostics.NodeType.html#NRules_Diagnostics_NodeType_Not
  commentId: F:NRules.Diagnostics.NodeType.Not
  fullName: NRules.Diagnostics.NodeType.Not
  nameWithType: NodeType.Not
- uid: NRules.Diagnostics.NodeType.Root
  name: Root
  href: api/NRules.Diagnostics.NodeType.html#NRules_Diagnostics_NodeType_Root
  commentId: F:NRules.Diagnostics.NodeType.Root
  fullName: NRules.Diagnostics.NodeType.Root
  nameWithType: NodeType.Root
- uid: NRules.Diagnostics.NodeType.Rule
  name: Rule
  href: api/NRules.Diagnostics.NodeType.html#NRules_Diagnostics_NodeType_Rule
  commentId: F:NRules.Diagnostics.NodeType.Rule
  fullName: NRules.Diagnostics.NodeType.Rule
  nameWithType: NodeType.Rule
- uid: NRules.Diagnostics.NodeType.Selection
  name: Selection
  href: api/NRules.Diagnostics.NodeType.html#NRules_Diagnostics_NodeType_Selection
  commentId: F:NRules.Diagnostics.NodeType.Selection
  fullName: NRules.Diagnostics.NodeType.Selection
  nameWithType: NodeType.Selection
- uid: NRules.Diagnostics.NodeType.Type
  name: Type
  href: api/NRules.Diagnostics.NodeType.html#NRules_Diagnostics_NodeType_Type
  commentId: F:NRules.Diagnostics.NodeType.Type
  fullName: NRules.Diagnostics.NodeType.Type
  nameWithType: NodeType.Type
- uid: NRules.Diagnostics.ReteGraph
  name: ReteGraph
  href: api/NRules.Diagnostics.ReteGraph.html
  commentId: T:NRules.Diagnostics.ReteGraph
  fullName: NRules.Diagnostics.ReteGraph
  nameWithType: ReteGraph
- uid: NRules.Diagnostics.ReteGraph.#ctor(System.Collections.Generic.IEnumerable{NRules.Diagnostics.ReteNode},System.Collections.Generic.IEnumerable{NRules.Diagnostics.ReteLink})
  name: ReteGraph(IEnumerable<ReteNode>, IEnumerable<ReteLink>)
  href: api/NRules.Diagnostics.ReteGraph.html#NRules_Diagnostics_ReteGraph__ctor_System_Collections_Generic_IEnumerable_NRules_Diagnostics_ReteNode__System_Collections_Generic_IEnumerable_NRules_Diagnostics_ReteLink__
  commentId: M:NRules.Diagnostics.ReteGraph.#ctor(System.Collections.Generic.IEnumerable{NRules.Diagnostics.ReteNode},System.Collections.Generic.IEnumerable{NRules.Diagnostics.ReteLink})
  name.vb: New(IEnumerable(Of ReteNode), IEnumerable(Of ReteLink))
  fullName: NRules.Diagnostics.ReteGraph.ReteGraph(System.Collections.Generic.IEnumerable<NRules.Diagnostics.ReteNode>, System.Collections.Generic.IEnumerable<NRules.Diagnostics.ReteLink>)
  fullName.vb: NRules.Diagnostics.ReteGraph.New(System.Collections.Generic.IEnumerable(Of NRules.Diagnostics.ReteNode), System.Collections.Generic.IEnumerable(Of NRules.Diagnostics.ReteLink))
  nameWithType: ReteGraph.ReteGraph(IEnumerable<ReteNode>, IEnumerable<ReteLink>)
  nameWithType.vb: ReteGraph.New(IEnumerable(Of ReteNode), IEnumerable(Of ReteLink))
- uid: NRules.Diagnostics.ReteGraph.#ctor*
  name: ReteGraph
  href: api/NRules.Diagnostics.ReteGraph.html#NRules_Diagnostics_ReteGraph__ctor_
  commentId: Overload:NRules.Diagnostics.ReteGraph.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Diagnostics.ReteGraph.ReteGraph
  fullName.vb: NRules.Diagnostics.ReteGraph.New
  nameWithType: ReteGraph.ReteGraph
  nameWithType.vb: ReteGraph.New
- uid: NRules.Diagnostics.ReteGraph.Links
  name: Links
  href: api/NRules.Diagnostics.ReteGraph.html#NRules_Diagnostics_ReteGraph_Links
  commentId: P:NRules.Diagnostics.ReteGraph.Links
  fullName: NRules.Diagnostics.ReteGraph.Links
  nameWithType: ReteGraph.Links
- uid: NRules.Diagnostics.ReteGraph.Links*
  name: Links
  href: api/NRules.Diagnostics.ReteGraph.html#NRules_Diagnostics_ReteGraph_Links_
  commentId: Overload:NRules.Diagnostics.ReteGraph.Links
  isSpec: "True"
  fullName: NRules.Diagnostics.ReteGraph.Links
  nameWithType: ReteGraph.Links
- uid: NRules.Diagnostics.ReteGraph.Nodes
  name: Nodes
  href: api/NRules.Diagnostics.ReteGraph.html#NRules_Diagnostics_ReteGraph_Nodes
  commentId: P:NRules.Diagnostics.ReteGraph.Nodes
  fullName: NRules.Diagnostics.ReteGraph.Nodes
  nameWithType: ReteGraph.Nodes
- uid: NRules.Diagnostics.ReteGraph.Nodes*
  name: Nodes
  href: api/NRules.Diagnostics.ReteGraph.html#NRules_Diagnostics_ReteGraph_Nodes_
  commentId: Overload:NRules.Diagnostics.ReteGraph.Nodes
  isSpec: "True"
  fullName: NRules.Diagnostics.ReteGraph.Nodes
  nameWithType: ReteGraph.Nodes
- uid: NRules.Diagnostics.ReteLink
  name: ReteLink
  href: api/NRules.Diagnostics.ReteLink.html
  commentId: T:NRules.Diagnostics.ReteLink
  fullName: NRules.Diagnostics.ReteLink
  nameWithType: ReteLink
- uid: NRules.Diagnostics.ReteLink.Source
  name: Source
  href: api/NRules.Diagnostics.ReteLink.html#NRules_Diagnostics_ReteLink_Source
  commentId: P:NRules.Diagnostics.ReteLink.Source
  fullName: NRules.Diagnostics.ReteLink.Source
  nameWithType: ReteLink.Source
- uid: NRules.Diagnostics.ReteLink.Source*
  name: Source
  href: api/NRules.Diagnostics.ReteLink.html#NRules_Diagnostics_ReteLink_Source_
  commentId: Overload:NRules.Diagnostics.ReteLink.Source
  isSpec: "True"
  fullName: NRules.Diagnostics.ReteLink.Source
  nameWithType: ReteLink.Source
- uid: NRules.Diagnostics.ReteLink.Target
  name: Target
  href: api/NRules.Diagnostics.ReteLink.html#NRules_Diagnostics_ReteLink_Target
  commentId: P:NRules.Diagnostics.ReteLink.Target
  fullName: NRules.Diagnostics.ReteLink.Target
  nameWithType: ReteLink.Target
- uid: NRules.Diagnostics.ReteLink.Target*
  name: Target
  href: api/NRules.Diagnostics.ReteLink.html#NRules_Diagnostics_ReteLink_Target_
  commentId: Overload:NRules.Diagnostics.ReteLink.Target
  isSpec: "True"
  fullName: NRules.Diagnostics.ReteLink.Target
  nameWithType: ReteLink.Target
- uid: NRules.Diagnostics.ReteNode
  name: ReteNode
  href: api/NRules.Diagnostics.ReteNode.html
  commentId: T:NRules.Diagnostics.ReteNode
  fullName: NRules.Diagnostics.ReteNode
  nameWithType: ReteNode
- uid: NRules.Diagnostics.ReteNode.Expressions
  name: Expressions
  href: api/NRules.Diagnostics.ReteNode.html#NRules_Diagnostics_ReteNode_Expressions
  commentId: P:NRules.Diagnostics.ReteNode.Expressions
  fullName: NRules.Diagnostics.ReteNode.Expressions
  nameWithType: ReteNode.Expressions
- uid: NRules.Diagnostics.ReteNode.Expressions*
  name: Expressions
  href: api/NRules.Diagnostics.ReteNode.html#NRules_Diagnostics_ReteNode_Expressions_
  commentId: Overload:NRules.Diagnostics.ReteNode.Expressions
  isSpec: "True"
  fullName: NRules.Diagnostics.ReteNode.Expressions
  nameWithType: ReteNode.Expressions
- uid: NRules.Diagnostics.ReteNode.Id
  name: Id
  href: api/NRules.Diagnostics.ReteNode.html#NRules_Diagnostics_ReteNode_Id
  commentId: P:NRules.Diagnostics.ReteNode.Id
  fullName: NRules.Diagnostics.ReteNode.Id
  nameWithType: ReteNode.Id
- uid: NRules.Diagnostics.ReteNode.Id*
  name: Id
  href: api/NRules.Diagnostics.ReteNode.html#NRules_Diagnostics_ReteNode_Id_
  commentId: Overload:NRules.Diagnostics.ReteNode.Id
  isSpec: "True"
  fullName: NRules.Diagnostics.ReteNode.Id
  nameWithType: ReteNode.Id
- uid: NRules.Diagnostics.ReteNode.NodeType
  name: NodeType
  href: api/NRules.Diagnostics.ReteNode.html#NRules_Diagnostics_ReteNode_NodeType
  commentId: P:NRules.Diagnostics.ReteNode.NodeType
  fullName: NRules.Diagnostics.ReteNode.NodeType
  nameWithType: ReteNode.NodeType
- uid: NRules.Diagnostics.ReteNode.NodeType*
  name: NodeType
  href: api/NRules.Diagnostics.ReteNode.html#NRules_Diagnostics_ReteNode_NodeType_
  commentId: Overload:NRules.Diagnostics.ReteNode.NodeType
  isSpec: "True"
  fullName: NRules.Diagnostics.ReteNode.NodeType
  nameWithType: ReteNode.NodeType
- uid: NRules.Diagnostics.ReteNode.OutputType
  name: OutputType
  href: api/NRules.Diagnostics.ReteNode.html#NRules_Diagnostics_ReteNode_OutputType
  commentId: P:NRules.Diagnostics.ReteNode.OutputType
  fullName: NRules.Diagnostics.ReteNode.OutputType
  nameWithType: ReteNode.OutputType
- uid: NRules.Diagnostics.ReteNode.OutputType*
  name: OutputType
  href: api/NRules.Diagnostics.ReteNode.html#NRules_Diagnostics_ReteNode_OutputType_
  commentId: Overload:NRules.Diagnostics.ReteNode.OutputType
  isSpec: "True"
  fullName: NRules.Diagnostics.ReteNode.OutputType
  nameWithType: ReteNode.OutputType
- uid: NRules.Diagnostics.ReteNode.Properties
  name: Properties
  href: api/NRules.Diagnostics.ReteNode.html#NRules_Diagnostics_ReteNode_Properties
  commentId: P:NRules.Diagnostics.ReteNode.Properties
  fullName: NRules.Diagnostics.ReteNode.Properties
  nameWithType: ReteNode.Properties
- uid: NRules.Diagnostics.ReteNode.Properties*
  name: Properties
  href: api/NRules.Diagnostics.ReteNode.html#NRules_Diagnostics_ReteNode_Properties_
  commentId: Overload:NRules.Diagnostics.ReteNode.Properties
  isSpec: "True"
  fullName: NRules.Diagnostics.ReteNode.Properties
  nameWithType: ReteNode.Properties
- uid: NRules.Diagnostics.ReteNode.Rules
  name: Rules
  href: api/NRules.Diagnostics.ReteNode.html#NRules_Diagnostics_ReteNode_Rules
  commentId: P:NRules.Diagnostics.ReteNode.Rules
  fullName: NRules.Diagnostics.ReteNode.Rules
  nameWithType: ReteNode.Rules
- uid: NRules.Diagnostics.ReteNode.Rules*
  name: Rules
  href: api/NRules.Diagnostics.ReteNode.html#NRules_Diagnostics_ReteNode_Rules_
  commentId: Overload:NRules.Diagnostics.ReteNode.Rules
  isSpec: "True"
  fullName: NRules.Diagnostics.ReteNode.Rules
  nameWithType: ReteNode.Rules
- uid: NRules.Diagnostics.RhsExpressionErrorEventArgs
  name: RhsExpressionErrorEventArgs
  href: api/NRules.Diagnostics.RhsExpressionErrorEventArgs.html
  commentId: T:NRules.Diagnostics.RhsExpressionErrorEventArgs
  fullName: NRules.Diagnostics.RhsExpressionErrorEventArgs
  nameWithType: RhsExpressionErrorEventArgs
- uid: NRules.Diagnostics.RhsExpressionErrorEventArgs.#ctor(System.Linq.Expressions.Expression,System.Exception,System.Object[],NRules.RuleModel.IMatch)
  name: RhsExpressionErrorEventArgs(Expression, Exception, object[], IMatch)
  href: api/NRules.Diagnostics.RhsExpressionErrorEventArgs.html#NRules_Diagnostics_RhsExpressionErrorEventArgs__ctor_System_Linq_Expressions_Expression_System_Exception_System_Object___NRules_RuleModel_IMatch_
  commentId: M:NRules.Diagnostics.RhsExpressionErrorEventArgs.#ctor(System.Linq.Expressions.Expression,System.Exception,System.Object[],NRules.RuleModel.IMatch)
  name.vb: New(Expression, Exception, Object(), IMatch)
  fullName: NRules.Diagnostics.RhsExpressionErrorEventArgs.RhsExpressionErrorEventArgs(System.Linq.Expressions.Expression, System.Exception, object[], NRules.RuleModel.IMatch)
  fullName.vb: NRules.Diagnostics.RhsExpressionErrorEventArgs.New(System.Linq.Expressions.Expression, System.Exception, Object(), NRules.RuleModel.IMatch)
  nameWithType: RhsExpressionErrorEventArgs.RhsExpressionErrorEventArgs(Expression, Exception, object[], IMatch)
  nameWithType.vb: RhsExpressionErrorEventArgs.New(Expression, Exception, Object(), IMatch)
- uid: NRules.Diagnostics.RhsExpressionErrorEventArgs.#ctor*
  name: RhsExpressionErrorEventArgs
  href: api/NRules.Diagnostics.RhsExpressionErrorEventArgs.html#NRules_Diagnostics_RhsExpressionErrorEventArgs__ctor_
  commentId: Overload:NRules.Diagnostics.RhsExpressionErrorEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Diagnostics.RhsExpressionErrorEventArgs.RhsExpressionErrorEventArgs
  fullName.vb: NRules.Diagnostics.RhsExpressionErrorEventArgs.New
  nameWithType: RhsExpressionErrorEventArgs.RhsExpressionErrorEventArgs
  nameWithType.vb: RhsExpressionErrorEventArgs.New
- uid: NRules.Diagnostics.RhsExpressionErrorEventArgs.IsHandled
  name: IsHandled
  href: api/NRules.Diagnostics.RhsExpressionErrorEventArgs.html#NRules_Diagnostics_RhsExpressionErrorEventArgs_IsHandled
  commentId: P:NRules.Diagnostics.RhsExpressionErrorEventArgs.IsHandled
  fullName: NRules.Diagnostics.RhsExpressionErrorEventArgs.IsHandled
  nameWithType: RhsExpressionErrorEventArgs.IsHandled
- uid: NRules.Diagnostics.RhsExpressionErrorEventArgs.IsHandled*
  name: IsHandled
  href: api/NRules.Diagnostics.RhsExpressionErrorEventArgs.html#NRules_Diagnostics_RhsExpressionErrorEventArgs_IsHandled_
  commentId: Overload:NRules.Diagnostics.RhsExpressionErrorEventArgs.IsHandled
  isSpec: "True"
  fullName: NRules.Diagnostics.RhsExpressionErrorEventArgs.IsHandled
  nameWithType: RhsExpressionErrorEventArgs.IsHandled
- uid: NRules.Diagnostics.RhsExpressionEventArgs
  name: RhsExpressionEventArgs
  href: api/NRules.Diagnostics.RhsExpressionEventArgs.html
  commentId: T:NRules.Diagnostics.RhsExpressionEventArgs
  fullName: NRules.Diagnostics.RhsExpressionEventArgs
  nameWithType: RhsExpressionEventArgs
- uid: NRules.Diagnostics.RhsExpressionEventArgs.#ctor(System.Linq.Expressions.Expression,System.Exception,System.Object[],NRules.RuleModel.IMatch)
  name: RhsExpressionEventArgs(Expression, Exception, object[], IMatch)
  href: api/NRules.Diagnostics.RhsExpressionEventArgs.html#NRules_Diagnostics_RhsExpressionEventArgs__ctor_System_Linq_Expressions_Expression_System_Exception_System_Object___NRules_RuleModel_IMatch_
  commentId: M:NRules.Diagnostics.RhsExpressionEventArgs.#ctor(System.Linq.Expressions.Expression,System.Exception,System.Object[],NRules.RuleModel.IMatch)
  name.vb: New(Expression, Exception, Object(), IMatch)
  fullName: NRules.Diagnostics.RhsExpressionEventArgs.RhsExpressionEventArgs(System.Linq.Expressions.Expression, System.Exception, object[], NRules.RuleModel.IMatch)
  fullName.vb: NRules.Diagnostics.RhsExpressionEventArgs.New(System.Linq.Expressions.Expression, System.Exception, Object(), NRules.RuleModel.IMatch)
  nameWithType: RhsExpressionEventArgs.RhsExpressionEventArgs(Expression, Exception, object[], IMatch)
  nameWithType.vb: RhsExpressionEventArgs.New(Expression, Exception, Object(), IMatch)
- uid: NRules.Diagnostics.RhsExpressionEventArgs.#ctor*
  name: RhsExpressionEventArgs
  href: api/NRules.Diagnostics.RhsExpressionEventArgs.html#NRules_Diagnostics_RhsExpressionEventArgs__ctor_
  commentId: Overload:NRules.Diagnostics.RhsExpressionEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Diagnostics.RhsExpressionEventArgs.RhsExpressionEventArgs
  fullName.vb: NRules.Diagnostics.RhsExpressionEventArgs.New
  nameWithType: RhsExpressionEventArgs.RhsExpressionEventArgs
  nameWithType.vb: RhsExpressionEventArgs.New
- uid: NRules.Diagnostics.RhsExpressionEventArgs.Match
  name: Match
  href: api/NRules.Diagnostics.RhsExpressionEventArgs.html#NRules_Diagnostics_RhsExpressionEventArgs_Match
  commentId: P:NRules.Diagnostics.RhsExpressionEventArgs.Match
  fullName: NRules.Diagnostics.RhsExpressionEventArgs.Match
  nameWithType: RhsExpressionEventArgs.Match
- uid: NRules.Diagnostics.RhsExpressionEventArgs.Match*
  name: Match
  href: api/NRules.Diagnostics.RhsExpressionEventArgs.html#NRules_Diagnostics_RhsExpressionEventArgs_Match_
  commentId: Overload:NRules.Diagnostics.RhsExpressionEventArgs.Match
  isSpec: "True"
  fullName: NRules.Diagnostics.RhsExpressionEventArgs.Match
  nameWithType: RhsExpressionEventArgs.Match
- uid: NRules.Diagnostics.WorkingMemoryEventArgs
  name: WorkingMemoryEventArgs
  href: api/NRules.Diagnostics.WorkingMemoryEventArgs.html
  commentId: T:NRules.Diagnostics.WorkingMemoryEventArgs
  fullName: NRules.Diagnostics.WorkingMemoryEventArgs
  nameWithType: WorkingMemoryEventArgs
- uid: NRules.Diagnostics.WorkingMemoryEventArgs.#ctor(NRules.RuleModel.IFact)
  name: WorkingMemoryEventArgs(IFact)
  href: api/NRules.Diagnostics.WorkingMemoryEventArgs.html#NRules_Diagnostics_WorkingMemoryEventArgs__ctor_NRules_RuleModel_IFact_
  commentId: M:NRules.Diagnostics.WorkingMemoryEventArgs.#ctor(NRules.RuleModel.IFact)
  name.vb: New(IFact)
  fullName: NRules.Diagnostics.WorkingMemoryEventArgs.WorkingMemoryEventArgs(NRules.RuleModel.IFact)
  fullName.vb: NRules.Diagnostics.WorkingMemoryEventArgs.New(NRules.RuleModel.IFact)
  nameWithType: WorkingMemoryEventArgs.WorkingMemoryEventArgs(IFact)
  nameWithType.vb: WorkingMemoryEventArgs.New(IFact)
- uid: NRules.Diagnostics.WorkingMemoryEventArgs.#ctor*
  name: WorkingMemoryEventArgs
  href: api/NRules.Diagnostics.WorkingMemoryEventArgs.html#NRules_Diagnostics_WorkingMemoryEventArgs__ctor_
  commentId: Overload:NRules.Diagnostics.WorkingMemoryEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Diagnostics.WorkingMemoryEventArgs.WorkingMemoryEventArgs
  fullName.vb: NRules.Diagnostics.WorkingMemoryEventArgs.New
  nameWithType: WorkingMemoryEventArgs.WorkingMemoryEventArgs
  nameWithType.vb: WorkingMemoryEventArgs.New
- uid: NRules.Diagnostics.WorkingMemoryEventArgs.Fact
  name: Fact
  href: api/NRules.Diagnostics.WorkingMemoryEventArgs.html#NRules_Diagnostics_WorkingMemoryEventArgs_Fact
  commentId: P:NRules.Diagnostics.WorkingMemoryEventArgs.Fact
  fullName: NRules.Diagnostics.WorkingMemoryEventArgs.Fact
  nameWithType: WorkingMemoryEventArgs.Fact
- uid: NRules.Diagnostics.WorkingMemoryEventArgs.Fact*
  name: Fact
  href: api/NRules.Diagnostics.WorkingMemoryEventArgs.html#NRules_Diagnostics_WorkingMemoryEventArgs_Fact_
  commentId: Overload:NRules.Diagnostics.WorkingMemoryEventArgs.Fact
  isSpec: "True"
  fullName: NRules.Diagnostics.WorkingMemoryEventArgs.Fact
  nameWithType: WorkingMemoryEventArgs.Fact
- uid: NRules.Extensibility
  name: NRules.Extensibility
  href: api/NRules.Extensibility.html
  commentId: N:NRules.Extensibility
  fullName: NRules.Extensibility
  nameWithType: NRules.Extensibility
- uid: NRules.Extensibility.IActionInterceptor
  name: IActionInterceptor
  href: api/NRules.Extensibility.IActionInterceptor.html
  commentId: T:NRules.Extensibility.IActionInterceptor
  fullName: NRules.Extensibility.IActionInterceptor
  nameWithType: IActionInterceptor
- uid: NRules.Extensibility.IActionInterceptor.Intercept(NRules.RuleModel.IContext,System.Collections.Generic.IEnumerable{NRules.Extensibility.IActionInvocation})
  name: Intercept(IContext, IEnumerable<IActionInvocation>)
  href: api/NRules.Extensibility.IActionInterceptor.html#NRules_Extensibility_IActionInterceptor_Intercept_NRules_RuleModel_IContext_System_Collections_Generic_IEnumerable_NRules_Extensibility_IActionInvocation__
  commentId: M:NRules.Extensibility.IActionInterceptor.Intercept(NRules.RuleModel.IContext,System.Collections.Generic.IEnumerable{NRules.Extensibility.IActionInvocation})
  name.vb: Intercept(IContext, IEnumerable(Of IActionInvocation))
  fullName: NRules.Extensibility.IActionInterceptor.Intercept(NRules.RuleModel.IContext, System.Collections.Generic.IEnumerable<NRules.Extensibility.IActionInvocation>)
  fullName.vb: NRules.Extensibility.IActionInterceptor.Intercept(NRules.RuleModel.IContext, System.Collections.Generic.IEnumerable(Of NRules.Extensibility.IActionInvocation))
  nameWithType: IActionInterceptor.Intercept(IContext, IEnumerable<IActionInvocation>)
  nameWithType.vb: IActionInterceptor.Intercept(IContext, IEnumerable(Of IActionInvocation))
- uid: NRules.Extensibility.IActionInterceptor.Intercept*
  name: Intercept
  href: api/NRules.Extensibility.IActionInterceptor.html#NRules_Extensibility_IActionInterceptor_Intercept_
  commentId: Overload:NRules.Extensibility.IActionInterceptor.Intercept
  isSpec: "True"
  fullName: NRules.Extensibility.IActionInterceptor.Intercept
  nameWithType: IActionInterceptor.Intercept
- uid: NRules.Extensibility.IActionInvocation
  name: IActionInvocation
  href: api/NRules.Extensibility.IActionInvocation.html
  commentId: T:NRules.Extensibility.IActionInvocation
  fullName: NRules.Extensibility.IActionInvocation
  nameWithType: IActionInvocation
- uid: NRules.Extensibility.IActionInvocation.Arguments
  name: Arguments
  href: api/NRules.Extensibility.IActionInvocation.html#NRules_Extensibility_IActionInvocation_Arguments
  commentId: P:NRules.Extensibility.IActionInvocation.Arguments
  fullName: NRules.Extensibility.IActionInvocation.Arguments
  nameWithType: IActionInvocation.Arguments
- uid: NRules.Extensibility.IActionInvocation.Arguments*
  name: Arguments
  href: api/NRules.Extensibility.IActionInvocation.html#NRules_Extensibility_IActionInvocation_Arguments_
  commentId: Overload:NRules.Extensibility.IActionInvocation.Arguments
  isSpec: "True"
  fullName: NRules.Extensibility.IActionInvocation.Arguments
  nameWithType: IActionInvocation.Arguments
- uid: NRules.Extensibility.IActionInvocation.Invoke
  name: Invoke()
  href: api/NRules.Extensibility.IActionInvocation.html#NRules_Extensibility_IActionInvocation_Invoke
  commentId: M:NRules.Extensibility.IActionInvocation.Invoke
  fullName: NRules.Extensibility.IActionInvocation.Invoke()
  nameWithType: IActionInvocation.Invoke()
- uid: NRules.Extensibility.IActionInvocation.Invoke*
  name: Invoke
  href: api/NRules.Extensibility.IActionInvocation.html#NRules_Extensibility_IActionInvocation_Invoke_
  commentId: Overload:NRules.Extensibility.IActionInvocation.Invoke
  isSpec: "True"
  fullName: NRules.Extensibility.IActionInvocation.Invoke
  nameWithType: IActionInvocation.Invoke
- uid: NRules.Extensibility.IActionInvocation.Trigger
  name: Trigger
  href: api/NRules.Extensibility.IActionInvocation.html#NRules_Extensibility_IActionInvocation_Trigger
  commentId: P:NRules.Extensibility.IActionInvocation.Trigger
  fullName: NRules.Extensibility.IActionInvocation.Trigger
  nameWithType: IActionInvocation.Trigger
- uid: NRules.Extensibility.IActionInvocation.Trigger*
  name: Trigger
  href: api/NRules.Extensibility.IActionInvocation.html#NRules_Extensibility_IActionInvocation_Trigger_
  commentId: Overload:NRules.Extensibility.IActionInvocation.Trigger
  isSpec: "True"
  fullName: NRules.Extensibility.IActionInvocation.Trigger
  nameWithType: IActionInvocation.Trigger
- uid: NRules.Extensibility.IDependencyResolver
  name: IDependencyResolver
  href: api/NRules.Extensibility.IDependencyResolver.html
  commentId: T:NRules.Extensibility.IDependencyResolver
  fullName: NRules.Extensibility.IDependencyResolver
  nameWithType: IDependencyResolver
- uid: NRules.Extensibility.IDependencyResolver.Resolve(NRules.Extensibility.IResolutionContext,System.Type)
  name: Resolve(IResolutionContext, Type)
  href: api/NRules.Extensibility.IDependencyResolver.html#NRules_Extensibility_IDependencyResolver_Resolve_NRules_Extensibility_IResolutionContext_System_Type_
  commentId: M:NRules.Extensibility.IDependencyResolver.Resolve(NRules.Extensibility.IResolutionContext,System.Type)
  fullName: NRules.Extensibility.IDependencyResolver.Resolve(NRules.Extensibility.IResolutionContext, System.Type)
  nameWithType: IDependencyResolver.Resolve(IResolutionContext, Type)
- uid: NRules.Extensibility.IDependencyResolver.Resolve*
  name: Resolve
  href: api/NRules.Extensibility.IDependencyResolver.html#NRules_Extensibility_IDependencyResolver_Resolve_
  commentId: Overload:NRules.Extensibility.IDependencyResolver.Resolve
  isSpec: "True"
  fullName: NRules.Extensibility.IDependencyResolver.Resolve
  nameWithType: IDependencyResolver.Resolve
- uid: NRules.Extensibility.IExpressionCompiler
  name: IExpressionCompiler
  href: api/NRules.Extensibility.IExpressionCompiler.html
  commentId: T:NRules.Extensibility.IExpressionCompiler
  fullName: NRules.Extensibility.IExpressionCompiler
  nameWithType: IExpressionCompiler
- uid: NRules.Extensibility.IExpressionCompiler.Compile*
  name: Compile
  href: api/NRules.Extensibility.IExpressionCompiler.html#NRules_Extensibility_IExpressionCompiler_Compile_
  commentId: Overload:NRules.Extensibility.IExpressionCompiler.Compile
  isSpec: "True"
  fullName: NRules.Extensibility.IExpressionCompiler.Compile
  nameWithType: IExpressionCompiler.Compile
- uid: NRules.Extensibility.IExpressionCompiler.Compile``1(System.Linq.Expressions.Expression{``0})
  name: Compile<TDelegate>(Expression<TDelegate>)
  href: api/NRules.Extensibility.IExpressionCompiler.html#NRules_Extensibility_IExpressionCompiler_Compile__1_System_Linq_Expressions_Expression___0__
  commentId: M:NRules.Extensibility.IExpressionCompiler.Compile``1(System.Linq.Expressions.Expression{``0})
  name.vb: Compile(Of TDelegate)(Expression(Of TDelegate))
  fullName: NRules.Extensibility.IExpressionCompiler.Compile<TDelegate>(System.Linq.Expressions.Expression<TDelegate>)
  fullName.vb: NRules.Extensibility.IExpressionCompiler.Compile(Of TDelegate)(System.Linq.Expressions.Expression(Of TDelegate))
  nameWithType: IExpressionCompiler.Compile<TDelegate>(Expression<TDelegate>)
  nameWithType.vb: IExpressionCompiler.Compile(Of TDelegate)(Expression(Of TDelegate))
- uid: NRules.Extensibility.IResolutionContext
  name: IResolutionContext
  href: api/NRules.Extensibility.IResolutionContext.html
  commentId: T:NRules.Extensibility.IResolutionContext
  fullName: NRules.Extensibility.IResolutionContext
  nameWithType: IResolutionContext
- uid: NRules.Extensibility.IResolutionContext.Rule
  name: Rule
  href: api/NRules.Extensibility.IResolutionContext.html#NRules_Extensibility_IResolutionContext_Rule
  commentId: P:NRules.Extensibility.IResolutionContext.Rule
  fullName: NRules.Extensibility.IResolutionContext.Rule
  nameWithType: IResolutionContext.Rule
- uid: NRules.Extensibility.IResolutionContext.Rule*
  name: Rule
  href: api/NRules.Extensibility.IResolutionContext.html#NRules_Extensibility_IResolutionContext_Rule_
  commentId: Overload:NRules.Extensibility.IResolutionContext.Rule
  isSpec: "True"
  fullName: NRules.Extensibility.IResolutionContext.Rule
  nameWithType: IResolutionContext.Rule
- uid: NRules.Extensibility.IResolutionContext.Session
  name: Session
  href: api/NRules.Extensibility.IResolutionContext.html#NRules_Extensibility_IResolutionContext_Session
  commentId: P:NRules.Extensibility.IResolutionContext.Session
  fullName: NRules.Extensibility.IResolutionContext.Session
  nameWithType: IResolutionContext.Session
- uid: NRules.Extensibility.IResolutionContext.Session*
  name: Session
  href: api/NRules.Extensibility.IResolutionContext.html#NRules_Extensibility_IResolutionContext_Session_
  commentId: Overload:NRules.Extensibility.IResolutionContext.Session
  isSpec: "True"
  fullName: NRules.Extensibility.IResolutionContext.Session
  nameWithType: IResolutionContext.Session
- uid: NRules.Fluent
  name: NRules.Fluent
  href: api/NRules.Fluent.html
  commentId: N:NRules.Fluent
  fullName: NRules.Fluent
  nameWithType: NRules.Fluent
- uid: NRules.Fluent.DefaultRuleActivator
  name: DefaultRuleActivator
  href: api/NRules.Fluent.DefaultRuleActivator.html
  commentId: T:NRules.Fluent.DefaultRuleActivator
  fullName: NRules.Fluent.DefaultRuleActivator
  nameWithType: DefaultRuleActivator
- uid: NRules.Fluent.DefaultRuleActivator.Activate(System.Type)
  name: Activate(Type)
  href: api/NRules.Fluent.DefaultRuleActivator.html#NRules_Fluent_DefaultRuleActivator_Activate_System_Type_
  commentId: M:NRules.Fluent.DefaultRuleActivator.Activate(System.Type)
  fullName: NRules.Fluent.DefaultRuleActivator.Activate(System.Type)
  nameWithType: DefaultRuleActivator.Activate(Type)
- uid: NRules.Fluent.DefaultRuleActivator.Activate*
  name: Activate
  href: api/NRules.Fluent.DefaultRuleActivator.html#NRules_Fluent_DefaultRuleActivator_Activate_
  commentId: Overload:NRules.Fluent.DefaultRuleActivator.Activate
  isSpec: "True"
  fullName: NRules.Fluent.DefaultRuleActivator.Activate
  nameWithType: DefaultRuleActivator.Activate
- uid: NRules.Fluent.Dsl
  name: NRules.Fluent.Dsl
  href: api/NRules.Fluent.Dsl.html
  commentId: N:NRules.Fluent.Dsl
  fullName: NRules.Fluent.Dsl
  nameWithType: NRules.Fluent.Dsl
- uid: NRules.Fluent.Dsl.ContextExtensions
  name: ContextExtensions
  href: api/NRules.Fluent.Dsl.ContextExtensions.html
  commentId: T:NRules.Fluent.Dsl.ContextExtensions
  fullName: NRules.Fluent.Dsl.ContextExtensions
  nameWithType: ContextExtensions
- uid: NRules.Fluent.Dsl.ContextExtensions.Resolve*
  name: Resolve
  href: api/NRules.Fluent.Dsl.ContextExtensions.html#NRules_Fluent_Dsl_ContextExtensions_Resolve_
  commentId: Overload:NRules.Fluent.Dsl.ContextExtensions.Resolve
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.ContextExtensions.Resolve
  nameWithType: ContextExtensions.Resolve
- uid: NRules.Fluent.Dsl.ContextExtensions.Resolve``1(NRules.RuleModel.IContext)
  name: Resolve<TService>(IContext)
  href: api/NRules.Fluent.Dsl.ContextExtensions.html#NRules_Fluent_Dsl_ContextExtensions_Resolve__1_NRules_RuleModel_IContext_
  commentId: M:NRules.Fluent.Dsl.ContextExtensions.Resolve``1(NRules.RuleModel.IContext)
  name.vb: Resolve(Of TService)(IContext)
  fullName: NRules.Fluent.Dsl.ContextExtensions.Resolve<TService>(NRules.RuleModel.IContext)
  fullName.vb: NRules.Fluent.Dsl.ContextExtensions.Resolve(Of TService)(NRules.RuleModel.IContext)
  nameWithType: ContextExtensions.Resolve<TService>(IContext)
  nameWithType.vb: ContextExtensions.Resolve(Of TService)(IContext)
- uid: NRules.Fluent.Dsl.ContextExtensions.Update*
  name: Update
  href: api/NRules.Fluent.Dsl.ContextExtensions.html#NRules_Fluent_Dsl_ContextExtensions_Update_
  commentId: Overload:NRules.Fluent.Dsl.ContextExtensions.Update
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.ContextExtensions.Update
  nameWithType: ContextExtensions.Update
- uid: NRules.Fluent.Dsl.ContextExtensions.Update``1(NRules.RuleModel.IContext,``0,System.Action{``0})
  name: Update<T>(IContext, T, Action<T>)
  href: api/NRules.Fluent.Dsl.ContextExtensions.html#NRules_Fluent_Dsl_ContextExtensions_Update__1_NRules_RuleModel_IContext___0_System_Action___0__
  commentId: M:NRules.Fluent.Dsl.ContextExtensions.Update``1(NRules.RuleModel.IContext,``0,System.Action{``0})
  name.vb: Update(Of T)(IContext, T, Action(Of T))
  fullName: NRules.Fluent.Dsl.ContextExtensions.Update<T>(NRules.RuleModel.IContext, T, System.Action<T>)
  fullName.vb: NRules.Fluent.Dsl.ContextExtensions.Update(Of T)(NRules.RuleModel.IContext, T, System.Action(Of T))
  nameWithType: ContextExtensions.Update<T>(IContext, T, Action<T>)
  nameWithType.vb: ContextExtensions.Update(Of T)(IContext, T, Action(Of T))
- uid: NRules.Fluent.Dsl.DescriptionAttribute
  name: DescriptionAttribute
  href: api/NRules.Fluent.Dsl.DescriptionAttribute.html
  commentId: T:NRules.Fluent.Dsl.DescriptionAttribute
  fullName: NRules.Fluent.Dsl.DescriptionAttribute
  nameWithType: DescriptionAttribute
- uid: NRules.Fluent.Dsl.DescriptionAttribute.#ctor(System.String)
  name: DescriptionAttribute(string)
  href: api/NRules.Fluent.Dsl.DescriptionAttribute.html#NRules_Fluent_Dsl_DescriptionAttribute__ctor_System_String_
  commentId: M:NRules.Fluent.Dsl.DescriptionAttribute.#ctor(System.String)
  name.vb: New(String)
  fullName: NRules.Fluent.Dsl.DescriptionAttribute.DescriptionAttribute(string)
  fullName.vb: NRules.Fluent.Dsl.DescriptionAttribute.New(String)
  nameWithType: DescriptionAttribute.DescriptionAttribute(string)
  nameWithType.vb: DescriptionAttribute.New(String)
- uid: NRules.Fluent.Dsl.DescriptionAttribute.#ctor*
  name: DescriptionAttribute
  href: api/NRules.Fluent.Dsl.DescriptionAttribute.html#NRules_Fluent_Dsl_DescriptionAttribute__ctor_
  commentId: Overload:NRules.Fluent.Dsl.DescriptionAttribute.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Fluent.Dsl.DescriptionAttribute.DescriptionAttribute
  fullName.vb: NRules.Fluent.Dsl.DescriptionAttribute.New
  nameWithType: DescriptionAttribute.DescriptionAttribute
  nameWithType.vb: DescriptionAttribute.New
- uid: NRules.Fluent.Dsl.ICollectQuery`1
  name: ICollectQuery<TSource>
  href: api/NRules.Fluent.Dsl.ICollectQuery-1.html
  commentId: T:NRules.Fluent.Dsl.ICollectQuery`1
  name.vb: ICollectQuery(Of TSource)
  fullName: NRules.Fluent.Dsl.ICollectQuery<TSource>
  fullName.vb: NRules.Fluent.Dsl.ICollectQuery(Of TSource)
  nameWithType: ICollectQuery<TSource>
  nameWithType.vb: ICollectQuery(Of TSource)
- uid: NRules.Fluent.Dsl.IDependencyExpression
  name: IDependencyExpression
  href: api/NRules.Fluent.Dsl.IDependencyExpression.html
  commentId: T:NRules.Fluent.Dsl.IDependencyExpression
  fullName: NRules.Fluent.Dsl.IDependencyExpression
  nameWithType: IDependencyExpression
- uid: NRules.Fluent.Dsl.IDependencyExpression.Resolve*
  name: Resolve
  href: api/NRules.Fluent.Dsl.IDependencyExpression.html#NRules_Fluent_Dsl_IDependencyExpression_Resolve_
  commentId: Overload:NRules.Fluent.Dsl.IDependencyExpression.Resolve
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.IDependencyExpression.Resolve
  nameWithType: IDependencyExpression.Resolve
- uid: NRules.Fluent.Dsl.IDependencyExpression.Resolve``1(System.Linq.Expressions.Expression{System.Func{``0}})
  name: Resolve<TDependency>(Expression<Func<TDependency>>)
  href: api/NRules.Fluent.Dsl.IDependencyExpression.html#NRules_Fluent_Dsl_IDependencyExpression_Resolve__1_System_Linq_Expressions_Expression_System_Func___0___
  commentId: M:NRules.Fluent.Dsl.IDependencyExpression.Resolve``1(System.Linq.Expressions.Expression{System.Func{``0}})
  name.vb: Resolve(Of TDependency)(Expression(Of Func(Of TDependency)))
  fullName: NRules.Fluent.Dsl.IDependencyExpression.Resolve<TDependency>(System.Linq.Expressions.Expression<System.Func<TDependency>>)
  fullName.vb: NRules.Fluent.Dsl.IDependencyExpression.Resolve(Of TDependency)(System.Linq.Expressions.Expression(Of System.Func(Of TDependency)))
  nameWithType: IDependencyExpression.Resolve<TDependency>(Expression<Func<TDependency>>)
  nameWithType.vb: IDependencyExpression.Resolve(Of TDependency)(Expression(Of Func(Of TDependency)))
- uid: NRules.Fluent.Dsl.IFilterExpression
  name: IFilterExpression
  href: api/NRules.Fluent.Dsl.IFilterExpression.html
  commentId: T:NRules.Fluent.Dsl.IFilterExpression
  fullName: NRules.Fluent.Dsl.IFilterExpression
  nameWithType: IFilterExpression
- uid: NRules.Fluent.Dsl.IFilterExpression.OnChange(System.Linq.Expressions.Expression{System.Func{System.Object}}[])
  name: OnChange(params Expression<Func<object>>[])
  href: api/NRules.Fluent.Dsl.IFilterExpression.html#NRules_Fluent_Dsl_IFilterExpression_OnChange_System_Linq_Expressions_Expression_System_Func_System_Object_____
  commentId: M:NRules.Fluent.Dsl.IFilterExpression.OnChange(System.Linq.Expressions.Expression{System.Func{System.Object}}[])
  name.vb: OnChange(ParamArray Expression(Of Func(Of Object))())
  fullName: NRules.Fluent.Dsl.IFilterExpression.OnChange(params System.Linq.Expressions.Expression<System.Func<object>>[])
  fullName.vb: NRules.Fluent.Dsl.IFilterExpression.OnChange(ParamArray System.Linq.Expressions.Expression(Of System.Func(Of Object))())
  nameWithType: IFilterExpression.OnChange(params Expression<Func<object>>[])
  nameWithType.vb: IFilterExpression.OnChange(ParamArray Expression(Of Func(Of Object))())
- uid: NRules.Fluent.Dsl.IFilterExpression.OnChange*
  name: OnChange
  href: api/NRules.Fluent.Dsl.IFilterExpression.html#NRules_Fluent_Dsl_IFilterExpression_OnChange_
  commentId: Overload:NRules.Fluent.Dsl.IFilterExpression.OnChange
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.IFilterExpression.OnChange
  nameWithType: IFilterExpression.OnChange
- uid: NRules.Fluent.Dsl.IFilterExpression.Where(System.Linq.Expressions.Expression{System.Func{System.Boolean}}[])
  name: Where(params Expression<Func<bool>>[])
  href: api/NRules.Fluent.Dsl.IFilterExpression.html#NRules_Fluent_Dsl_IFilterExpression_Where_System_Linq_Expressions_Expression_System_Func_System_Boolean_____
  commentId: M:NRules.Fluent.Dsl.IFilterExpression.Where(System.Linq.Expressions.Expression{System.Func{System.Boolean}}[])
  name.vb: Where(ParamArray Expression(Of Func(Of Boolean))())
  fullName: NRules.Fluent.Dsl.IFilterExpression.Where(params System.Linq.Expressions.Expression<System.Func<bool>>[])
  fullName.vb: NRules.Fluent.Dsl.IFilterExpression.Where(ParamArray System.Linq.Expressions.Expression(Of System.Func(Of Boolean))())
  nameWithType: IFilterExpression.Where(params Expression<Func<bool>>[])
  nameWithType.vb: IFilterExpression.Where(ParamArray Expression(Of Func(Of Boolean))())
- uid: NRules.Fluent.Dsl.IFilterExpression.Where*
  name: Where
  href: api/NRules.Fluent.Dsl.IFilterExpression.html#NRules_Fluent_Dsl_IFilterExpression_Where_
  commentId: Overload:NRules.Fluent.Dsl.IFilterExpression.Where
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.IFilterExpression.Where
  nameWithType: IFilterExpression.Where
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression
  name: ILeftHandSideExpression
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html
  commentId: T:NRules.Fluent.Dsl.ILeftHandSideExpression
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression
  nameWithType: ILeftHandSideExpression
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.All*
  name: All
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_All_
  commentId: Overload:NRules.Fluent.Dsl.ILeftHandSideExpression.All
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.All
  nameWithType: ILeftHandSideExpression.All
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.All``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: All<TFact>(Expression<Func<TFact, bool>>)
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_All__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  commentId: M:NRules.Fluent.Dsl.ILeftHandSideExpression.All``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name.vb: All(Of TFact)(Expression(Of Func(Of TFact, Boolean)))
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.All<TFact>(System.Linq.Expressions.Expression<System.Func<TFact, bool>>)
  fullName.vb: NRules.Fluent.Dsl.ILeftHandSideExpression.All(Of TFact)(System.Linq.Expressions.Expression(Of System.Func(Of TFact, Boolean)))
  nameWithType: ILeftHandSideExpression.All<TFact>(Expression<Func<TFact, bool>>)
  nameWithType.vb: ILeftHandSideExpression.All(Of TFact)(Expression(Of Func(Of TFact, Boolean)))
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.All``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])
  name: All<TFact>(Expression<Func<TFact, bool>>, params Expression<Func<TFact, bool>>[])
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_All__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Linq_Expressions_Expression_System_Func___0_System_Boolean_____
  commentId: M:NRules.Fluent.Dsl.ILeftHandSideExpression.All``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])
  name.vb: All(Of TFact)(Expression(Of Func(Of TFact, Boolean)), ParamArray Expression(Of Func(Of TFact, Boolean))())
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.All<TFact>(System.Linq.Expressions.Expression<System.Func<TFact, bool>>, params System.Linq.Expressions.Expression<System.Func<TFact, bool>>[])
  fullName.vb: NRules.Fluent.Dsl.ILeftHandSideExpression.All(Of TFact)(System.Linq.Expressions.Expression(Of System.Func(Of TFact, Boolean)), ParamArray System.Linq.Expressions.Expression(Of System.Func(Of TFact, Boolean))())
  nameWithType: ILeftHandSideExpression.All<TFact>(Expression<Func<TFact, bool>>, params Expression<Func<TFact, bool>>[])
  nameWithType.vb: ILeftHandSideExpression.All(Of TFact)(Expression(Of Func(Of TFact, Boolean)), ParamArray Expression(Of Func(Of TFact, Boolean))())
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.And(System.Action{NRules.Fluent.Dsl.ILeftHandSideExpression})
  name: And(Action<ILeftHandSideExpression>)
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_And_System_Action_NRules_Fluent_Dsl_ILeftHandSideExpression__
  commentId: M:NRules.Fluent.Dsl.ILeftHandSideExpression.And(System.Action{NRules.Fluent.Dsl.ILeftHandSideExpression})
  name.vb: And(Action(Of ILeftHandSideExpression))
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.And(System.Action<NRules.Fluent.Dsl.ILeftHandSideExpression>)
  fullName.vb: NRules.Fluent.Dsl.ILeftHandSideExpression.And(System.Action(Of NRules.Fluent.Dsl.ILeftHandSideExpression))
  nameWithType: ILeftHandSideExpression.And(Action<ILeftHandSideExpression>)
  nameWithType.vb: ILeftHandSideExpression.And(Action(Of ILeftHandSideExpression))
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.And*
  name: And
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_And_
  commentId: Overload:NRules.Fluent.Dsl.ILeftHandSideExpression.And
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.And
  nameWithType: ILeftHandSideExpression.And
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.Exists*
  name: Exists
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_Exists_
  commentId: Overload:NRules.Fluent.Dsl.ILeftHandSideExpression.Exists
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.Exists
  nameWithType: ILeftHandSideExpression.Exists
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.Exists``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])
  name: Exists<TFact>(params Expression<Func<TFact, bool>>[])
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_Exists__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean_____
  commentId: M:NRules.Fluent.Dsl.ILeftHandSideExpression.Exists``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])
  name.vb: Exists(Of TFact)(ParamArray Expression(Of Func(Of TFact, Boolean))())
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.Exists<TFact>(params System.Linq.Expressions.Expression<System.Func<TFact, bool>>[])
  fullName.vb: NRules.Fluent.Dsl.ILeftHandSideExpression.Exists(Of TFact)(ParamArray System.Linq.Expressions.Expression(Of System.Func(Of TFact, Boolean))())
  nameWithType: ILeftHandSideExpression.Exists<TFact>(params Expression<Func<TFact, bool>>[])
  nameWithType.vb: ILeftHandSideExpression.Exists(Of TFact)(ParamArray Expression(Of Func(Of TFact, Boolean))())
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.Having(System.Linq.Expressions.Expression{System.Func{System.Boolean}}[])
  name: Having(params Expression<Func<bool>>[])
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_Having_System_Linq_Expressions_Expression_System_Func_System_Boolean_____
  commentId: M:NRules.Fluent.Dsl.ILeftHandSideExpression.Having(System.Linq.Expressions.Expression{System.Func{System.Boolean}}[])
  name.vb: Having(ParamArray Expression(Of Func(Of Boolean))())
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.Having(params System.Linq.Expressions.Expression<System.Func<bool>>[])
  fullName.vb: NRules.Fluent.Dsl.ILeftHandSideExpression.Having(ParamArray System.Linq.Expressions.Expression(Of System.Func(Of Boolean))())
  nameWithType: ILeftHandSideExpression.Having(params Expression<Func<bool>>[])
  nameWithType.vb: ILeftHandSideExpression.Having(ParamArray Expression(Of Func(Of Boolean))())
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.Having*
  name: Having
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_Having_
  commentId: Overload:NRules.Fluent.Dsl.ILeftHandSideExpression.Having
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.Having
  nameWithType: ILeftHandSideExpression.Having
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.Let*
  name: Let
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_Let_
  commentId: Overload:NRules.Fluent.Dsl.ILeftHandSideExpression.Let
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.Let
  nameWithType: ILeftHandSideExpression.Let
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.Let``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Linq.Expressions.Expression{System.Func{``0}})
  name: Let<TResult>(Expression<Func<TResult>>, Expression<Func<TResult>>)
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_Let__1_System_Linq_Expressions_Expression_System_Func___0___System_Linq_Expressions_Expression_System_Func___0___
  commentId: M:NRules.Fluent.Dsl.ILeftHandSideExpression.Let``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Linq.Expressions.Expression{System.Func{``0}})
  name.vb: Let(Of TResult)(Expression(Of Func(Of TResult)), Expression(Of Func(Of TResult)))
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.Let<TResult>(System.Linq.Expressions.Expression<System.Func<TResult>>, System.Linq.Expressions.Expression<System.Func<TResult>>)
  fullName.vb: NRules.Fluent.Dsl.ILeftHandSideExpression.Let(Of TResult)(System.Linq.Expressions.Expression(Of System.Func(Of TResult)), System.Linq.Expressions.Expression(Of System.Func(Of TResult)))
  nameWithType: ILeftHandSideExpression.Let<TResult>(Expression<Func<TResult>>, Expression<Func<TResult>>)
  nameWithType.vb: ILeftHandSideExpression.Let(Of TResult)(Expression(Of Func(Of TResult)), Expression(Of Func(Of TResult)))
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.Match*
  name: Match
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_Match_
  commentId: Overload:NRules.Fluent.Dsl.ILeftHandSideExpression.Match
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.Match
  nameWithType: ILeftHandSideExpression.Match
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.Match``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])
  name: Match<TFact>(params Expression<Func<TFact, bool>>[])
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_Match__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean_____
  commentId: M:NRules.Fluent.Dsl.ILeftHandSideExpression.Match``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])
  name.vb: Match(Of TFact)(ParamArray Expression(Of Func(Of TFact, Boolean))())
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.Match<TFact>(params System.Linq.Expressions.Expression<System.Func<TFact, bool>>[])
  fullName.vb: NRules.Fluent.Dsl.ILeftHandSideExpression.Match(Of TFact)(ParamArray System.Linq.Expressions.Expression(Of System.Func(Of TFact, Boolean))())
  nameWithType: ILeftHandSideExpression.Match<TFact>(params Expression<Func<TFact, bool>>[])
  nameWithType.vb: ILeftHandSideExpression.Match(Of TFact)(ParamArray Expression(Of Func(Of TFact, Boolean))())
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.Match``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])
  name: Match<TFact>(Expression<Func<TFact>>, params Expression<Func<TFact, bool>>[])
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_Match__1_System_Linq_Expressions_Expression_System_Func___0___System_Linq_Expressions_Expression_System_Func___0_System_Boolean_____
  commentId: M:NRules.Fluent.Dsl.ILeftHandSideExpression.Match``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])
  name.vb: Match(Of TFact)(Expression(Of Func(Of TFact)), ParamArray Expression(Of Func(Of TFact, Boolean))())
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.Match<TFact>(System.Linq.Expressions.Expression<System.Func<TFact>>, params System.Linq.Expressions.Expression<System.Func<TFact, bool>>[])
  fullName.vb: NRules.Fluent.Dsl.ILeftHandSideExpression.Match(Of TFact)(System.Linq.Expressions.Expression(Of System.Func(Of TFact)), ParamArray System.Linq.Expressions.Expression(Of System.Func(Of TFact, Boolean))())
  nameWithType: ILeftHandSideExpression.Match<TFact>(Expression<Func<TFact>>, params Expression<Func<TFact, bool>>[])
  nameWithType.vb: ILeftHandSideExpression.Match(Of TFact)(Expression(Of Func(Of TFact)), ParamArray Expression(Of Func(Of TFact, Boolean))())
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.Not*
  name: Not
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_Not_
  commentId: Overload:NRules.Fluent.Dsl.ILeftHandSideExpression.Not
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.Not
  nameWithType: ILeftHandSideExpression.Not
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.Not``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])
  name: Not<TFact>(params Expression<Func<TFact, bool>>[])
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_Not__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean_____
  commentId: M:NRules.Fluent.Dsl.ILeftHandSideExpression.Not``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])
  name.vb: Not(Of TFact)(ParamArray Expression(Of Func(Of TFact, Boolean))())
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.Not<TFact>(params System.Linq.Expressions.Expression<System.Func<TFact, bool>>[])
  fullName.vb: NRules.Fluent.Dsl.ILeftHandSideExpression.Not(Of TFact)(ParamArray System.Linq.Expressions.Expression(Of System.Func(Of TFact, Boolean))())
  nameWithType: ILeftHandSideExpression.Not<TFact>(params Expression<Func<TFact, bool>>[])
  nameWithType.vb: ILeftHandSideExpression.Not(Of TFact)(ParamArray Expression(Of Func(Of TFact, Boolean))())
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.Or(System.Action{NRules.Fluent.Dsl.ILeftHandSideExpression})
  name: Or(Action<ILeftHandSideExpression>)
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_Or_System_Action_NRules_Fluent_Dsl_ILeftHandSideExpression__
  commentId: M:NRules.Fluent.Dsl.ILeftHandSideExpression.Or(System.Action{NRules.Fluent.Dsl.ILeftHandSideExpression})
  name.vb: Or(Action(Of ILeftHandSideExpression))
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.Or(System.Action<NRules.Fluent.Dsl.ILeftHandSideExpression>)
  fullName.vb: NRules.Fluent.Dsl.ILeftHandSideExpression.Or(System.Action(Of NRules.Fluent.Dsl.ILeftHandSideExpression))
  nameWithType: ILeftHandSideExpression.Or(Action<ILeftHandSideExpression>)
  nameWithType.vb: ILeftHandSideExpression.Or(Action(Of ILeftHandSideExpression))
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.Or*
  name: Or
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_Or_
  commentId: Overload:NRules.Fluent.Dsl.ILeftHandSideExpression.Or
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.Or
  nameWithType: ILeftHandSideExpression.Or
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.Query*
  name: Query
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_Query_
  commentId: Overload:NRules.Fluent.Dsl.ILeftHandSideExpression.Query
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.Query
  nameWithType: ILeftHandSideExpression.Query
- uid: NRules.Fluent.Dsl.ILeftHandSideExpression.Query``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Func{NRules.Fluent.Dsl.IQuery,NRules.Fluent.Dsl.IQuery{``0}})
  name: Query<TResult>(Expression<Func<TResult>>, Func<IQuery, IQuery<TResult>>)
  href: api/NRules.Fluent.Dsl.ILeftHandSideExpression.html#NRules_Fluent_Dsl_ILeftHandSideExpression_Query__1_System_Linq_Expressions_Expression_System_Func___0___System_Func_NRules_Fluent_Dsl_IQuery_NRules_Fluent_Dsl_IQuery___0___
  commentId: M:NRules.Fluent.Dsl.ILeftHandSideExpression.Query``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Func{NRules.Fluent.Dsl.IQuery,NRules.Fluent.Dsl.IQuery{``0}})
  name.vb: Query(Of TResult)(Expression(Of Func(Of TResult)), Func(Of IQuery, IQuery(Of TResult)))
  fullName: NRules.Fluent.Dsl.ILeftHandSideExpression.Query<TResult>(System.Linq.Expressions.Expression<System.Func<TResult>>, System.Func<NRules.Fluent.Dsl.IQuery, NRules.Fluent.Dsl.IQuery<TResult>>)
  fullName.vb: NRules.Fluent.Dsl.ILeftHandSideExpression.Query(Of TResult)(System.Linq.Expressions.Expression(Of System.Func(Of TResult)), System.Func(Of NRules.Fluent.Dsl.IQuery, NRules.Fluent.Dsl.IQuery(Of TResult)))
  nameWithType: ILeftHandSideExpression.Query<TResult>(Expression<Func<TResult>>, Func<IQuery, IQuery<TResult>>)
  nameWithType.vb: ILeftHandSideExpression.Query(Of TResult)(Expression(Of Func(Of TResult)), Func(Of IQuery, IQuery(Of TResult)))
- uid: NRules.Fluent.Dsl.IOrderedQuery`1
  name: IOrderedQuery<TSource>
  href: api/NRules.Fluent.Dsl.IOrderedQuery-1.html
  commentId: T:NRules.Fluent.Dsl.IOrderedQuery`1
  name.vb: IOrderedQuery(Of TSource)
  fullName: NRules.Fluent.Dsl.IOrderedQuery<TSource>
  fullName.vb: NRules.Fluent.Dsl.IOrderedQuery(Of TSource)
  nameWithType: IOrderedQuery<TSource>
  nameWithType.vb: IOrderedQuery(Of TSource)
- uid: NRules.Fluent.Dsl.IQuery
  name: IQuery
  href: api/NRules.Fluent.Dsl.IQuery.html
  commentId: T:NRules.Fluent.Dsl.IQuery
  fullName: NRules.Fluent.Dsl.IQuery
  nameWithType: IQuery
- uid: NRules.Fluent.Dsl.IQueryBuilder
  name: IQueryBuilder
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html
  commentId: T:NRules.Fluent.Dsl.IQueryBuilder
  fullName: NRules.Fluent.Dsl.IQueryBuilder
  nameWithType: IQueryBuilder
- uid: NRules.Fluent.Dsl.IQueryBuilder.Aggregate*
  name: Aggregate
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_Aggregate_
  commentId: Overload:NRules.Fluent.Dsl.IQueryBuilder.Aggregate
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.IQueryBuilder.Aggregate
  nameWithType: IQueryBuilder.Aggregate
- uid: NRules.Fluent.Dsl.IQueryBuilder.Aggregate``2(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Linq.Expressions.LambdaExpression}})
  name: Aggregate<TSource, TResult>(string, IEnumerable<KeyValuePair<string, LambdaExpression>>)
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_Aggregate__2_System_String_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_Linq_Expressions_LambdaExpression___
  commentId: M:NRules.Fluent.Dsl.IQueryBuilder.Aggregate``2(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Linq.Expressions.LambdaExpression}})
  name.vb: Aggregate(Of TSource, TResult)(String, IEnumerable(Of KeyValuePair(Of String, LambdaExpression)))
  fullName: NRules.Fluent.Dsl.IQueryBuilder.Aggregate<TSource, TResult>(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Linq.Expressions.LambdaExpression>>)
  fullName.vb: NRules.Fluent.Dsl.IQueryBuilder.Aggregate(Of TSource, TResult)(String, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, System.Linq.Expressions.LambdaExpression)))
  nameWithType: IQueryBuilder.Aggregate<TSource, TResult>(string, IEnumerable<KeyValuePair<string, LambdaExpression>>)
  nameWithType.vb: IQueryBuilder.Aggregate(Of TSource, TResult)(String, IEnumerable(Of KeyValuePair(Of String, LambdaExpression)))
- uid: NRules.Fluent.Dsl.IQueryBuilder.Aggregate``2(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Linq.Expressions.LambdaExpression}},System.Type)
  name: Aggregate<TSource, TResult>(string, IEnumerable<KeyValuePair<string, LambdaExpression>>, Type)
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_Aggregate__2_System_String_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_Linq_Expressions_LambdaExpression___System_Type_
  commentId: M:NRules.Fluent.Dsl.IQueryBuilder.Aggregate``2(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Linq.Expressions.LambdaExpression}},System.Type)
  name.vb: Aggregate(Of TSource, TResult)(String, IEnumerable(Of KeyValuePair(Of String, LambdaExpression)), Type)
  fullName: NRules.Fluent.Dsl.IQueryBuilder.Aggregate<TSource, TResult>(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Linq.Expressions.LambdaExpression>>, System.Type)
  fullName.vb: NRules.Fluent.Dsl.IQueryBuilder.Aggregate(Of TSource, TResult)(String, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, System.Linq.Expressions.LambdaExpression)), System.Type)
  nameWithType: IQueryBuilder.Aggregate<TSource, TResult>(string, IEnumerable<KeyValuePair<string, LambdaExpression>>, Type)
  nameWithType.vb: IQueryBuilder.Aggregate(Of TSource, TResult)(String, IEnumerable(Of KeyValuePair(Of String, LambdaExpression)), Type)
- uid: NRules.Fluent.Dsl.IQueryBuilder.Collect*
  name: Collect
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_Collect_
  commentId: Overload:NRules.Fluent.Dsl.IQueryBuilder.Collect
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.IQueryBuilder.Collect
  nameWithType: IQueryBuilder.Collect
- uid: NRules.Fluent.Dsl.IQueryBuilder.Collect``1
  name: Collect<TSource>()
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_Collect__1
  commentId: M:NRules.Fluent.Dsl.IQueryBuilder.Collect``1
  name.vb: Collect(Of TSource)()
  fullName: NRules.Fluent.Dsl.IQueryBuilder.Collect<TSource>()
  fullName.vb: NRules.Fluent.Dsl.IQueryBuilder.Collect(Of TSource)()
  nameWithType: IQueryBuilder.Collect<TSource>()
  nameWithType.vb: IQueryBuilder.Collect(Of TSource)()
- uid: NRules.Fluent.Dsl.IQueryBuilder.FactQuery*
  name: FactQuery
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_FactQuery_
  commentId: Overload:NRules.Fluent.Dsl.IQueryBuilder.FactQuery
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.IQueryBuilder.FactQuery
  nameWithType: IQueryBuilder.FactQuery
- uid: NRules.Fluent.Dsl.IQueryBuilder.FactQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])
  name: FactQuery<TSource>(Expression<Func<TSource, bool>>[])
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_FactQuery__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean_____
  commentId: M:NRules.Fluent.Dsl.IQueryBuilder.FactQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])
  name.vb: FactQuery(Of TSource)(Expression(Of Func(Of TSource, Boolean))())
  fullName: NRules.Fluent.Dsl.IQueryBuilder.FactQuery<TSource>(System.Linq.Expressions.Expression<System.Func<TSource, bool>>[])
  fullName.vb: NRules.Fluent.Dsl.IQueryBuilder.FactQuery(Of TSource)(System.Linq.Expressions.Expression(Of System.Func(Of TSource, Boolean))())
  nameWithType: IQueryBuilder.FactQuery<TSource>(Expression<Func<TSource, bool>>[])
  nameWithType.vb: IQueryBuilder.FactQuery(Of TSource)(Expression(Of Func(Of TSource, Boolean))())
- uid: NRules.Fluent.Dsl.IQueryBuilder.From*
  name: From
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_From_
  commentId: Overload:NRules.Fluent.Dsl.IQueryBuilder.From
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.IQueryBuilder.From
  nameWithType: IQueryBuilder.From
- uid: NRules.Fluent.Dsl.IQueryBuilder.From``1(System.Linq.Expressions.Expression{System.Func{``0}})
  name: From<TSource>(Expression<Func<TSource>>)
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_From__1_System_Linq_Expressions_Expression_System_Func___0___
  commentId: M:NRules.Fluent.Dsl.IQueryBuilder.From``1(System.Linq.Expressions.Expression{System.Func{``0}})
  name.vb: From(Of TSource)(Expression(Of Func(Of TSource)))
  fullName: NRules.Fluent.Dsl.IQueryBuilder.From<TSource>(System.Linq.Expressions.Expression<System.Func<TSource>>)
  fullName.vb: NRules.Fluent.Dsl.IQueryBuilder.From(Of TSource)(System.Linq.Expressions.Expression(Of System.Func(Of TSource)))
  nameWithType: IQueryBuilder.From<TSource>(Expression<Func<TSource>>)
  nameWithType.vb: IQueryBuilder.From(Of TSource)(Expression(Of Func(Of TSource)))
- uid: NRules.Fluent.Dsl.IQueryBuilder.GroupBy*
  name: GroupBy
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_GroupBy_
  commentId: Overload:NRules.Fluent.Dsl.IQueryBuilder.GroupBy
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.IQueryBuilder.GroupBy
  nameWithType: IQueryBuilder.GroupBy
- uid: NRules.Fluent.Dsl.IQueryBuilder.GroupBy``3(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})
  name: GroupBy<TSource, TKey, TElement>(Expression<Func<TSource, TKey>>, Expression<Func<TSource, TElement>>)
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_GroupBy__3_System_Linq_Expressions_Expression_System_Func___0___1___System_Linq_Expressions_Expression_System_Func___0___2___
  commentId: M:NRules.Fluent.Dsl.IQueryBuilder.GroupBy``3(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})
  name.vb: GroupBy(Of TSource, TKey, TElement)(Expression(Of Func(Of TSource, TKey)), Expression(Of Func(Of TSource, TElement)))
  fullName: NRules.Fluent.Dsl.IQueryBuilder.GroupBy<TSource, TKey, TElement>(System.Linq.Expressions.Expression<System.Func<TSource, TKey>>, System.Linq.Expressions.Expression<System.Func<TSource, TElement>>)
  fullName.vb: NRules.Fluent.Dsl.IQueryBuilder.GroupBy(Of TSource, TKey, TElement)(System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TElement)))
  nameWithType: IQueryBuilder.GroupBy<TSource, TKey, TElement>(Expression<Func<TSource, TKey>>, Expression<Func<TSource, TElement>>)
  nameWithType.vb: IQueryBuilder.GroupBy(Of TSource, TKey, TElement)(Expression(Of Func(Of TSource, TKey)), Expression(Of Func(Of TSource, TElement)))
- uid: NRules.Fluent.Dsl.IQueryBuilder.OrderBy*
  name: OrderBy
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_OrderBy_
  commentId: Overload:NRules.Fluent.Dsl.IQueryBuilder.OrderBy
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.IQueryBuilder.OrderBy
  nameWithType: IQueryBuilder.OrderBy
- uid: NRules.Fluent.Dsl.IQueryBuilder.OrderBy``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},NRules.RuleModel.SortDirection)
  name: OrderBy<TSource, TKey>(Expression<Func<TSource, TKey>>, SortDirection)
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_OrderBy__2_System_Linq_Expressions_Expression_System_Func___0___1___NRules_RuleModel_SortDirection_
  commentId: M:NRules.Fluent.Dsl.IQueryBuilder.OrderBy``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},NRules.RuleModel.SortDirection)
  name.vb: OrderBy(Of TSource, TKey)(Expression(Of Func(Of TSource, TKey)), SortDirection)
  fullName: NRules.Fluent.Dsl.IQueryBuilder.OrderBy<TSource, TKey>(System.Linq.Expressions.Expression<System.Func<TSource, TKey>>, NRules.RuleModel.SortDirection)
  fullName.vb: NRules.Fluent.Dsl.IQueryBuilder.OrderBy(Of TSource, TKey)(System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)), NRules.RuleModel.SortDirection)
  nameWithType: IQueryBuilder.OrderBy<TSource, TKey>(Expression<Func<TSource, TKey>>, SortDirection)
  nameWithType.vb: IQueryBuilder.OrderBy(Of TSource, TKey)(Expression(Of Func(Of TSource, TKey)), SortDirection)
- uid: NRules.Fluent.Dsl.IQueryBuilder.Select*
  name: Select
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_Select_
  commentId: Overload:NRules.Fluent.Dsl.IQueryBuilder.Select
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.IQueryBuilder.Select
  nameWithType: IQueryBuilder.Select
- uid: NRules.Fluent.Dsl.IQueryBuilder.SelectMany*
  name: SelectMany
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_SelectMany_
  commentId: Overload:NRules.Fluent.Dsl.IQueryBuilder.SelectMany
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.IQueryBuilder.SelectMany
  nameWithType: IQueryBuilder.SelectMany
- uid: NRules.Fluent.Dsl.IQueryBuilder.SelectMany``2(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})
  name: SelectMany<TSource, TResult>(Expression<Func<TSource, IEnumerable<TResult>>>)
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_SelectMany__2_System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_IEnumerable___1____
  commentId: M:NRules.Fluent.Dsl.IQueryBuilder.SelectMany``2(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})
  name.vb: SelectMany(Of TSource, TResult)(Expression(Of Func(Of TSource, IEnumerable(Of TResult))))
  fullName: NRules.Fluent.Dsl.IQueryBuilder.SelectMany<TSource, TResult>(System.Linq.Expressions.Expression<System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>>)
  fullName.vb: NRules.Fluent.Dsl.IQueryBuilder.SelectMany(Of TSource, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult))))
  nameWithType: IQueryBuilder.SelectMany<TSource, TResult>(Expression<Func<TSource, IEnumerable<TResult>>>)
  nameWithType.vb: IQueryBuilder.SelectMany(Of TSource, TResult)(Expression(Of Func(Of TSource, IEnumerable(Of TResult))))
- uid: NRules.Fluent.Dsl.IQueryBuilder.Select``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: Select<TSource, TResult>(Expression<Func<TSource, TResult>>)
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_Select__2_System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NRules.Fluent.Dsl.IQueryBuilder.Select``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: Select(Of TSource, TResult)(Expression(Of Func(Of TSource, TResult)))
  fullName: NRules.Fluent.Dsl.IQueryBuilder.Select<TSource, TResult>(System.Linq.Expressions.Expression<System.Func<TSource, TResult>>)
  fullName.vb: NRules.Fluent.Dsl.IQueryBuilder.Select(Of TSource, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)))
  nameWithType: IQueryBuilder.Select<TSource, TResult>(Expression<Func<TSource, TResult>>)
  nameWithType.vb: IQueryBuilder.Select(Of TSource, TResult)(Expression(Of Func(Of TSource, TResult)))
- uid: NRules.Fluent.Dsl.IQueryBuilder.ToLookup*
  name: ToLookup
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_ToLookup_
  commentId: Overload:NRules.Fluent.Dsl.IQueryBuilder.ToLookup
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.IQueryBuilder.ToLookup
  nameWithType: IQueryBuilder.ToLookup
- uid: NRules.Fluent.Dsl.IQueryBuilder.ToLookup``3(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})
  name: ToLookup<TSource, TKey, TElement>(Expression<Func<TSource, TKey>>, Expression<Func<TSource, TElement>>)
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_ToLookup__3_System_Linq_Expressions_Expression_System_Func___0___1___System_Linq_Expressions_Expression_System_Func___0___2___
  commentId: M:NRules.Fluent.Dsl.IQueryBuilder.ToLookup``3(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})
  name.vb: ToLookup(Of TSource, TKey, TElement)(Expression(Of Func(Of TSource, TKey)), Expression(Of Func(Of TSource, TElement)))
  fullName: NRules.Fluent.Dsl.IQueryBuilder.ToLookup<TSource, TKey, TElement>(System.Linq.Expressions.Expression<System.Func<TSource, TKey>>, System.Linq.Expressions.Expression<System.Func<TSource, TElement>>)
  fullName.vb: NRules.Fluent.Dsl.IQueryBuilder.ToLookup(Of TSource, TKey, TElement)(System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TElement)))
  nameWithType: IQueryBuilder.ToLookup<TSource, TKey, TElement>(Expression<Func<TSource, TKey>>, Expression<Func<TSource, TElement>>)
  nameWithType.vb: IQueryBuilder.ToLookup(Of TSource, TKey, TElement)(Expression(Of Func(Of TSource, TKey)), Expression(Of Func(Of TSource, TElement)))
- uid: NRules.Fluent.Dsl.IQueryBuilder.Where*
  name: Where
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_Where_
  commentId: Overload:NRules.Fluent.Dsl.IQueryBuilder.Where
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.IQueryBuilder.Where
  nameWithType: IQueryBuilder.Where
- uid: NRules.Fluent.Dsl.IQueryBuilder.Where``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])
  name: Where<TSource>(Expression<Func<TSource, bool>>[])
  href: api/NRules.Fluent.Dsl.IQueryBuilder.html#NRules_Fluent_Dsl_IQueryBuilder_Where__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean_____
  commentId: M:NRules.Fluent.Dsl.IQueryBuilder.Where``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])
  name.vb: Where(Of TSource)(Expression(Of Func(Of TSource, Boolean))())
  fullName: NRules.Fluent.Dsl.IQueryBuilder.Where<TSource>(System.Linq.Expressions.Expression<System.Func<TSource, bool>>[])
  fullName.vb: NRules.Fluent.Dsl.IQueryBuilder.Where(Of TSource)(System.Linq.Expressions.Expression(Of System.Func(Of TSource, Boolean))())
  nameWithType: IQueryBuilder.Where<TSource>(Expression<Func<TSource, bool>>[])
  nameWithType.vb: IQueryBuilder.Where(Of TSource)(Expression(Of Func(Of TSource, Boolean))())
- uid: NRules.Fluent.Dsl.IQuery`1
  name: IQuery<TSource>
  href: api/NRules.Fluent.Dsl.IQuery-1.html
  commentId: T:NRules.Fluent.Dsl.IQuery`1
  name.vb: IQuery(Of TSource)
  fullName: NRules.Fluent.Dsl.IQuery<TSource>
  fullName.vb: NRules.Fluent.Dsl.IQuery(Of TSource)
  nameWithType: IQuery<TSource>
  nameWithType.vb: IQuery(Of TSource)
- uid: NRules.Fluent.Dsl.IRightHandSideExpression
  name: IRightHandSideExpression
  href: api/NRules.Fluent.Dsl.IRightHandSideExpression.html
  commentId: T:NRules.Fluent.Dsl.IRightHandSideExpression
  fullName: NRules.Fluent.Dsl.IRightHandSideExpression
  nameWithType: IRightHandSideExpression
- uid: NRules.Fluent.Dsl.IRightHandSideExpression.Action(System.Linq.Expressions.Expression{System.Action{NRules.RuleModel.IContext}},NRules.RuleModel.ActionTrigger)
  name: Action(Expression<Action<IContext>>, ActionTrigger)
  href: api/NRules.Fluent.Dsl.IRightHandSideExpression.html#NRules_Fluent_Dsl_IRightHandSideExpression_Action_System_Linq_Expressions_Expression_System_Action_NRules_RuleModel_IContext___NRules_RuleModel_ActionTrigger_
  commentId: M:NRules.Fluent.Dsl.IRightHandSideExpression.Action(System.Linq.Expressions.Expression{System.Action{NRules.RuleModel.IContext}},NRules.RuleModel.ActionTrigger)
  name.vb: Action(Expression(Of Action(Of IContext)), ActionTrigger)
  fullName: NRules.Fluent.Dsl.IRightHandSideExpression.Action(System.Linq.Expressions.Expression<System.Action<NRules.RuleModel.IContext>>, NRules.RuleModel.ActionTrigger)
  fullName.vb: NRules.Fluent.Dsl.IRightHandSideExpression.Action(System.Linq.Expressions.Expression(Of System.Action(Of NRules.RuleModel.IContext)), NRules.RuleModel.ActionTrigger)
  nameWithType: IRightHandSideExpression.Action(Expression<Action<IContext>>, ActionTrigger)
  nameWithType.vb: IRightHandSideExpression.Action(Expression(Of Action(Of IContext)), ActionTrigger)
- uid: NRules.Fluent.Dsl.IRightHandSideExpression.Action*
  name: Action
  href: api/NRules.Fluent.Dsl.IRightHandSideExpression.html#NRules_Fluent_Dsl_IRightHandSideExpression_Action_
  commentId: Overload:NRules.Fluent.Dsl.IRightHandSideExpression.Action
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.IRightHandSideExpression.Action
  nameWithType: IRightHandSideExpression.Action
- uid: NRules.Fluent.Dsl.IRightHandSideExpression.Do(System.Linq.Expressions.Expression{System.Action{NRules.RuleModel.IContext}})
  name: Do(Expression<Action<IContext>>)
  href: api/NRules.Fluent.Dsl.IRightHandSideExpression.html#NRules_Fluent_Dsl_IRightHandSideExpression_Do_System_Linq_Expressions_Expression_System_Action_NRules_RuleModel_IContext___
  commentId: M:NRules.Fluent.Dsl.IRightHandSideExpression.Do(System.Linq.Expressions.Expression{System.Action{NRules.RuleModel.IContext}})
  name.vb: Do(Expression(Of Action(Of IContext)))
  fullName: NRules.Fluent.Dsl.IRightHandSideExpression.Do(System.Linq.Expressions.Expression<System.Action<NRules.RuleModel.IContext>>)
  fullName.vb: NRules.Fluent.Dsl.IRightHandSideExpression.Do(System.Linq.Expressions.Expression(Of System.Action(Of NRules.RuleModel.IContext)))
  nameWithType: IRightHandSideExpression.Do(Expression<Action<IContext>>)
  nameWithType.vb: IRightHandSideExpression.Do(Expression(Of Action(Of IContext)))
- uid: NRules.Fluent.Dsl.IRightHandSideExpression.Do*
  name: Do
  href: api/NRules.Fluent.Dsl.IRightHandSideExpression.html#NRules_Fluent_Dsl_IRightHandSideExpression_Do_
  commentId: Overload:NRules.Fluent.Dsl.IRightHandSideExpression.Do
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.IRightHandSideExpression.Do
  nameWithType: IRightHandSideExpression.Do
- uid: NRules.Fluent.Dsl.IRightHandSideExpression.Undo(System.Linq.Expressions.Expression{System.Action{NRules.RuleModel.IContext}})
  name: Undo(Expression<Action<IContext>>)
  href: api/NRules.Fluent.Dsl.IRightHandSideExpression.html#NRules_Fluent_Dsl_IRightHandSideExpression_Undo_System_Linq_Expressions_Expression_System_Action_NRules_RuleModel_IContext___
  commentId: M:NRules.Fluent.Dsl.IRightHandSideExpression.Undo(System.Linq.Expressions.Expression{System.Action{NRules.RuleModel.IContext}})
  name.vb: Undo(Expression(Of Action(Of IContext)))
  fullName: NRules.Fluent.Dsl.IRightHandSideExpression.Undo(System.Linq.Expressions.Expression<System.Action<NRules.RuleModel.IContext>>)
  fullName.vb: NRules.Fluent.Dsl.IRightHandSideExpression.Undo(System.Linq.Expressions.Expression(Of System.Action(Of NRules.RuleModel.IContext)))
  nameWithType: IRightHandSideExpression.Undo(Expression<Action<IContext>>)
  nameWithType.vb: IRightHandSideExpression.Undo(Expression(Of Action(Of IContext)))
- uid: NRules.Fluent.Dsl.IRightHandSideExpression.Undo*
  name: Undo
  href: api/NRules.Fluent.Dsl.IRightHandSideExpression.html#NRules_Fluent_Dsl_IRightHandSideExpression_Undo_
  commentId: Overload:NRules.Fluent.Dsl.IRightHandSideExpression.Undo
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.IRightHandSideExpression.Undo
  nameWithType: IRightHandSideExpression.Undo
- uid: NRules.Fluent.Dsl.IRightHandSideExpression.Yield*
  name: Yield
  href: api/NRules.Fluent.Dsl.IRightHandSideExpression.html#NRules_Fluent_Dsl_IRightHandSideExpression_Yield_
  commentId: Overload:NRules.Fluent.Dsl.IRightHandSideExpression.Yield
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.IRightHandSideExpression.Yield
  nameWithType: IRightHandSideExpression.Yield
- uid: NRules.Fluent.Dsl.IRightHandSideExpression.Yield``1(System.Linq.Expressions.Expression{System.Func{NRules.RuleModel.IContext,``0}})
  name: Yield<TFact>(Expression<Func<IContext, TFact>>)
  href: api/NRules.Fluent.Dsl.IRightHandSideExpression.html#NRules_Fluent_Dsl_IRightHandSideExpression_Yield__1_System_Linq_Expressions_Expression_System_Func_NRules_RuleModel_IContext___0___
  commentId: M:NRules.Fluent.Dsl.IRightHandSideExpression.Yield``1(System.Linq.Expressions.Expression{System.Func{NRules.RuleModel.IContext,``0}})
  name.vb: Yield(Of TFact)(Expression(Of Func(Of IContext, TFact)))
  fullName: NRules.Fluent.Dsl.IRightHandSideExpression.Yield<TFact>(System.Linq.Expressions.Expression<System.Func<NRules.RuleModel.IContext, TFact>>)
  fullName.vb: NRules.Fluent.Dsl.IRightHandSideExpression.Yield(Of TFact)(System.Linq.Expressions.Expression(Of System.Func(Of NRules.RuleModel.IContext, TFact)))
  nameWithType: IRightHandSideExpression.Yield<TFact>(Expression<Func<IContext, TFact>>)
  nameWithType.vb: IRightHandSideExpression.Yield(Of TFact)(Expression(Of Func(Of IContext, TFact)))
- uid: NRules.Fluent.Dsl.IRightHandSideExpression.Yield``1(System.Linq.Expressions.Expression{System.Func{NRules.RuleModel.IContext,``0}},System.Linq.Expressions.Expression{System.Func{NRules.RuleModel.IContext,``0,``0}})
  name: Yield<TFact>(Expression<Func<IContext, TFact>>, Expression<Func<IContext, TFact, TFact>>)
  href: api/NRules.Fluent.Dsl.IRightHandSideExpression.html#NRules_Fluent_Dsl_IRightHandSideExpression_Yield__1_System_Linq_Expressions_Expression_System_Func_NRules_RuleModel_IContext___0___System_Linq_Expressions_Expression_System_Func_NRules_RuleModel_IContext___0___0___
  commentId: M:NRules.Fluent.Dsl.IRightHandSideExpression.Yield``1(System.Linq.Expressions.Expression{System.Func{NRules.RuleModel.IContext,``0}},System.Linq.Expressions.Expression{System.Func{NRules.RuleModel.IContext,``0,``0}})
  name.vb: Yield(Of TFact)(Expression(Of Func(Of IContext, TFact)), Expression(Of Func(Of IContext, TFact, TFact)))
  fullName: NRules.Fluent.Dsl.IRightHandSideExpression.Yield<TFact>(System.Linq.Expressions.Expression<System.Func<NRules.RuleModel.IContext, TFact>>, System.Linq.Expressions.Expression<System.Func<NRules.RuleModel.IContext, TFact, TFact>>)
  fullName.vb: NRules.Fluent.Dsl.IRightHandSideExpression.Yield(Of TFact)(System.Linq.Expressions.Expression(Of System.Func(Of NRules.RuleModel.IContext, TFact)), System.Linq.Expressions.Expression(Of System.Func(Of NRules.RuleModel.IContext, TFact, TFact)))
  nameWithType: IRightHandSideExpression.Yield<TFact>(Expression<Func<IContext, TFact>>, Expression<Func<IContext, TFact, TFact>>)
  nameWithType.vb: IRightHandSideExpression.Yield(Of TFact)(Expression(Of Func(Of IContext, TFact)), Expression(Of Func(Of IContext, TFact, TFact)))
- uid: NRules.Fluent.Dsl.NameAttribute
  name: NameAttribute
  href: api/NRules.Fluent.Dsl.NameAttribute.html
  commentId: T:NRules.Fluent.Dsl.NameAttribute
  fullName: NRules.Fluent.Dsl.NameAttribute
  nameWithType: NameAttribute
- uid: NRules.Fluent.Dsl.NameAttribute.#ctor(System.String)
  name: NameAttribute(string)
  href: api/NRules.Fluent.Dsl.NameAttribute.html#NRules_Fluent_Dsl_NameAttribute__ctor_System_String_
  commentId: M:NRules.Fluent.Dsl.NameAttribute.#ctor(System.String)
  name.vb: New(String)
  fullName: NRules.Fluent.Dsl.NameAttribute.NameAttribute(string)
  fullName.vb: NRules.Fluent.Dsl.NameAttribute.New(String)
  nameWithType: NameAttribute.NameAttribute(string)
  nameWithType.vb: NameAttribute.New(String)
- uid: NRules.Fluent.Dsl.NameAttribute.#ctor*
  name: NameAttribute
  href: api/NRules.Fluent.Dsl.NameAttribute.html#NRules_Fluent_Dsl_NameAttribute__ctor_
  commentId: Overload:NRules.Fluent.Dsl.NameAttribute.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Fluent.Dsl.NameAttribute.NameAttribute
  fullName.vb: NRules.Fluent.Dsl.NameAttribute.New
  nameWithType: NameAttribute.NameAttribute
  nameWithType.vb: NameAttribute.New
- uid: NRules.Fluent.Dsl.PriorityAttribute
  name: PriorityAttribute
  href: api/NRules.Fluent.Dsl.PriorityAttribute.html
  commentId: T:NRules.Fluent.Dsl.PriorityAttribute
  fullName: NRules.Fluent.Dsl.PriorityAttribute
  nameWithType: PriorityAttribute
- uid: NRules.Fluent.Dsl.PriorityAttribute.#ctor(System.Int32)
  name: PriorityAttribute(int)
  href: api/NRules.Fluent.Dsl.PriorityAttribute.html#NRules_Fluent_Dsl_PriorityAttribute__ctor_System_Int32_
  commentId: M:NRules.Fluent.Dsl.PriorityAttribute.#ctor(System.Int32)
  name.vb: New(Integer)
  fullName: NRules.Fluent.Dsl.PriorityAttribute.PriorityAttribute(int)
  fullName.vb: NRules.Fluent.Dsl.PriorityAttribute.New(Integer)
  nameWithType: PriorityAttribute.PriorityAttribute(int)
  nameWithType.vb: PriorityAttribute.New(Integer)
- uid: NRules.Fluent.Dsl.PriorityAttribute.#ctor*
  name: PriorityAttribute
  href: api/NRules.Fluent.Dsl.PriorityAttribute.html#NRules_Fluent_Dsl_PriorityAttribute__ctor_
  commentId: Overload:NRules.Fluent.Dsl.PriorityAttribute.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Fluent.Dsl.PriorityAttribute.PriorityAttribute
  fullName.vb: NRules.Fluent.Dsl.PriorityAttribute.New
  nameWithType: PriorityAttribute.PriorityAttribute
  nameWithType.vb: PriorityAttribute.New
- uid: NRules.Fluent.Dsl.QueryExpression`1
  name: QueryExpression<TSource>
  href: api/NRules.Fluent.Dsl.QueryExpression-1.html
  commentId: T:NRules.Fluent.Dsl.QueryExpression`1
  name.vb: QueryExpression(Of TSource)
  fullName: NRules.Fluent.Dsl.QueryExpression<TSource>
  fullName.vb: NRules.Fluent.Dsl.QueryExpression(Of TSource)
  nameWithType: QueryExpression<TSource>
  nameWithType.vb: QueryExpression(Of TSource)
- uid: NRules.Fluent.Dsl.QueryExpression`1.#ctor(NRules.Fluent.Dsl.IQueryBuilder)
  name: QueryExpression(IQueryBuilder)
  href: api/NRules.Fluent.Dsl.QueryExpression-1.html#NRules_Fluent_Dsl_QueryExpression_1__ctor_NRules_Fluent_Dsl_IQueryBuilder_
  commentId: M:NRules.Fluent.Dsl.QueryExpression`1.#ctor(NRules.Fluent.Dsl.IQueryBuilder)
  name.vb: New(IQueryBuilder)
  fullName: NRules.Fluent.Dsl.QueryExpression<TSource>.QueryExpression(NRules.Fluent.Dsl.IQueryBuilder)
  fullName.vb: NRules.Fluent.Dsl.QueryExpression(Of TSource).New(NRules.Fluent.Dsl.IQueryBuilder)
  nameWithType: QueryExpression<TSource>.QueryExpression(IQueryBuilder)
  nameWithType.vb: QueryExpression(Of TSource).New(IQueryBuilder)
- uid: NRules.Fluent.Dsl.QueryExpression`1.#ctor*
  name: QueryExpression
  href: api/NRules.Fluent.Dsl.QueryExpression-1.html#NRules_Fluent_Dsl_QueryExpression_1__ctor_
  commentId: Overload:NRules.Fluent.Dsl.QueryExpression`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Fluent.Dsl.QueryExpression<TSource>.QueryExpression
  fullName.vb: NRules.Fluent.Dsl.QueryExpression(Of TSource).New
  nameWithType: QueryExpression<TSource>.QueryExpression
  nameWithType.vb: QueryExpression(Of TSource).New
- uid: NRules.Fluent.Dsl.QueryExpression`1.Builder
  name: Builder
  href: api/NRules.Fluent.Dsl.QueryExpression-1.html#NRules_Fluent_Dsl_QueryExpression_1_Builder
  commentId: P:NRules.Fluent.Dsl.QueryExpression`1.Builder
  fullName: NRules.Fluent.Dsl.QueryExpression<TSource>.Builder
  fullName.vb: NRules.Fluent.Dsl.QueryExpression(Of TSource).Builder
  nameWithType: QueryExpression<TSource>.Builder
  nameWithType.vb: QueryExpression(Of TSource).Builder
- uid: NRules.Fluent.Dsl.QueryExpression`1.Builder*
  name: Builder
  href: api/NRules.Fluent.Dsl.QueryExpression-1.html#NRules_Fluent_Dsl_QueryExpression_1_Builder_
  commentId: Overload:NRules.Fluent.Dsl.QueryExpression`1.Builder
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.QueryExpression<TSource>.Builder
  fullName.vb: NRules.Fluent.Dsl.QueryExpression(Of TSource).Builder
  nameWithType: QueryExpression<TSource>.Builder
  nameWithType.vb: QueryExpression(Of TSource).Builder
- uid: NRules.Fluent.Dsl.QueryExtensions
  name: QueryExtensions
  href: api/NRules.Fluent.Dsl.QueryExtensions.html
  commentId: T:NRules.Fluent.Dsl.QueryExtensions
  fullName: NRules.Fluent.Dsl.QueryExtensions
  nameWithType: QueryExtensions
- uid: NRules.Fluent.Dsl.QueryExtensions.Collect*
  name: Collect
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_Collect_
  commentId: Overload:NRules.Fluent.Dsl.QueryExtensions.Collect
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.QueryExtensions.Collect
  nameWithType: QueryExtensions.Collect
- uid: NRules.Fluent.Dsl.QueryExtensions.Collect``1(NRules.Fluent.Dsl.IQuery{``0})
  name: Collect<TSource>(IQuery<TSource>)
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_Collect__1_NRules_Fluent_Dsl_IQuery___0__
  commentId: M:NRules.Fluent.Dsl.QueryExtensions.Collect``1(NRules.Fluent.Dsl.IQuery{``0})
  name.vb: Collect(Of TSource)(IQuery(Of TSource))
  fullName: NRules.Fluent.Dsl.QueryExtensions.Collect<TSource>(NRules.Fluent.Dsl.IQuery<TSource>)
  fullName.vb: NRules.Fluent.Dsl.QueryExtensions.Collect(Of TSource)(NRules.Fluent.Dsl.IQuery(Of TSource))
  nameWithType: QueryExtensions.Collect<TSource>(IQuery<TSource>)
  nameWithType.vb: QueryExtensions.Collect(Of TSource)(IQuery(Of TSource))
- uid: NRules.Fluent.Dsl.QueryExtensions.From*
  name: From
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_From_
  commentId: Overload:NRules.Fluent.Dsl.QueryExtensions.From
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.QueryExtensions.From
  nameWithType: QueryExtensions.From
- uid: NRules.Fluent.Dsl.QueryExtensions.From``1(NRules.Fluent.Dsl.IQuery,System.Linq.Expressions.Expression{System.Func{``0}})
  name: From<TFact>(IQuery, Expression<Func<TFact>>)
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_From__1_NRules_Fluent_Dsl_IQuery_System_Linq_Expressions_Expression_System_Func___0___
  commentId: M:NRules.Fluent.Dsl.QueryExtensions.From``1(NRules.Fluent.Dsl.IQuery,System.Linq.Expressions.Expression{System.Func{``0}})
  name.vb: From(Of TFact)(IQuery, Expression(Of Func(Of TFact)))
  fullName: NRules.Fluent.Dsl.QueryExtensions.From<TFact>(NRules.Fluent.Dsl.IQuery, System.Linq.Expressions.Expression<System.Func<TFact>>)
  fullName.vb: NRules.Fluent.Dsl.QueryExtensions.From(Of TFact)(NRules.Fluent.Dsl.IQuery, System.Linq.Expressions.Expression(Of System.Func(Of TFact)))
  nameWithType: QueryExtensions.From<TFact>(IQuery, Expression<Func<TFact>>)
  nameWithType.vb: QueryExtensions.From(Of TFact)(IQuery, Expression(Of Func(Of TFact)))
- uid: NRules.Fluent.Dsl.QueryExtensions.GroupBy*
  name: GroupBy
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_GroupBy_
  commentId: Overload:NRules.Fluent.Dsl.QueryExtensions.GroupBy
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.QueryExtensions.GroupBy
  nameWithType: QueryExtensions.GroupBy
- uid: NRules.Fluent.Dsl.QueryExtensions.GroupBy``2(NRules.Fluent.Dsl.IQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: GroupBy<TSource, TKey>(IQuery<TSource>, Expression<Func<TSource, TKey>>)
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_GroupBy__2_NRules_Fluent_Dsl_IQuery___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NRules.Fluent.Dsl.QueryExtensions.GroupBy``2(NRules.Fluent.Dsl.IQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: GroupBy(Of TSource, TKey)(IQuery(Of TSource), Expression(Of Func(Of TSource, TKey)))
  fullName: NRules.Fluent.Dsl.QueryExtensions.GroupBy<TSource, TKey>(NRules.Fluent.Dsl.IQuery<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TKey>>)
  fullName.vb: NRules.Fluent.Dsl.QueryExtensions.GroupBy(Of TSource, TKey)(NRules.Fluent.Dsl.IQuery(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)))
  nameWithType: QueryExtensions.GroupBy<TSource, TKey>(IQuery<TSource>, Expression<Func<TSource, TKey>>)
  nameWithType.vb: QueryExtensions.GroupBy(Of TSource, TKey)(IQuery(Of TSource), Expression(Of Func(Of TSource, TKey)))
- uid: NRules.Fluent.Dsl.QueryExtensions.GroupBy``3(NRules.Fluent.Dsl.IQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})
  name: GroupBy<TSource, TKey, TElement>(IQuery<TSource>, Expression<Func<TSource, TKey>>, Expression<Func<TSource, TElement>>)
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_GroupBy__3_NRules_Fluent_Dsl_IQuery___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Linq_Expressions_Expression_System_Func___0___2___
  commentId: M:NRules.Fluent.Dsl.QueryExtensions.GroupBy``3(NRules.Fluent.Dsl.IQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})
  name.vb: GroupBy(Of TSource, TKey, TElement)(IQuery(Of TSource), Expression(Of Func(Of TSource, TKey)), Expression(Of Func(Of TSource, TElement)))
  fullName: NRules.Fluent.Dsl.QueryExtensions.GroupBy<TSource, TKey, TElement>(NRules.Fluent.Dsl.IQuery<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TKey>>, System.Linq.Expressions.Expression<System.Func<TSource, TElement>>)
  fullName.vb: NRules.Fluent.Dsl.QueryExtensions.GroupBy(Of TSource, TKey, TElement)(NRules.Fluent.Dsl.IQuery(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TElement)))
  nameWithType: QueryExtensions.GroupBy<TSource, TKey, TElement>(IQuery<TSource>, Expression<Func<TSource, TKey>>, Expression<Func<TSource, TElement>>)
  nameWithType.vb: QueryExtensions.GroupBy(Of TSource, TKey, TElement)(IQuery(Of TSource), Expression(Of Func(Of TSource, TKey)), Expression(Of Func(Of TSource, TElement)))
- uid: NRules.Fluent.Dsl.QueryExtensions.Match*
  name: Match
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_Match_
  commentId: Overload:NRules.Fluent.Dsl.QueryExtensions.Match
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.QueryExtensions.Match
  nameWithType: QueryExtensions.Match
- uid: NRules.Fluent.Dsl.QueryExtensions.Match``1(NRules.Fluent.Dsl.IQuery,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])
  name: Match<TFact>(IQuery, params Expression<Func<TFact, bool>>[])
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_Match__1_NRules_Fluent_Dsl_IQuery_System_Linq_Expressions_Expression_System_Func___0_System_Boolean_____
  commentId: M:NRules.Fluent.Dsl.QueryExtensions.Match``1(NRules.Fluent.Dsl.IQuery,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])
  name.vb: Match(Of TFact)(IQuery, ParamArray Expression(Of Func(Of TFact, Boolean))())
  fullName: NRules.Fluent.Dsl.QueryExtensions.Match<TFact>(NRules.Fluent.Dsl.IQuery, params System.Linq.Expressions.Expression<System.Func<TFact, bool>>[])
  fullName.vb: NRules.Fluent.Dsl.QueryExtensions.Match(Of TFact)(NRules.Fluent.Dsl.IQuery, ParamArray System.Linq.Expressions.Expression(Of System.Func(Of TFact, Boolean))())
  nameWithType: QueryExtensions.Match<TFact>(IQuery, params Expression<Func<TFact, bool>>[])
  nameWithType.vb: QueryExtensions.Match(Of TFact)(IQuery, ParamArray Expression(Of Func(Of TFact, Boolean))())
- uid: NRules.Fluent.Dsl.QueryExtensions.OrderBy*
  name: OrderBy
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_OrderBy_
  commentId: Overload:NRules.Fluent.Dsl.QueryExtensions.OrderBy
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.QueryExtensions.OrderBy
  nameWithType: QueryExtensions.OrderBy
- uid: NRules.Fluent.Dsl.QueryExtensions.OrderByDescending*
  name: OrderByDescending
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_OrderByDescending_
  commentId: Overload:NRules.Fluent.Dsl.QueryExtensions.OrderByDescending
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.QueryExtensions.OrderByDescending
  nameWithType: QueryExtensions.OrderByDescending
- uid: NRules.Fluent.Dsl.QueryExtensions.OrderByDescending``2(NRules.Fluent.Dsl.ICollectQuery{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: OrderByDescending<TSource, TKey>(ICollectQuery<IEnumerable<TSource>>, Expression<Func<TSource, TKey>>)
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_OrderByDescending__2_NRules_Fluent_Dsl_ICollectQuery_System_Collections_Generic_IEnumerable___0___System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NRules.Fluent.Dsl.QueryExtensions.OrderByDescending``2(NRules.Fluent.Dsl.ICollectQuery{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: OrderByDescending(Of TSource, TKey)(ICollectQuery(Of IEnumerable(Of TSource)), Expression(Of Func(Of TSource, TKey)))
  fullName: NRules.Fluent.Dsl.QueryExtensions.OrderByDescending<TSource, TKey>(NRules.Fluent.Dsl.ICollectQuery<System.Collections.Generic.IEnumerable<TSource>>, System.Linq.Expressions.Expression<System.Func<TSource, TKey>>)
  fullName.vb: NRules.Fluent.Dsl.QueryExtensions.OrderByDescending(Of TSource, TKey)(NRules.Fluent.Dsl.ICollectQuery(Of System.Collections.Generic.IEnumerable(Of TSource)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)))
  nameWithType: QueryExtensions.OrderByDescending<TSource, TKey>(ICollectQuery<IEnumerable<TSource>>, Expression<Func<TSource, TKey>>)
  nameWithType.vb: QueryExtensions.OrderByDescending(Of TSource, TKey)(ICollectQuery(Of IEnumerable(Of TSource)), Expression(Of Func(Of TSource, TKey)))
- uid: NRules.Fluent.Dsl.QueryExtensions.OrderBy``2(NRules.Fluent.Dsl.ICollectQuery{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: OrderBy<TSource, TKey>(ICollectQuery<IEnumerable<TSource>>, Expression<Func<TSource, TKey>>)
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_OrderBy__2_NRules_Fluent_Dsl_ICollectQuery_System_Collections_Generic_IEnumerable___0___System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NRules.Fluent.Dsl.QueryExtensions.OrderBy``2(NRules.Fluent.Dsl.ICollectQuery{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: OrderBy(Of TSource, TKey)(ICollectQuery(Of IEnumerable(Of TSource)), Expression(Of Func(Of TSource, TKey)))
  fullName: NRules.Fluent.Dsl.QueryExtensions.OrderBy<TSource, TKey>(NRules.Fluent.Dsl.ICollectQuery<System.Collections.Generic.IEnumerable<TSource>>, System.Linq.Expressions.Expression<System.Func<TSource, TKey>>)
  fullName.vb: NRules.Fluent.Dsl.QueryExtensions.OrderBy(Of TSource, TKey)(NRules.Fluent.Dsl.ICollectQuery(Of System.Collections.Generic.IEnumerable(Of TSource)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)))
  nameWithType: QueryExtensions.OrderBy<TSource, TKey>(ICollectQuery<IEnumerable<TSource>>, Expression<Func<TSource, TKey>>)
  nameWithType.vb: QueryExtensions.OrderBy(Of TSource, TKey)(ICollectQuery(Of IEnumerable(Of TSource)), Expression(Of Func(Of TSource, TKey)))
- uid: NRules.Fluent.Dsl.QueryExtensions.Select*
  name: Select
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_Select_
  commentId: Overload:NRules.Fluent.Dsl.QueryExtensions.Select
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.QueryExtensions.Select
  nameWithType: QueryExtensions.Select
- uid: NRules.Fluent.Dsl.QueryExtensions.SelectMany*
  name: SelectMany
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_SelectMany_
  commentId: Overload:NRules.Fluent.Dsl.QueryExtensions.SelectMany
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.QueryExtensions.SelectMany
  nameWithType: QueryExtensions.SelectMany
- uid: NRules.Fluent.Dsl.QueryExtensions.SelectMany``2(NRules.Fluent.Dsl.IQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})
  name: SelectMany<TSource, TResult>(IQuery<TSource>, Expression<Func<TSource, IEnumerable<TResult>>>)
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_SelectMany__2_NRules_Fluent_Dsl_IQuery___0__System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_IEnumerable___1____
  commentId: M:NRules.Fluent.Dsl.QueryExtensions.SelectMany``2(NRules.Fluent.Dsl.IQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})
  name.vb: SelectMany(Of TSource, TResult)(IQuery(Of TSource), Expression(Of Func(Of TSource, IEnumerable(Of TResult))))
  fullName: NRules.Fluent.Dsl.QueryExtensions.SelectMany<TSource, TResult>(NRules.Fluent.Dsl.IQuery<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>>)
  fullName.vb: NRules.Fluent.Dsl.QueryExtensions.SelectMany(Of TSource, TResult)(NRules.Fluent.Dsl.IQuery(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult))))
  nameWithType: QueryExtensions.SelectMany<TSource, TResult>(IQuery<TSource>, Expression<Func<TSource, IEnumerable<TResult>>>)
  nameWithType.vb: QueryExtensions.SelectMany(Of TSource, TResult)(IQuery(Of TSource), Expression(Of Func(Of TSource, IEnumerable(Of TResult))))
- uid: NRules.Fluent.Dsl.QueryExtensions.Select``2(NRules.Fluent.Dsl.IQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: Select<TSource, TResult>(IQuery<TSource>, Expression<Func<TSource, TResult>>)
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_Select__2_NRules_Fluent_Dsl_IQuery___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NRules.Fluent.Dsl.QueryExtensions.Select``2(NRules.Fluent.Dsl.IQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: Select(Of TSource, TResult)(IQuery(Of TSource), Expression(Of Func(Of TSource, TResult)))
  fullName: NRules.Fluent.Dsl.QueryExtensions.Select<TSource, TResult>(NRules.Fluent.Dsl.IQuery<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>)
  fullName.vb: NRules.Fluent.Dsl.QueryExtensions.Select(Of TSource, TResult)(NRules.Fluent.Dsl.IQuery(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)))
  nameWithType: QueryExtensions.Select<TSource, TResult>(IQuery<TSource>, Expression<Func<TSource, TResult>>)
  nameWithType.vb: QueryExtensions.Select(Of TSource, TResult)(IQuery(Of TSource), Expression(Of Func(Of TSource, TResult)))
- uid: NRules.Fluent.Dsl.QueryExtensions.ThenBy*
  name: ThenBy
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_ThenBy_
  commentId: Overload:NRules.Fluent.Dsl.QueryExtensions.ThenBy
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.QueryExtensions.ThenBy
  nameWithType: QueryExtensions.ThenBy
- uid: NRules.Fluent.Dsl.QueryExtensions.ThenByDescending*
  name: ThenByDescending
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_ThenByDescending_
  commentId: Overload:NRules.Fluent.Dsl.QueryExtensions.ThenByDescending
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.QueryExtensions.ThenByDescending
  nameWithType: QueryExtensions.ThenByDescending
- uid: NRules.Fluent.Dsl.QueryExtensions.ThenByDescending``2(NRules.Fluent.Dsl.IOrderedQuery{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: ThenByDescending<TSource, TKey>(IOrderedQuery<IEnumerable<TSource>>, Expression<Func<TSource, TKey>>)
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_ThenByDescending__2_NRules_Fluent_Dsl_IOrderedQuery_System_Collections_Generic_IEnumerable___0___System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NRules.Fluent.Dsl.QueryExtensions.ThenByDescending``2(NRules.Fluent.Dsl.IOrderedQuery{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: ThenByDescending(Of TSource, TKey)(IOrderedQuery(Of IEnumerable(Of TSource)), Expression(Of Func(Of TSource, TKey)))
  fullName: NRules.Fluent.Dsl.QueryExtensions.ThenByDescending<TSource, TKey>(NRules.Fluent.Dsl.IOrderedQuery<System.Collections.Generic.IEnumerable<TSource>>, System.Linq.Expressions.Expression<System.Func<TSource, TKey>>)
  fullName.vb: NRules.Fluent.Dsl.QueryExtensions.ThenByDescending(Of TSource, TKey)(NRules.Fluent.Dsl.IOrderedQuery(Of System.Collections.Generic.IEnumerable(Of TSource)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)))
  nameWithType: QueryExtensions.ThenByDescending<TSource, TKey>(IOrderedQuery<IEnumerable<TSource>>, Expression<Func<TSource, TKey>>)
  nameWithType.vb: QueryExtensions.ThenByDescending(Of TSource, TKey)(IOrderedQuery(Of IEnumerable(Of TSource)), Expression(Of Func(Of TSource, TKey)))
- uid: NRules.Fluent.Dsl.QueryExtensions.ThenBy``2(NRules.Fluent.Dsl.IOrderedQuery{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: ThenBy<TSource, TKey>(IOrderedQuery<IEnumerable<TSource>>, Expression<Func<TSource, TKey>>)
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_ThenBy__2_NRules_Fluent_Dsl_IOrderedQuery_System_Collections_Generic_IEnumerable___0___System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NRules.Fluent.Dsl.QueryExtensions.ThenBy``2(NRules.Fluent.Dsl.IOrderedQuery{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: ThenBy(Of TSource, TKey)(IOrderedQuery(Of IEnumerable(Of TSource)), Expression(Of Func(Of TSource, TKey)))
  fullName: NRules.Fluent.Dsl.QueryExtensions.ThenBy<TSource, TKey>(NRules.Fluent.Dsl.IOrderedQuery<System.Collections.Generic.IEnumerable<TSource>>, System.Linq.Expressions.Expression<System.Func<TSource, TKey>>)
  fullName.vb: NRules.Fluent.Dsl.QueryExtensions.ThenBy(Of TSource, TKey)(NRules.Fluent.Dsl.IOrderedQuery(Of System.Collections.Generic.IEnumerable(Of TSource)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)))
  nameWithType: QueryExtensions.ThenBy<TSource, TKey>(IOrderedQuery<IEnumerable<TSource>>, Expression<Func<TSource, TKey>>)
  nameWithType.vb: QueryExtensions.ThenBy(Of TSource, TKey)(IOrderedQuery(Of IEnumerable(Of TSource)), Expression(Of Func(Of TSource, TKey)))
- uid: NRules.Fluent.Dsl.QueryExtensions.ToLookup*
  name: ToLookup
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_ToLookup_
  commentId: Overload:NRules.Fluent.Dsl.QueryExtensions.ToLookup
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.QueryExtensions.ToLookup
  nameWithType: QueryExtensions.ToLookup
- uid: NRules.Fluent.Dsl.QueryExtensions.ToLookup``1(NRules.Fluent.Dsl.ICollectQuery{System.Collections.Generic.IEnumerable{``0}})
  name: ToLookup<TSource>(ICollectQuery<IEnumerable<TSource>>)
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_ToLookup__1_NRules_Fluent_Dsl_ICollectQuery_System_Collections_Generic_IEnumerable___0___
  commentId: M:NRules.Fluent.Dsl.QueryExtensions.ToLookup``1(NRules.Fluent.Dsl.ICollectQuery{System.Collections.Generic.IEnumerable{``0}})
  name.vb: ToLookup(Of TSource)(ICollectQuery(Of IEnumerable(Of TSource)))
  fullName: NRules.Fluent.Dsl.QueryExtensions.ToLookup<TSource>(NRules.Fluent.Dsl.ICollectQuery<System.Collections.Generic.IEnumerable<TSource>>)
  fullName.vb: NRules.Fluent.Dsl.QueryExtensions.ToLookup(Of TSource)(NRules.Fluent.Dsl.ICollectQuery(Of System.Collections.Generic.IEnumerable(Of TSource)))
  nameWithType: QueryExtensions.ToLookup<TSource>(ICollectQuery<IEnumerable<TSource>>)
  nameWithType.vb: QueryExtensions.ToLookup(Of TSource)(ICollectQuery(Of IEnumerable(Of TSource)))
- uid: NRules.Fluent.Dsl.QueryExtensions.ToLookup``2(NRules.Fluent.Dsl.ICollectQuery{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: ToLookup<TSource, TKey>(ICollectQuery<IEnumerable<TSource>>, Expression<Func<TSource, TKey>>)
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_ToLookup__2_NRules_Fluent_Dsl_ICollectQuery_System_Collections_Generic_IEnumerable___0___System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NRules.Fluent.Dsl.QueryExtensions.ToLookup``2(NRules.Fluent.Dsl.ICollectQuery{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: ToLookup(Of TSource, TKey)(ICollectQuery(Of IEnumerable(Of TSource)), Expression(Of Func(Of TSource, TKey)))
  fullName: NRules.Fluent.Dsl.QueryExtensions.ToLookup<TSource, TKey>(NRules.Fluent.Dsl.ICollectQuery<System.Collections.Generic.IEnumerable<TSource>>, System.Linq.Expressions.Expression<System.Func<TSource, TKey>>)
  fullName.vb: NRules.Fluent.Dsl.QueryExtensions.ToLookup(Of TSource, TKey)(NRules.Fluent.Dsl.ICollectQuery(Of System.Collections.Generic.IEnumerable(Of TSource)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)))
  nameWithType: QueryExtensions.ToLookup<TSource, TKey>(ICollectQuery<IEnumerable<TSource>>, Expression<Func<TSource, TKey>>)
  nameWithType.vb: QueryExtensions.ToLookup(Of TSource, TKey)(ICollectQuery(Of IEnumerable(Of TSource)), Expression(Of Func(Of TSource, TKey)))
- uid: NRules.Fluent.Dsl.QueryExtensions.ToLookup``3(NRules.Fluent.Dsl.ICollectQuery{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})
  name: ToLookup<TSource, TKey, TElement>(ICollectQuery<IEnumerable<TSource>>, Expression<Func<TSource, TKey>>, Expression<Func<TSource, TElement>>)
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_ToLookup__3_NRules_Fluent_Dsl_ICollectQuery_System_Collections_Generic_IEnumerable___0___System_Linq_Expressions_Expression_System_Func___0___1___System_Linq_Expressions_Expression_System_Func___0___2___
  commentId: M:NRules.Fluent.Dsl.QueryExtensions.ToLookup``3(NRules.Fluent.Dsl.ICollectQuery{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})
  name.vb: ToLookup(Of TSource, TKey, TElement)(ICollectQuery(Of IEnumerable(Of TSource)), Expression(Of Func(Of TSource, TKey)), Expression(Of Func(Of TSource, TElement)))
  fullName: NRules.Fluent.Dsl.QueryExtensions.ToLookup<TSource, TKey, TElement>(NRules.Fluent.Dsl.ICollectQuery<System.Collections.Generic.IEnumerable<TSource>>, System.Linq.Expressions.Expression<System.Func<TSource, TKey>>, System.Linq.Expressions.Expression<System.Func<TSource, TElement>>)
  fullName.vb: NRules.Fluent.Dsl.QueryExtensions.ToLookup(Of TSource, TKey, TElement)(NRules.Fluent.Dsl.ICollectQuery(Of System.Collections.Generic.IEnumerable(Of TSource)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TElement)))
  nameWithType: QueryExtensions.ToLookup<TSource, TKey, TElement>(ICollectQuery<IEnumerable<TSource>>, Expression<Func<TSource, TKey>>, Expression<Func<TSource, TElement>>)
  nameWithType.vb: QueryExtensions.ToLookup(Of TSource, TKey, TElement)(ICollectQuery(Of IEnumerable(Of TSource)), Expression(Of Func(Of TSource, TKey)), Expression(Of Func(Of TSource, TElement)))
- uid: NRules.Fluent.Dsl.QueryExtensions.Where*
  name: Where
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_Where_
  commentId: Overload:NRules.Fluent.Dsl.QueryExtensions.Where
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.QueryExtensions.Where
  nameWithType: QueryExtensions.Where
- uid: NRules.Fluent.Dsl.QueryExtensions.Where``1(NRules.Fluent.Dsl.IQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])
  name: Where<TSource>(IQuery<TSource>, params Expression<Func<TSource, bool>>[])
  href: api/NRules.Fluent.Dsl.QueryExtensions.html#NRules_Fluent_Dsl_QueryExtensions_Where__1_NRules_Fluent_Dsl_IQuery___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean_____
  commentId: M:NRules.Fluent.Dsl.QueryExtensions.Where``1(NRules.Fluent.Dsl.IQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])
  name.vb: Where(Of TSource)(IQuery(Of TSource), ParamArray Expression(Of Func(Of TSource, Boolean))())
  fullName: NRules.Fluent.Dsl.QueryExtensions.Where<TSource>(NRules.Fluent.Dsl.IQuery<TSource>, params System.Linq.Expressions.Expression<System.Func<TSource, bool>>[])
  fullName.vb: NRules.Fluent.Dsl.QueryExtensions.Where(Of TSource)(NRules.Fluent.Dsl.IQuery(Of TSource), ParamArray System.Linq.Expressions.Expression(Of System.Func(Of TSource, Boolean))())
  nameWithType: QueryExtensions.Where<TSource>(IQuery<TSource>, params Expression<Func<TSource, bool>>[])
  nameWithType.vb: QueryExtensions.Where(Of TSource)(IQuery(Of TSource), ParamArray Expression(Of Func(Of TSource, Boolean))())
- uid: NRules.Fluent.Dsl.RepeatabilityAttribute
  name: RepeatabilityAttribute
  href: api/NRules.Fluent.Dsl.RepeatabilityAttribute.html
  commentId: T:NRules.Fluent.Dsl.RepeatabilityAttribute
  fullName: NRules.Fluent.Dsl.RepeatabilityAttribute
  nameWithType: RepeatabilityAttribute
- uid: NRules.Fluent.Dsl.RepeatabilityAttribute.#ctor(NRules.RuleModel.RuleRepeatability)
  name: RepeatabilityAttribute(RuleRepeatability)
  href: api/NRules.Fluent.Dsl.RepeatabilityAttribute.html#NRules_Fluent_Dsl_RepeatabilityAttribute__ctor_NRules_RuleModel_RuleRepeatability_
  commentId: M:NRules.Fluent.Dsl.RepeatabilityAttribute.#ctor(NRules.RuleModel.RuleRepeatability)
  name.vb: New(RuleRepeatability)
  fullName: NRules.Fluent.Dsl.RepeatabilityAttribute.RepeatabilityAttribute(NRules.RuleModel.RuleRepeatability)
  fullName.vb: NRules.Fluent.Dsl.RepeatabilityAttribute.New(NRules.RuleModel.RuleRepeatability)
  nameWithType: RepeatabilityAttribute.RepeatabilityAttribute(RuleRepeatability)
  nameWithType.vb: RepeatabilityAttribute.New(RuleRepeatability)
- uid: NRules.Fluent.Dsl.RepeatabilityAttribute.#ctor*
  name: RepeatabilityAttribute
  href: api/NRules.Fluent.Dsl.RepeatabilityAttribute.html#NRules_Fluent_Dsl_RepeatabilityAttribute__ctor_
  commentId: Overload:NRules.Fluent.Dsl.RepeatabilityAttribute.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Fluent.Dsl.RepeatabilityAttribute.RepeatabilityAttribute
  fullName.vb: NRules.Fluent.Dsl.RepeatabilityAttribute.New
  nameWithType: RepeatabilityAttribute.RepeatabilityAttribute
  nameWithType.vb: RepeatabilityAttribute.New
- uid: NRules.Fluent.Dsl.Rule
  name: Rule
  href: api/NRules.Fluent.Dsl.Rule.html
  commentId: T:NRules.Fluent.Dsl.Rule
  fullName: NRules.Fluent.Dsl.Rule
  nameWithType: Rule
- uid: NRules.Fluent.Dsl.Rule.#ctor
  name: Rule()
  href: api/NRules.Fluent.Dsl.Rule.html#NRules_Fluent_Dsl_Rule__ctor
  commentId: M:NRules.Fluent.Dsl.Rule.#ctor
  name.vb: New()
  fullName: NRules.Fluent.Dsl.Rule.Rule()
  fullName.vb: NRules.Fluent.Dsl.Rule.New()
  nameWithType: Rule.Rule()
  nameWithType.vb: Rule.New()
- uid: NRules.Fluent.Dsl.Rule.#ctor*
  name: Rule
  href: api/NRules.Fluent.Dsl.Rule.html#NRules_Fluent_Dsl_Rule__ctor_
  commentId: Overload:NRules.Fluent.Dsl.Rule.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Fluent.Dsl.Rule.Rule
  fullName.vb: NRules.Fluent.Dsl.Rule.New
  nameWithType: Rule.Rule
  nameWithType.vb: Rule.New
- uid: NRules.Fluent.Dsl.Rule.Define
  name: Define()
  href: api/NRules.Fluent.Dsl.Rule.html#NRules_Fluent_Dsl_Rule_Define
  commentId: M:NRules.Fluent.Dsl.Rule.Define
  fullName: NRules.Fluent.Dsl.Rule.Define()
  nameWithType: Rule.Define()
- uid: NRules.Fluent.Dsl.Rule.Define*
  name: Define
  href: api/NRules.Fluent.Dsl.Rule.html#NRules_Fluent_Dsl_Rule_Define_
  commentId: Overload:NRules.Fluent.Dsl.Rule.Define
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.Rule.Define
  nameWithType: Rule.Define
- uid: NRules.Fluent.Dsl.Rule.Dependency
  name: Dependency()
  href: api/NRules.Fluent.Dsl.Rule.html#NRules_Fluent_Dsl_Rule_Dependency
  commentId: M:NRules.Fluent.Dsl.Rule.Dependency
  fullName: NRules.Fluent.Dsl.Rule.Dependency()
  nameWithType: Rule.Dependency()
- uid: NRules.Fluent.Dsl.Rule.Dependency*
  name: Dependency
  href: api/NRules.Fluent.Dsl.Rule.html#NRules_Fluent_Dsl_Rule_Dependency_
  commentId: Overload:NRules.Fluent.Dsl.Rule.Dependency
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.Rule.Dependency
  nameWithType: Rule.Dependency
- uid: NRules.Fluent.Dsl.Rule.Filter
  name: Filter()
  href: api/NRules.Fluent.Dsl.Rule.html#NRules_Fluent_Dsl_Rule_Filter
  commentId: M:NRules.Fluent.Dsl.Rule.Filter
  fullName: NRules.Fluent.Dsl.Rule.Filter()
  nameWithType: Rule.Filter()
- uid: NRules.Fluent.Dsl.Rule.Filter*
  name: Filter
  href: api/NRules.Fluent.Dsl.Rule.html#NRules_Fluent_Dsl_Rule_Filter_
  commentId: Overload:NRules.Fluent.Dsl.Rule.Filter
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.Rule.Filter
  nameWithType: Rule.Filter
- uid: NRules.Fluent.Dsl.Rule.Name(System.String)
  name: Name(string)
  href: api/NRules.Fluent.Dsl.Rule.html#NRules_Fluent_Dsl_Rule_Name_System_String_
  commentId: M:NRules.Fluent.Dsl.Rule.Name(System.String)
  name.vb: Name(String)
  fullName: NRules.Fluent.Dsl.Rule.Name(string)
  fullName.vb: NRules.Fluent.Dsl.Rule.Name(String)
  nameWithType: Rule.Name(string)
  nameWithType.vb: Rule.Name(String)
- uid: NRules.Fluent.Dsl.Rule.Name*
  name: Name
  href: api/NRules.Fluent.Dsl.Rule.html#NRules_Fluent_Dsl_Rule_Name_
  commentId: Overload:NRules.Fluent.Dsl.Rule.Name
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.Rule.Name
  nameWithType: Rule.Name
- uid: NRules.Fluent.Dsl.Rule.Priority(System.Int32)
  name: Priority(int)
  href: api/NRules.Fluent.Dsl.Rule.html#NRules_Fluent_Dsl_Rule_Priority_System_Int32_
  commentId: M:NRules.Fluent.Dsl.Rule.Priority(System.Int32)
  name.vb: Priority(Integer)
  fullName: NRules.Fluent.Dsl.Rule.Priority(int)
  fullName.vb: NRules.Fluent.Dsl.Rule.Priority(Integer)
  nameWithType: Rule.Priority(int)
  nameWithType.vb: Rule.Priority(Integer)
- uid: NRules.Fluent.Dsl.Rule.Priority*
  name: Priority
  href: api/NRules.Fluent.Dsl.Rule.html#NRules_Fluent_Dsl_Rule_Priority_
  commentId: Overload:NRules.Fluent.Dsl.Rule.Priority
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.Rule.Priority
  nameWithType: Rule.Priority
- uid: NRules.Fluent.Dsl.Rule.Then
  name: Then()
  href: api/NRules.Fluent.Dsl.Rule.html#NRules_Fluent_Dsl_Rule_Then
  commentId: M:NRules.Fluent.Dsl.Rule.Then
  fullName: NRules.Fluent.Dsl.Rule.Then()
  nameWithType: Rule.Then()
- uid: NRules.Fluent.Dsl.Rule.Then*
  name: Then
  href: api/NRules.Fluent.Dsl.Rule.html#NRules_Fluent_Dsl_Rule_Then_
  commentId: Overload:NRules.Fluent.Dsl.Rule.Then
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.Rule.Then
  nameWithType: Rule.Then
- uid: NRules.Fluent.Dsl.Rule.When
  name: When()
  href: api/NRules.Fluent.Dsl.Rule.html#NRules_Fluent_Dsl_Rule_When
  commentId: M:NRules.Fluent.Dsl.Rule.When
  fullName: NRules.Fluent.Dsl.Rule.When()
  nameWithType: Rule.When()
- uid: NRules.Fluent.Dsl.Rule.When*
  name: When
  href: api/NRules.Fluent.Dsl.Rule.html#NRules_Fluent_Dsl_Rule_When_
  commentId: Overload:NRules.Fluent.Dsl.Rule.When
  isSpec: "True"
  fullName: NRules.Fluent.Dsl.Rule.When
  nameWithType: Rule.When
- uid: NRules.Fluent.Dsl.TagAttribute
  name: TagAttribute
  href: api/NRules.Fluent.Dsl.TagAttribute.html
  commentId: T:NRules.Fluent.Dsl.TagAttribute
  fullName: NRules.Fluent.Dsl.TagAttribute
  nameWithType: TagAttribute
- uid: NRules.Fluent.Dsl.TagAttribute.#ctor(System.String)
  name: TagAttribute(string)
  href: api/NRules.Fluent.Dsl.TagAttribute.html#NRules_Fluent_Dsl_TagAttribute__ctor_System_String_
  commentId: M:NRules.Fluent.Dsl.TagAttribute.#ctor(System.String)
  name.vb: New(String)
  fullName: NRules.Fluent.Dsl.TagAttribute.TagAttribute(string)
  fullName.vb: NRules.Fluent.Dsl.TagAttribute.New(String)
  nameWithType: TagAttribute.TagAttribute(string)
  nameWithType.vb: TagAttribute.New(String)
- uid: NRules.Fluent.Dsl.TagAttribute.#ctor*
  name: TagAttribute
  href: api/NRules.Fluent.Dsl.TagAttribute.html#NRules_Fluent_Dsl_TagAttribute__ctor_
  commentId: Overload:NRules.Fluent.Dsl.TagAttribute.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Fluent.Dsl.TagAttribute.TagAttribute
  fullName.vb: NRules.Fluent.Dsl.TagAttribute.New
  nameWithType: TagAttribute.TagAttribute
  nameWithType.vb: TagAttribute.New
- uid: NRules.Fluent.IRuleActivator
  name: IRuleActivator
  href: api/NRules.Fluent.IRuleActivator.html
  commentId: T:NRules.Fluent.IRuleActivator
  fullName: NRules.Fluent.IRuleActivator
  nameWithType: IRuleActivator
- uid: NRules.Fluent.IRuleActivator.Activate(System.Type)
  name: Activate(Type)
  href: api/NRules.Fluent.IRuleActivator.html#NRules_Fluent_IRuleActivator_Activate_System_Type_
  commentId: M:NRules.Fluent.IRuleActivator.Activate(System.Type)
  fullName: NRules.Fluent.IRuleActivator.Activate(System.Type)
  nameWithType: IRuleActivator.Activate(Type)
- uid: NRules.Fluent.IRuleActivator.Activate*
  name: Activate
  href: api/NRules.Fluent.IRuleActivator.html#NRules_Fluent_IRuleActivator_Activate_
  commentId: Overload:NRules.Fluent.IRuleActivator.Activate
  isSpec: "True"
  fullName: NRules.Fluent.IRuleActivator.Activate
  nameWithType: IRuleActivator.Activate
- uid: NRules.Fluent.IRuleLoadSpec
  name: IRuleLoadSpec
  href: api/NRules.Fluent.IRuleLoadSpec.html
  commentId: T:NRules.Fluent.IRuleLoadSpec
  fullName: NRules.Fluent.IRuleLoadSpec
  nameWithType: IRuleLoadSpec
- uid: NRules.Fluent.IRuleLoadSpec.From(System.Action{NRules.Fluent.IRuleTypeScanner})
  name: From(Action<IRuleTypeScanner>)
  href: api/NRules.Fluent.IRuleLoadSpec.html#NRules_Fluent_IRuleLoadSpec_From_System_Action_NRules_Fluent_IRuleTypeScanner__
  commentId: M:NRules.Fluent.IRuleLoadSpec.From(System.Action{NRules.Fluent.IRuleTypeScanner})
  name.vb: From(Action(Of IRuleTypeScanner))
  fullName: NRules.Fluent.IRuleLoadSpec.From(System.Action<NRules.Fluent.IRuleTypeScanner>)
  fullName.vb: NRules.Fluent.IRuleLoadSpec.From(System.Action(Of NRules.Fluent.IRuleTypeScanner))
  nameWithType: IRuleLoadSpec.From(Action<IRuleTypeScanner>)
  nameWithType.vb: IRuleLoadSpec.From(Action(Of IRuleTypeScanner))
- uid: NRules.Fluent.IRuleLoadSpec.From(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name: From(IEnumerable<Assembly>)
  href: api/NRules.Fluent.IRuleLoadSpec.html#NRules_Fluent_IRuleLoadSpec_From_System_Collections_Generic_IEnumerable_System_Reflection_Assembly__
  commentId: M:NRules.Fluent.IRuleLoadSpec.From(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name.vb: From(IEnumerable(Of Assembly))
  fullName: NRules.Fluent.IRuleLoadSpec.From(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)
  fullName.vb: NRules.Fluent.IRuleLoadSpec.From(System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly))
  nameWithType: IRuleLoadSpec.From(IEnumerable<Assembly>)
  nameWithType.vb: IRuleLoadSpec.From(IEnumerable(Of Assembly))
- uid: NRules.Fluent.IRuleLoadSpec.From(System.Collections.Generic.IEnumerable{System.Type})
  name: From(IEnumerable<Type>)
  href: api/NRules.Fluent.IRuleLoadSpec.html#NRules_Fluent_IRuleLoadSpec_From_System_Collections_Generic_IEnumerable_System_Type__
  commentId: M:NRules.Fluent.IRuleLoadSpec.From(System.Collections.Generic.IEnumerable{System.Type})
  name.vb: From(IEnumerable(Of Type))
  fullName: NRules.Fluent.IRuleLoadSpec.From(System.Collections.Generic.IEnumerable<System.Type>)
  fullName.vb: NRules.Fluent.IRuleLoadSpec.From(System.Collections.Generic.IEnumerable(Of System.Type))
  nameWithType: IRuleLoadSpec.From(IEnumerable<Type>)
  nameWithType.vb: IRuleLoadSpec.From(IEnumerable(Of Type))
- uid: NRules.Fluent.IRuleLoadSpec.From(System.Reflection.Assembly[])
  name: From(params Assembly[])
  href: api/NRules.Fluent.IRuleLoadSpec.html#NRules_Fluent_IRuleLoadSpec_From_System_Reflection_Assembly___
  commentId: M:NRules.Fluent.IRuleLoadSpec.From(System.Reflection.Assembly[])
  name.vb: From(ParamArray Assembly())
  fullName: NRules.Fluent.IRuleLoadSpec.From(params System.Reflection.Assembly[])
  fullName.vb: NRules.Fluent.IRuleLoadSpec.From(ParamArray System.Reflection.Assembly())
  nameWithType: IRuleLoadSpec.From(params Assembly[])
  nameWithType.vb: IRuleLoadSpec.From(ParamArray Assembly())
- uid: NRules.Fluent.IRuleLoadSpec.From(System.Type[])
  name: From(params Type[])
  href: api/NRules.Fluent.IRuleLoadSpec.html#NRules_Fluent_IRuleLoadSpec_From_System_Type___
  commentId: M:NRules.Fluent.IRuleLoadSpec.From(System.Type[])
  name.vb: From(ParamArray Type())
  fullName: NRules.Fluent.IRuleLoadSpec.From(params System.Type[])
  fullName.vb: NRules.Fluent.IRuleLoadSpec.From(ParamArray System.Type())
  nameWithType: IRuleLoadSpec.From(params Type[])
  nameWithType.vb: IRuleLoadSpec.From(ParamArray Type())
- uid: NRules.Fluent.IRuleLoadSpec.From*
  name: From
  href: api/NRules.Fluent.IRuleLoadSpec.html#NRules_Fluent_IRuleLoadSpec_From_
  commentId: Overload:NRules.Fluent.IRuleLoadSpec.From
  isSpec: "True"
  fullName: NRules.Fluent.IRuleLoadSpec.From
  nameWithType: IRuleLoadSpec.From
- uid: NRules.Fluent.IRuleLoadSpec.NestedTypes(System.Boolean)
  name: NestedTypes(bool)
  href: api/NRules.Fluent.IRuleLoadSpec.html#NRules_Fluent_IRuleLoadSpec_NestedTypes_System_Boolean_
  commentId: M:NRules.Fluent.IRuleLoadSpec.NestedTypes(System.Boolean)
  name.vb: NestedTypes(Boolean)
  fullName: NRules.Fluent.IRuleLoadSpec.NestedTypes(bool)
  fullName.vb: NRules.Fluent.IRuleLoadSpec.NestedTypes(Boolean)
  nameWithType: IRuleLoadSpec.NestedTypes(bool)
  nameWithType.vb: IRuleLoadSpec.NestedTypes(Boolean)
- uid: NRules.Fluent.IRuleLoadSpec.NestedTypes*
  name: NestedTypes
  href: api/NRules.Fluent.IRuleLoadSpec.html#NRules_Fluent_IRuleLoadSpec_NestedTypes_
  commentId: Overload:NRules.Fluent.IRuleLoadSpec.NestedTypes
  isSpec: "True"
  fullName: NRules.Fluent.IRuleLoadSpec.NestedTypes
  nameWithType: IRuleLoadSpec.NestedTypes
- uid: NRules.Fluent.IRuleLoadSpec.PrivateTypes(System.Boolean)
  name: PrivateTypes(bool)
  href: api/NRules.Fluent.IRuleLoadSpec.html#NRules_Fluent_IRuleLoadSpec_PrivateTypes_System_Boolean_
  commentId: M:NRules.Fluent.IRuleLoadSpec.PrivateTypes(System.Boolean)
  name.vb: PrivateTypes(Boolean)
  fullName: NRules.Fluent.IRuleLoadSpec.PrivateTypes(bool)
  fullName.vb: NRules.Fluent.IRuleLoadSpec.PrivateTypes(Boolean)
  nameWithType: IRuleLoadSpec.PrivateTypes(bool)
  nameWithType.vb: IRuleLoadSpec.PrivateTypes(Boolean)
- uid: NRules.Fluent.IRuleLoadSpec.PrivateTypes*
  name: PrivateTypes
  href: api/NRules.Fluent.IRuleLoadSpec.html#NRules_Fluent_IRuleLoadSpec_PrivateTypes_
  commentId: Overload:NRules.Fluent.IRuleLoadSpec.PrivateTypes
  isSpec: "True"
  fullName: NRules.Fluent.IRuleLoadSpec.PrivateTypes
  nameWithType: IRuleLoadSpec.PrivateTypes
- uid: NRules.Fluent.IRuleLoadSpec.To(System.String)
  name: To(string)
  href: api/NRules.Fluent.IRuleLoadSpec.html#NRules_Fluent_IRuleLoadSpec_To_System_String_
  commentId: M:NRules.Fluent.IRuleLoadSpec.To(System.String)
  name.vb: To(String)
  fullName: NRules.Fluent.IRuleLoadSpec.To(string)
  fullName.vb: NRules.Fluent.IRuleLoadSpec.To(String)
  nameWithType: IRuleLoadSpec.To(string)
  nameWithType.vb: IRuleLoadSpec.To(String)
- uid: NRules.Fluent.IRuleLoadSpec.To*
  name: To
  href: api/NRules.Fluent.IRuleLoadSpec.html#NRules_Fluent_IRuleLoadSpec_To_
  commentId: Overload:NRules.Fluent.IRuleLoadSpec.To
  isSpec: "True"
  fullName: NRules.Fluent.IRuleLoadSpec.To
  nameWithType: IRuleLoadSpec.To
- uid: NRules.Fluent.IRuleLoadSpec.Where(System.Func{NRules.Fluent.IRuleMetadata,System.Boolean})
  name: Where(Func<IRuleMetadata, bool>)
  href: api/NRules.Fluent.IRuleLoadSpec.html#NRules_Fluent_IRuleLoadSpec_Where_System_Func_NRules_Fluent_IRuleMetadata_System_Boolean__
  commentId: M:NRules.Fluent.IRuleLoadSpec.Where(System.Func{NRules.Fluent.IRuleMetadata,System.Boolean})
  name.vb: Where(Func(Of IRuleMetadata, Boolean))
  fullName: NRules.Fluent.IRuleLoadSpec.Where(System.Func<NRules.Fluent.IRuleMetadata, bool>)
  fullName.vb: NRules.Fluent.IRuleLoadSpec.Where(System.Func(Of NRules.Fluent.IRuleMetadata, Boolean))
  nameWithType: IRuleLoadSpec.Where(Func<IRuleMetadata, bool>)
  nameWithType.vb: IRuleLoadSpec.Where(Func(Of IRuleMetadata, Boolean))
- uid: NRules.Fluent.IRuleLoadSpec.Where*
  name: Where
  href: api/NRules.Fluent.IRuleLoadSpec.html#NRules_Fluent_IRuleLoadSpec_Where_
  commentId: Overload:NRules.Fluent.IRuleLoadSpec.Where
  isSpec: "True"
  fullName: NRules.Fluent.IRuleLoadSpec.Where
  nameWithType: IRuleLoadSpec.Where
- uid: NRules.Fluent.IRuleMetadata
  name: IRuleMetadata
  href: api/NRules.Fluent.IRuleMetadata.html
  commentId: T:NRules.Fluent.IRuleMetadata
  fullName: NRules.Fluent.IRuleMetadata
  nameWithType: IRuleMetadata
- uid: NRules.Fluent.IRuleMetadata.Description
  name: Description
  href: api/NRules.Fluent.IRuleMetadata.html#NRules_Fluent_IRuleMetadata_Description
  commentId: P:NRules.Fluent.IRuleMetadata.Description
  fullName: NRules.Fluent.IRuleMetadata.Description
  nameWithType: IRuleMetadata.Description
- uid: NRules.Fluent.IRuleMetadata.Description*
  name: Description
  href: api/NRules.Fluent.IRuleMetadata.html#NRules_Fluent_IRuleMetadata_Description_
  commentId: Overload:NRules.Fluent.IRuleMetadata.Description
  isSpec: "True"
  fullName: NRules.Fluent.IRuleMetadata.Description
  nameWithType: IRuleMetadata.Description
- uid: NRules.Fluent.IRuleMetadata.Name
  name: Name
  href: api/NRules.Fluent.IRuleMetadata.html#NRules_Fluent_IRuleMetadata_Name
  commentId: P:NRules.Fluent.IRuleMetadata.Name
  fullName: NRules.Fluent.IRuleMetadata.Name
  nameWithType: IRuleMetadata.Name
- uid: NRules.Fluent.IRuleMetadata.Name*
  name: Name
  href: api/NRules.Fluent.IRuleMetadata.html#NRules_Fluent_IRuleMetadata_Name_
  commentId: Overload:NRules.Fluent.IRuleMetadata.Name
  isSpec: "True"
  fullName: NRules.Fluent.IRuleMetadata.Name
  nameWithType: IRuleMetadata.Name
- uid: NRules.Fluent.IRuleMetadata.RuleType
  name: RuleType
  href: api/NRules.Fluent.IRuleMetadata.html#NRules_Fluent_IRuleMetadata_RuleType
  commentId: P:NRules.Fluent.IRuleMetadata.RuleType
  fullName: NRules.Fluent.IRuleMetadata.RuleType
  nameWithType: IRuleMetadata.RuleType
- uid: NRules.Fluent.IRuleMetadata.RuleType*
  name: RuleType
  href: api/NRules.Fluent.IRuleMetadata.html#NRules_Fluent_IRuleMetadata_RuleType_
  commentId: Overload:NRules.Fluent.IRuleMetadata.RuleType
  isSpec: "True"
  fullName: NRules.Fluent.IRuleMetadata.RuleType
  nameWithType: IRuleMetadata.RuleType
- uid: NRules.Fluent.IRuleMetadata.Tags
  name: Tags
  href: api/NRules.Fluent.IRuleMetadata.html#NRules_Fluent_IRuleMetadata_Tags
  commentId: P:NRules.Fluent.IRuleMetadata.Tags
  fullName: NRules.Fluent.IRuleMetadata.Tags
  nameWithType: IRuleMetadata.Tags
- uid: NRules.Fluent.IRuleMetadata.Tags*
  name: Tags
  href: api/NRules.Fluent.IRuleMetadata.html#NRules_Fluent_IRuleMetadata_Tags_
  commentId: Overload:NRules.Fluent.IRuleMetadata.Tags
  isSpec: "True"
  fullName: NRules.Fluent.IRuleMetadata.Tags
  nameWithType: IRuleMetadata.Tags
- uid: NRules.Fluent.IRuleTypeScanner
  name: IRuleTypeScanner
  href: api/NRules.Fluent.IRuleTypeScanner.html
  commentId: T:NRules.Fluent.IRuleTypeScanner
  fullName: NRules.Fluent.IRuleTypeScanner
  nameWithType: IRuleTypeScanner
- uid: NRules.Fluent.IRuleTypeScanner.Assembly(System.Reflection.Assembly[])
  name: Assembly(params Assembly[])
  href: api/NRules.Fluent.IRuleTypeScanner.html#NRules_Fluent_IRuleTypeScanner_Assembly_System_Reflection_Assembly___
  commentId: M:NRules.Fluent.IRuleTypeScanner.Assembly(System.Reflection.Assembly[])
  name.vb: Assembly(ParamArray Assembly())
  fullName: NRules.Fluent.IRuleTypeScanner.Assembly(params System.Reflection.Assembly[])
  fullName.vb: NRules.Fluent.IRuleTypeScanner.Assembly(ParamArray System.Reflection.Assembly())
  nameWithType: IRuleTypeScanner.Assembly(params Assembly[])
  nameWithType.vb: IRuleTypeScanner.Assembly(ParamArray Assembly())
- uid: NRules.Fluent.IRuleTypeScanner.Assembly*
  name: Assembly
  href: api/NRules.Fluent.IRuleTypeScanner.html#NRules_Fluent_IRuleTypeScanner_Assembly_
  commentId: Overload:NRules.Fluent.IRuleTypeScanner.Assembly
  isSpec: "True"
  fullName: NRules.Fluent.IRuleTypeScanner.Assembly
  nameWithType: IRuleTypeScanner.Assembly
- uid: NRules.Fluent.IRuleTypeScanner.AssemblyOf(System.Type)
  name: AssemblyOf(Type)
  href: api/NRules.Fluent.IRuleTypeScanner.html#NRules_Fluent_IRuleTypeScanner_AssemblyOf_System_Type_
  commentId: M:NRules.Fluent.IRuleTypeScanner.AssemblyOf(System.Type)
  fullName: NRules.Fluent.IRuleTypeScanner.AssemblyOf(System.Type)
  nameWithType: IRuleTypeScanner.AssemblyOf(Type)
- uid: NRules.Fluent.IRuleTypeScanner.AssemblyOf*
  name: AssemblyOf
  href: api/NRules.Fluent.IRuleTypeScanner.html#NRules_Fluent_IRuleTypeScanner_AssemblyOf_
  commentId: Overload:NRules.Fluent.IRuleTypeScanner.AssemblyOf
  isSpec: "True"
  fullName: NRules.Fluent.IRuleTypeScanner.AssemblyOf
  nameWithType: IRuleTypeScanner.AssemblyOf
- uid: NRules.Fluent.IRuleTypeScanner.AssemblyOf``1
  name: AssemblyOf<T>()
  href: api/NRules.Fluent.IRuleTypeScanner.html#NRules_Fluent_IRuleTypeScanner_AssemblyOf__1
  commentId: M:NRules.Fluent.IRuleTypeScanner.AssemblyOf``1
  name.vb: AssemblyOf(Of T)()
  fullName: NRules.Fluent.IRuleTypeScanner.AssemblyOf<T>()
  fullName.vb: NRules.Fluent.IRuleTypeScanner.AssemblyOf(Of T)()
  nameWithType: IRuleTypeScanner.AssemblyOf<T>()
  nameWithType.vb: IRuleTypeScanner.AssemblyOf(Of T)()
- uid: NRules.Fluent.IRuleTypeScanner.NestedTypes(System.Boolean)
  name: NestedTypes(bool)
  href: api/NRules.Fluent.IRuleTypeScanner.html#NRules_Fluent_IRuleTypeScanner_NestedTypes_System_Boolean_
  commentId: M:NRules.Fluent.IRuleTypeScanner.NestedTypes(System.Boolean)
  name.vb: NestedTypes(Boolean)
  fullName: NRules.Fluent.IRuleTypeScanner.NestedTypes(bool)
  fullName.vb: NRules.Fluent.IRuleTypeScanner.NestedTypes(Boolean)
  nameWithType: IRuleTypeScanner.NestedTypes(bool)
  nameWithType.vb: IRuleTypeScanner.NestedTypes(Boolean)
- uid: NRules.Fluent.IRuleTypeScanner.NestedTypes*
  name: NestedTypes
  href: api/NRules.Fluent.IRuleTypeScanner.html#NRules_Fluent_IRuleTypeScanner_NestedTypes_
  commentId: Overload:NRules.Fluent.IRuleTypeScanner.NestedTypes
  isSpec: "True"
  fullName: NRules.Fluent.IRuleTypeScanner.NestedTypes
  nameWithType: IRuleTypeScanner.NestedTypes
- uid: NRules.Fluent.IRuleTypeScanner.PrivateTypes(System.Boolean)
  name: PrivateTypes(bool)
  href: api/NRules.Fluent.IRuleTypeScanner.html#NRules_Fluent_IRuleTypeScanner_PrivateTypes_System_Boolean_
  commentId: M:NRules.Fluent.IRuleTypeScanner.PrivateTypes(System.Boolean)
  name.vb: PrivateTypes(Boolean)
  fullName: NRules.Fluent.IRuleTypeScanner.PrivateTypes(bool)
  fullName.vb: NRules.Fluent.IRuleTypeScanner.PrivateTypes(Boolean)
  nameWithType: IRuleTypeScanner.PrivateTypes(bool)
  nameWithType.vb: IRuleTypeScanner.PrivateTypes(Boolean)
- uid: NRules.Fluent.IRuleTypeScanner.PrivateTypes*
  name: PrivateTypes
  href: api/NRules.Fluent.IRuleTypeScanner.html#NRules_Fluent_IRuleTypeScanner_PrivateTypes_
  commentId: Overload:NRules.Fluent.IRuleTypeScanner.PrivateTypes
  isSpec: "True"
  fullName: NRules.Fluent.IRuleTypeScanner.PrivateTypes
  nameWithType: IRuleTypeScanner.PrivateTypes
- uid: NRules.Fluent.IRuleTypeScanner.Type(System.Type[])
  name: Type(params Type[])
  href: api/NRules.Fluent.IRuleTypeScanner.html#NRules_Fluent_IRuleTypeScanner_Type_System_Type___
  commentId: M:NRules.Fluent.IRuleTypeScanner.Type(System.Type[])
  name.vb: Type(ParamArray Type())
  fullName: NRules.Fluent.IRuleTypeScanner.Type(params System.Type[])
  fullName.vb: NRules.Fluent.IRuleTypeScanner.Type(ParamArray System.Type())
  nameWithType: IRuleTypeScanner.Type(params Type[])
  nameWithType.vb: IRuleTypeScanner.Type(ParamArray Type())
- uid: NRules.Fluent.IRuleTypeScanner.Type*
  name: Type
  href: api/NRules.Fluent.IRuleTypeScanner.html#NRules_Fluent_IRuleTypeScanner_Type_
  commentId: Overload:NRules.Fluent.IRuleTypeScanner.Type
  isSpec: "True"
  fullName: NRules.Fluent.IRuleTypeScanner.Type
  nameWithType: IRuleTypeScanner.Type
- uid: NRules.Fluent.RuleActivationException
  name: RuleActivationException
  href: api/NRules.Fluent.RuleActivationException.html
  commentId: T:NRules.Fluent.RuleActivationException
  fullName: NRules.Fluent.RuleActivationException
  nameWithType: RuleActivationException
- uid: NRules.Fluent.RuleActivationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: RuleActivationException(SerializationInfo, StreamingContext)
  href: api/NRules.Fluent.RuleActivationException.html#NRules_Fluent_RuleActivationException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:NRules.Fluent.RuleActivationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name.vb: New(SerializationInfo, StreamingContext)
  fullName: NRules.Fluent.RuleActivationException.RuleActivationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  fullName.vb: NRules.Fluent.RuleActivationException.New(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: RuleActivationException.RuleActivationException(SerializationInfo, StreamingContext)
  nameWithType.vb: RuleActivationException.New(SerializationInfo, StreamingContext)
- uid: NRules.Fluent.RuleActivationException.#ctor*
  name: RuleActivationException
  href: api/NRules.Fluent.RuleActivationException.html#NRules_Fluent_RuleActivationException__ctor_
  commentId: Overload:NRules.Fluent.RuleActivationException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Fluent.RuleActivationException.RuleActivationException
  fullName.vb: NRules.Fluent.RuleActivationException.New
  nameWithType: RuleActivationException.RuleActivationException
  nameWithType.vb: RuleActivationException.New
- uid: NRules.Fluent.RuleActivationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData(SerializationInfo, StreamingContext)
  href: api/NRules.Fluent.RuleActivationException.html#NRules_Fluent_RuleActivationException_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:NRules.Fluent.RuleActivationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: NRules.Fluent.RuleActivationException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: RuleActivationException.GetObjectData(SerializationInfo, StreamingContext)
- uid: NRules.Fluent.RuleActivationException.GetObjectData*
  name: GetObjectData
  href: api/NRules.Fluent.RuleActivationException.html#NRules_Fluent_RuleActivationException_GetObjectData_
  commentId: Overload:NRules.Fluent.RuleActivationException.GetObjectData
  isSpec: "True"
  fullName: NRules.Fluent.RuleActivationException.GetObjectData
  nameWithType: RuleActivationException.GetObjectData
- uid: NRules.Fluent.RuleActivationException.Message
  name: Message
  href: api/NRules.Fluent.RuleActivationException.html#NRules_Fluent_RuleActivationException_Message
  commentId: P:NRules.Fluent.RuleActivationException.Message
  fullName: NRules.Fluent.RuleActivationException.Message
  nameWithType: RuleActivationException.Message
- uid: NRules.Fluent.RuleActivationException.Message*
  name: Message
  href: api/NRules.Fluent.RuleActivationException.html#NRules_Fluent_RuleActivationException_Message_
  commentId: Overload:NRules.Fluent.RuleActivationException.Message
  isSpec: "True"
  fullName: NRules.Fluent.RuleActivationException.Message
  nameWithType: RuleActivationException.Message
- uid: NRules.Fluent.RuleActivationException.RuleType
  name: RuleType
  href: api/NRules.Fluent.RuleActivationException.html#NRules_Fluent_RuleActivationException_RuleType
  commentId: P:NRules.Fluent.RuleActivationException.RuleType
  fullName: NRules.Fluent.RuleActivationException.RuleType
  nameWithType: RuleActivationException.RuleType
- uid: NRules.Fluent.RuleActivationException.RuleType*
  name: RuleType
  href: api/NRules.Fluent.RuleActivationException.html#NRules_Fluent_RuleActivationException_RuleType_
  commentId: Overload:NRules.Fluent.RuleActivationException.RuleType
  isSpec: "True"
  fullName: NRules.Fluent.RuleActivationException.RuleType
  nameWithType: RuleActivationException.RuleType
- uid: NRules.Fluent.RuleActivationException.RuleTypeName
  name: RuleTypeName
  href: api/NRules.Fluent.RuleActivationException.html#NRules_Fluent_RuleActivationException_RuleTypeName
  commentId: P:NRules.Fluent.RuleActivationException.RuleTypeName
  fullName: NRules.Fluent.RuleActivationException.RuleTypeName
  nameWithType: RuleActivationException.RuleTypeName
- uid: NRules.Fluent.RuleActivationException.RuleTypeName*
  name: RuleTypeName
  href: api/NRules.Fluent.RuleActivationException.html#NRules_Fluent_RuleActivationException_RuleTypeName_
  commentId: Overload:NRules.Fluent.RuleActivationException.RuleTypeName
  isSpec: "True"
  fullName: NRules.Fluent.RuleActivationException.RuleTypeName
  nameWithType: RuleActivationException.RuleTypeName
- uid: NRules.Fluent.RuleDefinitionException
  name: RuleDefinitionException
  href: api/NRules.Fluent.RuleDefinitionException.html
  commentId: T:NRules.Fluent.RuleDefinitionException
  fullName: NRules.Fluent.RuleDefinitionException
  nameWithType: RuleDefinitionException
- uid: NRules.Fluent.RuleDefinitionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: RuleDefinitionException(SerializationInfo, StreamingContext)
  href: api/NRules.Fluent.RuleDefinitionException.html#NRules_Fluent_RuleDefinitionException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:NRules.Fluent.RuleDefinitionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name.vb: New(SerializationInfo, StreamingContext)
  fullName: NRules.Fluent.RuleDefinitionException.RuleDefinitionException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  fullName.vb: NRules.Fluent.RuleDefinitionException.New(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: RuleDefinitionException.RuleDefinitionException(SerializationInfo, StreamingContext)
  nameWithType.vb: RuleDefinitionException.New(SerializationInfo, StreamingContext)
- uid: NRules.Fluent.RuleDefinitionException.#ctor*
  name: RuleDefinitionException
  href: api/NRules.Fluent.RuleDefinitionException.html#NRules_Fluent_RuleDefinitionException__ctor_
  commentId: Overload:NRules.Fluent.RuleDefinitionException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Fluent.RuleDefinitionException.RuleDefinitionException
  fullName.vb: NRules.Fluent.RuleDefinitionException.New
  nameWithType: RuleDefinitionException.RuleDefinitionException
  nameWithType.vb: RuleDefinitionException.New
- uid: NRules.Fluent.RuleDefinitionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData(SerializationInfo, StreamingContext)
  href: api/NRules.Fluent.RuleDefinitionException.html#NRules_Fluent_RuleDefinitionException_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:NRules.Fluent.RuleDefinitionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: NRules.Fluent.RuleDefinitionException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: RuleDefinitionException.GetObjectData(SerializationInfo, StreamingContext)
- uid: NRules.Fluent.RuleDefinitionException.GetObjectData*
  name: GetObjectData
  href: api/NRules.Fluent.RuleDefinitionException.html#NRules_Fluent_RuleDefinitionException_GetObjectData_
  commentId: Overload:NRules.Fluent.RuleDefinitionException.GetObjectData
  isSpec: "True"
  fullName: NRules.Fluent.RuleDefinitionException.GetObjectData
  nameWithType: RuleDefinitionException.GetObjectData
- uid: NRules.Fluent.RuleDefinitionException.Message
  name: Message
  href: api/NRules.Fluent.RuleDefinitionException.html#NRules_Fluent_RuleDefinitionException_Message
  commentId: P:NRules.Fluent.RuleDefinitionException.Message
  fullName: NRules.Fluent.RuleDefinitionException.Message
  nameWithType: RuleDefinitionException.Message
- uid: NRules.Fluent.RuleDefinitionException.Message*
  name: Message
  href: api/NRules.Fluent.RuleDefinitionException.html#NRules_Fluent_RuleDefinitionException_Message_
  commentId: Overload:NRules.Fluent.RuleDefinitionException.Message
  isSpec: "True"
  fullName: NRules.Fluent.RuleDefinitionException.Message
  nameWithType: RuleDefinitionException.Message
- uid: NRules.Fluent.RuleDefinitionException.RuleType
  name: RuleType
  href: api/NRules.Fluent.RuleDefinitionException.html#NRules_Fluent_RuleDefinitionException_RuleType
  commentId: P:NRules.Fluent.RuleDefinitionException.RuleType
  fullName: NRules.Fluent.RuleDefinitionException.RuleType
  nameWithType: RuleDefinitionException.RuleType
- uid: NRules.Fluent.RuleDefinitionException.RuleType*
  name: RuleType
  href: api/NRules.Fluent.RuleDefinitionException.html#NRules_Fluent_RuleDefinitionException_RuleType_
  commentId: Overload:NRules.Fluent.RuleDefinitionException.RuleType
  isSpec: "True"
  fullName: NRules.Fluent.RuleDefinitionException.RuleType
  nameWithType: RuleDefinitionException.RuleType
- uid: NRules.Fluent.RuleDefinitionException.RuleTypeName
  name: RuleTypeName
  href: api/NRules.Fluent.RuleDefinitionException.html#NRules_Fluent_RuleDefinitionException_RuleTypeName
  commentId: P:NRules.Fluent.RuleDefinitionException.RuleTypeName
  fullName: NRules.Fluent.RuleDefinitionException.RuleTypeName
  nameWithType: RuleDefinitionException.RuleTypeName
- uid: NRules.Fluent.RuleDefinitionException.RuleTypeName*
  name: RuleTypeName
  href: api/NRules.Fluent.RuleDefinitionException.html#NRules_Fluent_RuleDefinitionException_RuleTypeName_
  commentId: Overload:NRules.Fluent.RuleDefinitionException.RuleTypeName
  isSpec: "True"
  fullName: NRules.Fluent.RuleDefinitionException.RuleTypeName
  nameWithType: RuleDefinitionException.RuleTypeName
- uid: NRules.Fluent.RuleDefinitionFactory
  name: RuleDefinitionFactory
  href: api/NRules.Fluent.RuleDefinitionFactory.html
  commentId: T:NRules.Fluent.RuleDefinitionFactory
  fullName: NRules.Fluent.RuleDefinitionFactory
  nameWithType: RuleDefinitionFactory
- uid: NRules.Fluent.RuleDefinitionFactory.Create(NRules.Fluent.Dsl.Rule)
  name: Create(Rule)
  href: api/NRules.Fluent.RuleDefinitionFactory.html#NRules_Fluent_RuleDefinitionFactory_Create_NRules_Fluent_Dsl_Rule_
  commentId: M:NRules.Fluent.RuleDefinitionFactory.Create(NRules.Fluent.Dsl.Rule)
  fullName: NRules.Fluent.RuleDefinitionFactory.Create(NRules.Fluent.Dsl.Rule)
  nameWithType: RuleDefinitionFactory.Create(Rule)
- uid: NRules.Fluent.RuleDefinitionFactory.Create(System.Collections.Generic.IEnumerable{NRules.Fluent.Dsl.Rule})
  name: Create(IEnumerable<Rule>)
  href: api/NRules.Fluent.RuleDefinitionFactory.html#NRules_Fluent_RuleDefinitionFactory_Create_System_Collections_Generic_IEnumerable_NRules_Fluent_Dsl_Rule__
  commentId: M:NRules.Fluent.RuleDefinitionFactory.Create(System.Collections.Generic.IEnumerable{NRules.Fluent.Dsl.Rule})
  name.vb: Create(IEnumerable(Of Rule))
  fullName: NRules.Fluent.RuleDefinitionFactory.Create(System.Collections.Generic.IEnumerable<NRules.Fluent.Dsl.Rule>)
  fullName.vb: NRules.Fluent.RuleDefinitionFactory.Create(System.Collections.Generic.IEnumerable(Of NRules.Fluent.Dsl.Rule))
  nameWithType: RuleDefinitionFactory.Create(IEnumerable<Rule>)
  nameWithType.vb: RuleDefinitionFactory.Create(IEnumerable(Of Rule))
- uid: NRules.Fluent.RuleDefinitionFactory.Create*
  name: Create
  href: api/NRules.Fluent.RuleDefinitionFactory.html#NRules_Fluent_RuleDefinitionFactory_Create_
  commentId: Overload:NRules.Fluent.RuleDefinitionFactory.Create
  isSpec: "True"
  fullName: NRules.Fluent.RuleDefinitionFactory.Create
  nameWithType: RuleDefinitionFactory.Create
- uid: NRules.Fluent.RuleMetadata
  name: RuleMetadata
  href: api/NRules.Fluent.RuleMetadata.html
  commentId: T:NRules.Fluent.RuleMetadata
  fullName: NRules.Fluent.RuleMetadata
  nameWithType: RuleMetadata
- uid: NRules.Fluent.RuleMetadata.#ctor(System.Type)
  name: RuleMetadata(Type)
  href: api/NRules.Fluent.RuleMetadata.html#NRules_Fluent_RuleMetadata__ctor_System_Type_
  commentId: M:NRules.Fluent.RuleMetadata.#ctor(System.Type)
  name.vb: New(Type)
  fullName: NRules.Fluent.RuleMetadata.RuleMetadata(System.Type)
  fullName.vb: NRules.Fluent.RuleMetadata.New(System.Type)
  nameWithType: RuleMetadata.RuleMetadata(Type)
  nameWithType.vb: RuleMetadata.New(Type)
- uid: NRules.Fluent.RuleMetadata.#ctor*
  name: RuleMetadata
  href: api/NRules.Fluent.RuleMetadata.html#NRules_Fluent_RuleMetadata__ctor_
  commentId: Overload:NRules.Fluent.RuleMetadata.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Fluent.RuleMetadata.RuleMetadata
  fullName.vb: NRules.Fluent.RuleMetadata.New
  nameWithType: RuleMetadata.RuleMetadata
  nameWithType.vb: RuleMetadata.New
- uid: NRules.Fluent.RuleMetadata.Description
  name: Description
  href: api/NRules.Fluent.RuleMetadata.html#NRules_Fluent_RuleMetadata_Description
  commentId: P:NRules.Fluent.RuleMetadata.Description
  fullName: NRules.Fluent.RuleMetadata.Description
  nameWithType: RuleMetadata.Description
- uid: NRules.Fluent.RuleMetadata.Description*
  name: Description
  href: api/NRules.Fluent.RuleMetadata.html#NRules_Fluent_RuleMetadata_Description_
  commentId: Overload:NRules.Fluent.RuleMetadata.Description
  isSpec: "True"
  fullName: NRules.Fluent.RuleMetadata.Description
  nameWithType: RuleMetadata.Description
- uid: NRules.Fluent.RuleMetadata.Name
  name: Name
  href: api/NRules.Fluent.RuleMetadata.html#NRules_Fluent_RuleMetadata_Name
  commentId: P:NRules.Fluent.RuleMetadata.Name
  fullName: NRules.Fluent.RuleMetadata.Name
  nameWithType: RuleMetadata.Name
- uid: NRules.Fluent.RuleMetadata.Name*
  name: Name
  href: api/NRules.Fluent.RuleMetadata.html#NRules_Fluent_RuleMetadata_Name_
  commentId: Overload:NRules.Fluent.RuleMetadata.Name
  isSpec: "True"
  fullName: NRules.Fluent.RuleMetadata.Name
  nameWithType: RuleMetadata.Name
- uid: NRules.Fluent.RuleMetadata.Priority
  name: Priority
  href: api/NRules.Fluent.RuleMetadata.html#NRules_Fluent_RuleMetadata_Priority
  commentId: P:NRules.Fluent.RuleMetadata.Priority
  fullName: NRules.Fluent.RuleMetadata.Priority
  nameWithType: RuleMetadata.Priority
- uid: NRules.Fluent.RuleMetadata.Priority*
  name: Priority
  href: api/NRules.Fluent.RuleMetadata.html#NRules_Fluent_RuleMetadata_Priority_
  commentId: Overload:NRules.Fluent.RuleMetadata.Priority
  isSpec: "True"
  fullName: NRules.Fluent.RuleMetadata.Priority
  nameWithType: RuleMetadata.Priority
- uid: NRules.Fluent.RuleMetadata.Repeatability
  name: Repeatability
  href: api/NRules.Fluent.RuleMetadata.html#NRules_Fluent_RuleMetadata_Repeatability
  commentId: P:NRules.Fluent.RuleMetadata.Repeatability
  fullName: NRules.Fluent.RuleMetadata.Repeatability
  nameWithType: RuleMetadata.Repeatability
- uid: NRules.Fluent.RuleMetadata.Repeatability*
  name: Repeatability
  href: api/NRules.Fluent.RuleMetadata.html#NRules_Fluent_RuleMetadata_Repeatability_
  commentId: Overload:NRules.Fluent.RuleMetadata.Repeatability
  isSpec: "True"
  fullName: NRules.Fluent.RuleMetadata.Repeatability
  nameWithType: RuleMetadata.Repeatability
- uid: NRules.Fluent.RuleMetadata.RuleType
  name: RuleType
  href: api/NRules.Fluent.RuleMetadata.html#NRules_Fluent_RuleMetadata_RuleType
  commentId: P:NRules.Fluent.RuleMetadata.RuleType
  fullName: NRules.Fluent.RuleMetadata.RuleType
  nameWithType: RuleMetadata.RuleType
- uid: NRules.Fluent.RuleMetadata.RuleType*
  name: RuleType
  href: api/NRules.Fluent.RuleMetadata.html#NRules_Fluent_RuleMetadata_RuleType_
  commentId: Overload:NRules.Fluent.RuleMetadata.RuleType
  isSpec: "True"
  fullName: NRules.Fluent.RuleMetadata.RuleType
  nameWithType: RuleMetadata.RuleType
- uid: NRules.Fluent.RuleMetadata.Tags
  name: Tags
  href: api/NRules.Fluent.RuleMetadata.html#NRules_Fluent_RuleMetadata_Tags
  commentId: P:NRules.Fluent.RuleMetadata.Tags
  fullName: NRules.Fluent.RuleMetadata.Tags
  nameWithType: RuleMetadata.Tags
- uid: NRules.Fluent.RuleMetadata.Tags*
  name: Tags
  href: api/NRules.Fluent.RuleMetadata.html#NRules_Fluent_RuleMetadata_Tags_
  commentId: Overload:NRules.Fluent.RuleMetadata.Tags
  isSpec: "True"
  fullName: NRules.Fluent.RuleMetadata.Tags
  nameWithType: RuleMetadata.Tags
- uid: NRules.Fluent.RuleMetadataExtensions
  name: RuleMetadataExtensions
  href: api/NRules.Fluent.RuleMetadataExtensions.html
  commentId: T:NRules.Fluent.RuleMetadataExtensions
  fullName: NRules.Fluent.RuleMetadataExtensions
  nameWithType: RuleMetadataExtensions
- uid: NRules.Fluent.RuleMetadataExtensions.IsTagged(NRules.Fluent.IRuleMetadata,System.String)
  name: IsTagged(IRuleMetadata, string)
  href: api/NRules.Fluent.RuleMetadataExtensions.html#NRules_Fluent_RuleMetadataExtensions_IsTagged_NRules_Fluent_IRuleMetadata_System_String_
  commentId: M:NRules.Fluent.RuleMetadataExtensions.IsTagged(NRules.Fluent.IRuleMetadata,System.String)
  name.vb: IsTagged(IRuleMetadata, String)
  fullName: NRules.Fluent.RuleMetadataExtensions.IsTagged(NRules.Fluent.IRuleMetadata, string)
  fullName.vb: NRules.Fluent.RuleMetadataExtensions.IsTagged(NRules.Fluent.IRuleMetadata, String)
  nameWithType: RuleMetadataExtensions.IsTagged(IRuleMetadata, string)
  nameWithType.vb: RuleMetadataExtensions.IsTagged(IRuleMetadata, String)
- uid: NRules.Fluent.RuleMetadataExtensions.IsTagged*
  name: IsTagged
  href: api/NRules.Fluent.RuleMetadataExtensions.html#NRules_Fluent_RuleMetadataExtensions_IsTagged_
  commentId: Overload:NRules.Fluent.RuleMetadataExtensions.IsTagged
  isSpec: "True"
  fullName: NRules.Fluent.RuleMetadataExtensions.IsTagged
  nameWithType: RuleMetadataExtensions.IsTagged
- uid: NRules.Fluent.RuleProperties
  name: RuleProperties
  href: api/NRules.Fluent.RuleProperties.html
  commentId: T:NRules.Fluent.RuleProperties
  fullName: NRules.Fluent.RuleProperties
  nameWithType: RuleProperties
- uid: NRules.Fluent.RuleProperties.ClrType
  name: ClrType
  href: api/NRules.Fluent.RuleProperties.html#NRules_Fluent_RuleProperties_ClrType
  commentId: F:NRules.Fluent.RuleProperties.ClrType
  fullName: NRules.Fluent.RuleProperties.ClrType
  nameWithType: RuleProperties.ClrType
- uid: NRules.Fluent.RuleRepository
  name: RuleRepository
  href: api/NRules.Fluent.RuleRepository.html
  commentId: T:NRules.Fluent.RuleRepository
  fullName: NRules.Fluent.RuleRepository
  nameWithType: RuleRepository
- uid: NRules.Fluent.RuleRepository.#ctor
  name: RuleRepository()
  href: api/NRules.Fluent.RuleRepository.html#NRules_Fluent_RuleRepository__ctor
  commentId: M:NRules.Fluent.RuleRepository.#ctor
  name.vb: New()
  fullName: NRules.Fluent.RuleRepository.RuleRepository()
  fullName.vb: NRules.Fluent.RuleRepository.New()
  nameWithType: RuleRepository.RuleRepository()
  nameWithType.vb: RuleRepository.New()
- uid: NRules.Fluent.RuleRepository.#ctor(NRules.Fluent.IRuleActivator)
  name: RuleRepository(IRuleActivator)
  href: api/NRules.Fluent.RuleRepository.html#NRules_Fluent_RuleRepository__ctor_NRules_Fluent_IRuleActivator_
  commentId: M:NRules.Fluent.RuleRepository.#ctor(NRules.Fluent.IRuleActivator)
  name.vb: New(IRuleActivator)
  fullName: NRules.Fluent.RuleRepository.RuleRepository(NRules.Fluent.IRuleActivator)
  fullName.vb: NRules.Fluent.RuleRepository.New(NRules.Fluent.IRuleActivator)
  nameWithType: RuleRepository.RuleRepository(IRuleActivator)
  nameWithType.vb: RuleRepository.New(IRuleActivator)
- uid: NRules.Fluent.RuleRepository.#ctor*
  name: RuleRepository
  href: api/NRules.Fluent.RuleRepository.html#NRules_Fluent_RuleRepository__ctor_
  commentId: Overload:NRules.Fluent.RuleRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Fluent.RuleRepository.RuleRepository
  fullName.vb: NRules.Fluent.RuleRepository.New
  nameWithType: RuleRepository.RuleRepository
  nameWithType.vb: RuleRepository.New
- uid: NRules.Fluent.RuleRepository.Activator
  name: Activator
  href: api/NRules.Fluent.RuleRepository.html#NRules_Fluent_RuleRepository_Activator
  commentId: P:NRules.Fluent.RuleRepository.Activator
  fullName: NRules.Fluent.RuleRepository.Activator
  nameWithType: RuleRepository.Activator
- uid: NRules.Fluent.RuleRepository.Activator*
  name: Activator
  href: api/NRules.Fluent.RuleRepository.html#NRules_Fluent_RuleRepository_Activator_
  commentId: Overload:NRules.Fluent.RuleRepository.Activator
  isSpec: "True"
  fullName: NRules.Fluent.RuleRepository.Activator
  nameWithType: RuleRepository.Activator
- uid: NRules.Fluent.RuleRepository.Add(NRules.RuleModel.IRuleSet)
  name: Add(IRuleSet)
  href: api/NRules.Fluent.RuleRepository.html#NRules_Fluent_RuleRepository_Add_NRules_RuleModel_IRuleSet_
  commentId: M:NRules.Fluent.RuleRepository.Add(NRules.RuleModel.IRuleSet)
  fullName: NRules.Fluent.RuleRepository.Add(NRules.RuleModel.IRuleSet)
  nameWithType: RuleRepository.Add(IRuleSet)
- uid: NRules.Fluent.RuleRepository.Add*
  name: Add
  href: api/NRules.Fluent.RuleRepository.html#NRules_Fluent_RuleRepository_Add_
  commentId: Overload:NRules.Fluent.RuleRepository.Add
  isSpec: "True"
  fullName: NRules.Fluent.RuleRepository.Add
  nameWithType: RuleRepository.Add
- uid: NRules.Fluent.RuleRepository.GetRuleSets
  name: GetRuleSets()
  href: api/NRules.Fluent.RuleRepository.html#NRules_Fluent_RuleRepository_GetRuleSets
  commentId: M:NRules.Fluent.RuleRepository.GetRuleSets
  fullName: NRules.Fluent.RuleRepository.GetRuleSets()
  nameWithType: RuleRepository.GetRuleSets()
- uid: NRules.Fluent.RuleRepository.GetRuleSets*
  name: GetRuleSets
  href: api/NRules.Fluent.RuleRepository.html#NRules_Fluent_RuleRepository_GetRuleSets_
  commentId: Overload:NRules.Fluent.RuleRepository.GetRuleSets
  isSpec: "True"
  fullName: NRules.Fluent.RuleRepository.GetRuleSets
  nameWithType: RuleRepository.GetRuleSets
- uid: NRules.Fluent.RuleRepository.Load(System.Action{NRules.Fluent.IRuleLoadSpec})
  name: Load(Action<IRuleLoadSpec>)
  href: api/NRules.Fluent.RuleRepository.html#NRules_Fluent_RuleRepository_Load_System_Action_NRules_Fluent_IRuleLoadSpec__
  commentId: M:NRules.Fluent.RuleRepository.Load(System.Action{NRules.Fluent.IRuleLoadSpec})
  name.vb: Load(Action(Of IRuleLoadSpec))
  fullName: NRules.Fluent.RuleRepository.Load(System.Action<NRules.Fluent.IRuleLoadSpec>)
  fullName.vb: NRules.Fluent.RuleRepository.Load(System.Action(Of NRules.Fluent.IRuleLoadSpec))
  nameWithType: RuleRepository.Load(Action<IRuleLoadSpec>)
  nameWithType.vb: RuleRepository.Load(Action(Of IRuleLoadSpec))
- uid: NRules.Fluent.RuleRepository.Load*
  name: Load
  href: api/NRules.Fluent.RuleRepository.html#NRules_Fluent_RuleRepository_Load_
  commentId: Overload:NRules.Fluent.RuleRepository.Load
  isSpec: "True"
  fullName: NRules.Fluent.RuleRepository.Load
  nameWithType: RuleRepository.Load
- uid: NRules.Fluent.RuleTypeScanner
  name: RuleTypeScanner
  href: api/NRules.Fluent.RuleTypeScanner.html
  commentId: T:NRules.Fluent.RuleTypeScanner
  fullName: NRules.Fluent.RuleTypeScanner
  nameWithType: RuleTypeScanner
- uid: NRules.Fluent.RuleTypeScanner.Assembly(System.Reflection.Assembly[])
  name: Assembly(params Assembly[])
  href: api/NRules.Fluent.RuleTypeScanner.html#NRules_Fluent_RuleTypeScanner_Assembly_System_Reflection_Assembly___
  commentId: M:NRules.Fluent.RuleTypeScanner.Assembly(System.Reflection.Assembly[])
  name.vb: Assembly(ParamArray Assembly())
  fullName: NRules.Fluent.RuleTypeScanner.Assembly(params System.Reflection.Assembly[])
  fullName.vb: NRules.Fluent.RuleTypeScanner.Assembly(ParamArray System.Reflection.Assembly())
  nameWithType: RuleTypeScanner.Assembly(params Assembly[])
  nameWithType.vb: RuleTypeScanner.Assembly(ParamArray Assembly())
- uid: NRules.Fluent.RuleTypeScanner.Assembly*
  name: Assembly
  href: api/NRules.Fluent.RuleTypeScanner.html#NRules_Fluent_RuleTypeScanner_Assembly_
  commentId: Overload:NRules.Fluent.RuleTypeScanner.Assembly
  isSpec: "True"
  fullName: NRules.Fluent.RuleTypeScanner.Assembly
  nameWithType: RuleTypeScanner.Assembly
- uid: NRules.Fluent.RuleTypeScanner.AssemblyOf(System.Type)
  name: AssemblyOf(Type)
  href: api/NRules.Fluent.RuleTypeScanner.html#NRules_Fluent_RuleTypeScanner_AssemblyOf_System_Type_
  commentId: M:NRules.Fluent.RuleTypeScanner.AssemblyOf(System.Type)
  fullName: NRules.Fluent.RuleTypeScanner.AssemblyOf(System.Type)
  nameWithType: RuleTypeScanner.AssemblyOf(Type)
- uid: NRules.Fluent.RuleTypeScanner.AssemblyOf*
  name: AssemblyOf
  href: api/NRules.Fluent.RuleTypeScanner.html#NRules_Fluent_RuleTypeScanner_AssemblyOf_
  commentId: Overload:NRules.Fluent.RuleTypeScanner.AssemblyOf
  isSpec: "True"
  fullName: NRules.Fluent.RuleTypeScanner.AssemblyOf
  nameWithType: RuleTypeScanner.AssemblyOf
- uid: NRules.Fluent.RuleTypeScanner.AssemblyOf``1
  name: AssemblyOf<T>()
  href: api/NRules.Fluent.RuleTypeScanner.html#NRules_Fluent_RuleTypeScanner_AssemblyOf__1
  commentId: M:NRules.Fluent.RuleTypeScanner.AssemblyOf``1
  name.vb: AssemblyOf(Of T)()
  fullName: NRules.Fluent.RuleTypeScanner.AssemblyOf<T>()
  fullName.vb: NRules.Fluent.RuleTypeScanner.AssemblyOf(Of T)()
  nameWithType: RuleTypeScanner.AssemblyOf<T>()
  nameWithType.vb: RuleTypeScanner.AssemblyOf(Of T)()
- uid: NRules.Fluent.RuleTypeScanner.GetRuleTypes
  name: GetRuleTypes()
  href: api/NRules.Fluent.RuleTypeScanner.html#NRules_Fluent_RuleTypeScanner_GetRuleTypes
  commentId: M:NRules.Fluent.RuleTypeScanner.GetRuleTypes
  fullName: NRules.Fluent.RuleTypeScanner.GetRuleTypes()
  nameWithType: RuleTypeScanner.GetRuleTypes()
- uid: NRules.Fluent.RuleTypeScanner.GetRuleTypes*
  name: GetRuleTypes
  href: api/NRules.Fluent.RuleTypeScanner.html#NRules_Fluent_RuleTypeScanner_GetRuleTypes_
  commentId: Overload:NRules.Fluent.RuleTypeScanner.GetRuleTypes
  isSpec: "True"
  fullName: NRules.Fluent.RuleTypeScanner.GetRuleTypes
  nameWithType: RuleTypeScanner.GetRuleTypes
- uid: NRules.Fluent.RuleTypeScanner.IsRuleType(System.Type)
  name: IsRuleType(Type)
  href: api/NRules.Fluent.RuleTypeScanner.html#NRules_Fluent_RuleTypeScanner_IsRuleType_System_Type_
  commentId: M:NRules.Fluent.RuleTypeScanner.IsRuleType(System.Type)
  fullName: NRules.Fluent.RuleTypeScanner.IsRuleType(System.Type)
  nameWithType: RuleTypeScanner.IsRuleType(Type)
- uid: NRules.Fluent.RuleTypeScanner.IsRuleType*
  name: IsRuleType
  href: api/NRules.Fluent.RuleTypeScanner.html#NRules_Fluent_RuleTypeScanner_IsRuleType_
  commentId: Overload:NRules.Fluent.RuleTypeScanner.IsRuleType
  isSpec: "True"
  fullName: NRules.Fluent.RuleTypeScanner.IsRuleType
  nameWithType: RuleTypeScanner.IsRuleType
- uid: NRules.Fluent.RuleTypeScanner.NestedTypes(System.Boolean)
  name: NestedTypes(bool)
  href: api/NRules.Fluent.RuleTypeScanner.html#NRules_Fluent_RuleTypeScanner_NestedTypes_System_Boolean_
  commentId: M:NRules.Fluent.RuleTypeScanner.NestedTypes(System.Boolean)
  name.vb: NestedTypes(Boolean)
  fullName: NRules.Fluent.RuleTypeScanner.NestedTypes(bool)
  fullName.vb: NRules.Fluent.RuleTypeScanner.NestedTypes(Boolean)
  nameWithType: RuleTypeScanner.NestedTypes(bool)
  nameWithType.vb: RuleTypeScanner.NestedTypes(Boolean)
- uid: NRules.Fluent.RuleTypeScanner.NestedTypes*
  name: NestedTypes
  href: api/NRules.Fluent.RuleTypeScanner.html#NRules_Fluent_RuleTypeScanner_NestedTypes_
  commentId: Overload:NRules.Fluent.RuleTypeScanner.NestedTypes
  isSpec: "True"
  fullName: NRules.Fluent.RuleTypeScanner.NestedTypes
  nameWithType: RuleTypeScanner.NestedTypes
- uid: NRules.Fluent.RuleTypeScanner.PrivateTypes(System.Boolean)
  name: PrivateTypes(bool)
  href: api/NRules.Fluent.RuleTypeScanner.html#NRules_Fluent_RuleTypeScanner_PrivateTypes_System_Boolean_
  commentId: M:NRules.Fluent.RuleTypeScanner.PrivateTypes(System.Boolean)
  name.vb: PrivateTypes(Boolean)
  fullName: NRules.Fluent.RuleTypeScanner.PrivateTypes(bool)
  fullName.vb: NRules.Fluent.RuleTypeScanner.PrivateTypes(Boolean)
  nameWithType: RuleTypeScanner.PrivateTypes(bool)
  nameWithType.vb: RuleTypeScanner.PrivateTypes(Boolean)
- uid: NRules.Fluent.RuleTypeScanner.PrivateTypes*
  name: PrivateTypes
  href: api/NRules.Fluent.RuleTypeScanner.html#NRules_Fluent_RuleTypeScanner_PrivateTypes_
  commentId: Overload:NRules.Fluent.RuleTypeScanner.PrivateTypes
  isSpec: "True"
  fullName: NRules.Fluent.RuleTypeScanner.PrivateTypes
  nameWithType: RuleTypeScanner.PrivateTypes
- uid: NRules.Fluent.RuleTypeScanner.Type(System.Type[])
  name: Type(params Type[])
  href: api/NRules.Fluent.RuleTypeScanner.html#NRules_Fluent_RuleTypeScanner_Type_System_Type___
  commentId: M:NRules.Fluent.RuleTypeScanner.Type(System.Type[])
  name.vb: Type(ParamArray Type())
  fullName: NRules.Fluent.RuleTypeScanner.Type(params System.Type[])
  fullName.vb: NRules.Fluent.RuleTypeScanner.Type(ParamArray System.Type())
  nameWithType: RuleTypeScanner.Type(params Type[])
  nameWithType.vb: RuleTypeScanner.Type(ParamArray Type())
- uid: NRules.Fluent.RuleTypeScanner.Type*
  name: Type
  href: api/NRules.Fluent.RuleTypeScanner.html#NRules_Fluent_RuleTypeScanner_Type_
  commentId: Overload:NRules.Fluent.RuleTypeScanner.Type
  isSpec: "True"
  fullName: NRules.Fluent.RuleTypeScanner.Type
  nameWithType: RuleTypeScanner.Type
- uid: NRules.IAgenda
  name: IAgenda
  href: api/NRules.IAgenda.html
  commentId: T:NRules.IAgenda
  fullName: NRules.IAgenda
  nameWithType: IAgenda
- uid: NRules.IAgenda.AddFilter(NRules.AgendaFilters.IAgendaFilter)
  name: AddFilter(IAgendaFilter)
  href: api/NRules.IAgenda.html#NRules_IAgenda_AddFilter_NRules_AgendaFilters_IAgendaFilter_
  commentId: M:NRules.IAgenda.AddFilter(NRules.AgendaFilters.IAgendaFilter)
  fullName: NRules.IAgenda.AddFilter(NRules.AgendaFilters.IAgendaFilter)
  nameWithType: IAgenda.AddFilter(IAgendaFilter)
- uid: NRules.IAgenda.AddFilter(NRules.RuleModel.IRuleDefinition,NRules.AgendaFilters.IAgendaFilter)
  name: AddFilter(IRuleDefinition, IAgendaFilter)
  href: api/NRules.IAgenda.html#NRules_IAgenda_AddFilter_NRules_RuleModel_IRuleDefinition_NRules_AgendaFilters_IAgendaFilter_
  commentId: M:NRules.IAgenda.AddFilter(NRules.RuleModel.IRuleDefinition,NRules.AgendaFilters.IAgendaFilter)
  fullName: NRules.IAgenda.AddFilter(NRules.RuleModel.IRuleDefinition, NRules.AgendaFilters.IAgendaFilter)
  nameWithType: IAgenda.AddFilter(IRuleDefinition, IAgendaFilter)
- uid: NRules.IAgenda.AddFilter*
  name: AddFilter
  href: api/NRules.IAgenda.html#NRules_IAgenda_AddFilter_
  commentId: Overload:NRules.IAgenda.AddFilter
  isSpec: "True"
  fullName: NRules.IAgenda.AddFilter
  nameWithType: IAgenda.AddFilter
- uid: NRules.IAgenda.Clear
  name: Clear()
  href: api/NRules.IAgenda.html#NRules_IAgenda_Clear
  commentId: M:NRules.IAgenda.Clear
  fullName: NRules.IAgenda.Clear()
  nameWithType: IAgenda.Clear()
- uid: NRules.IAgenda.Clear*
  name: Clear
  href: api/NRules.IAgenda.html#NRules_IAgenda_Clear_
  commentId: Overload:NRules.IAgenda.Clear
  isSpec: "True"
  fullName: NRules.IAgenda.Clear
  nameWithType: IAgenda.Clear
- uid: NRules.IAgenda.IsEmpty
  name: IsEmpty
  href: api/NRules.IAgenda.html#NRules_IAgenda_IsEmpty
  commentId: P:NRules.IAgenda.IsEmpty
  fullName: NRules.IAgenda.IsEmpty
  nameWithType: IAgenda.IsEmpty
- uid: NRules.IAgenda.IsEmpty*
  name: IsEmpty
  href: api/NRules.IAgenda.html#NRules_IAgenda_IsEmpty_
  commentId: Overload:NRules.IAgenda.IsEmpty
  isSpec: "True"
  fullName: NRules.IAgenda.IsEmpty
  nameWithType: IAgenda.IsEmpty
- uid: NRules.IAgenda.Peek
  name: Peek()
  href: api/NRules.IAgenda.html#NRules_IAgenda_Peek
  commentId: M:NRules.IAgenda.Peek
  fullName: NRules.IAgenda.Peek()
  nameWithType: IAgenda.Peek()
- uid: NRules.IAgenda.Peek*
  name: Peek
  href: api/NRules.IAgenda.html#NRules_IAgenda_Peek_
  commentId: Overload:NRules.IAgenda.Peek
  isSpec: "True"
  fullName: NRules.IAgenda.Peek
  nameWithType: IAgenda.Peek
- uid: NRules.IFactResult
  name: IFactResult
  href: api/NRules.IFactResult.html
  commentId: T:NRules.IFactResult
  fullName: NRules.IFactResult
  nameWithType: IFactResult
- uid: NRules.IFactResult.Failed
  name: Failed
  href: api/NRules.IFactResult.html#NRules_IFactResult_Failed
  commentId: P:NRules.IFactResult.Failed
  fullName: NRules.IFactResult.Failed
  nameWithType: IFactResult.Failed
- uid: NRules.IFactResult.Failed*
  name: Failed
  href: api/NRules.IFactResult.html#NRules_IFactResult_Failed_
  commentId: Overload:NRules.IFactResult.Failed
  isSpec: "True"
  fullName: NRules.IFactResult.Failed
  nameWithType: IFactResult.Failed
- uid: NRules.IFactResult.FailedCount
  name: FailedCount
  href: api/NRules.IFactResult.html#NRules_IFactResult_FailedCount
  commentId: P:NRules.IFactResult.FailedCount
  fullName: NRules.IFactResult.FailedCount
  nameWithType: IFactResult.FailedCount
- uid: NRules.IFactResult.FailedCount*
  name: FailedCount
  href: api/NRules.IFactResult.html#NRules_IFactResult_FailedCount_
  commentId: Overload:NRules.IFactResult.FailedCount
  isSpec: "True"
  fullName: NRules.IFactResult.FailedCount
  nameWithType: IFactResult.FailedCount
- uid: NRules.ILinkedFactSet
  name: ILinkedFactSet
  href: api/NRules.ILinkedFactSet.html
  commentId: T:NRules.ILinkedFactSet
  fullName: NRules.ILinkedFactSet
  nameWithType: ILinkedFactSet
- uid: NRules.ILinkedFactSet.Action
  name: Action
  href: api/NRules.ILinkedFactSet.html#NRules_ILinkedFactSet_Action
  commentId: P:NRules.ILinkedFactSet.Action
  fullName: NRules.ILinkedFactSet.Action
  nameWithType: ILinkedFactSet.Action
- uid: NRules.ILinkedFactSet.Action*
  name: Action
  href: api/NRules.ILinkedFactSet.html#NRules_ILinkedFactSet_Action_
  commentId: Overload:NRules.ILinkedFactSet.Action
  isSpec: "True"
  fullName: NRules.ILinkedFactSet.Action
  nameWithType: ILinkedFactSet.Action
- uid: NRules.ILinkedFactSet.FactCount
  name: FactCount
  href: api/NRules.ILinkedFactSet.html#NRules_ILinkedFactSet_FactCount
  commentId: P:NRules.ILinkedFactSet.FactCount
  fullName: NRules.ILinkedFactSet.FactCount
  nameWithType: ILinkedFactSet.FactCount
- uid: NRules.ILinkedFactSet.FactCount*
  name: FactCount
  href: api/NRules.ILinkedFactSet.html#NRules_ILinkedFactSet_FactCount_
  commentId: Overload:NRules.ILinkedFactSet.FactCount
  isSpec: "True"
  fullName: NRules.ILinkedFactSet.FactCount
  nameWithType: ILinkedFactSet.FactCount
- uid: NRules.ILinkedFactSet.Facts
  name: Facts
  href: api/NRules.ILinkedFactSet.html#NRules_ILinkedFactSet_Facts
  commentId: P:NRules.ILinkedFactSet.Facts
  fullName: NRules.ILinkedFactSet.Facts
  nameWithType: ILinkedFactSet.Facts
- uid: NRules.ILinkedFactSet.Facts*
  name: Facts
  href: api/NRules.ILinkedFactSet.html#NRules_ILinkedFactSet_Facts_
  commentId: Overload:NRules.ILinkedFactSet.Facts
  isSpec: "True"
  fullName: NRules.ILinkedFactSet.Facts
  nameWithType: ILinkedFactSet.Facts
- uid: NRules.ILinkedFactSource
  name: ILinkedFactSource
  href: api/NRules.ILinkedFactSource.html
  commentId: T:NRules.ILinkedFactSource
  fullName: NRules.ILinkedFactSource
  nameWithType: ILinkedFactSource
- uid: NRules.ILinkedFactSource.Rule
  name: Rule
  href: api/NRules.ILinkedFactSource.html#NRules_ILinkedFactSource_Rule
  commentId: P:NRules.ILinkedFactSource.Rule
  fullName: NRules.ILinkedFactSource.Rule
  nameWithType: ILinkedFactSource.Rule
- uid: NRules.ILinkedFactSource.Rule*
  name: Rule
  href: api/NRules.ILinkedFactSource.html#NRules_ILinkedFactSource_Rule_
  commentId: Overload:NRules.ILinkedFactSource.Rule
  isSpec: "True"
  fullName: NRules.ILinkedFactSource.Rule
  nameWithType: ILinkedFactSource.Rule
- uid: NRules.ISession
  name: ISession
  href: api/NRules.ISession.html
  commentId: T:NRules.ISession
  fullName: NRules.ISession
  nameWithType: ISession
- uid: NRules.ISession.ActionInterceptor
  name: ActionInterceptor
  href: api/NRules.ISession.html#NRules_ISession_ActionInterceptor
  commentId: P:NRules.ISession.ActionInterceptor
  fullName: NRules.ISession.ActionInterceptor
  nameWithType: ISession.ActionInterceptor
- uid: NRules.ISession.ActionInterceptor*
  name: ActionInterceptor
  href: api/NRules.ISession.html#NRules_ISession_ActionInterceptor_
  commentId: Overload:NRules.ISession.ActionInterceptor
  isSpec: "True"
  fullName: NRules.ISession.ActionInterceptor
  nameWithType: ISession.ActionInterceptor
- uid: NRules.ISession.Agenda
  name: Agenda
  href: api/NRules.ISession.html#NRules_ISession_Agenda
  commentId: P:NRules.ISession.Agenda
  fullName: NRules.ISession.Agenda
  nameWithType: ISession.Agenda
- uid: NRules.ISession.Agenda*
  name: Agenda
  href: api/NRules.ISession.html#NRules_ISession_Agenda_
  commentId: Overload:NRules.ISession.Agenda
  isSpec: "True"
  fullName: NRules.ISession.Agenda
  nameWithType: ISession.Agenda
- uid: NRules.ISession.AutoPropagateLinkedFacts
  name: AutoPropagateLinkedFacts
  href: api/NRules.ISession.html#NRules_ISession_AutoPropagateLinkedFacts
  commentId: P:NRules.ISession.AutoPropagateLinkedFacts
  fullName: NRules.ISession.AutoPropagateLinkedFacts
  nameWithType: ISession.AutoPropagateLinkedFacts
- uid: NRules.ISession.AutoPropagateLinkedFacts*
  name: AutoPropagateLinkedFacts
  href: api/NRules.ISession.html#NRules_ISession_AutoPropagateLinkedFacts_
  commentId: Overload:NRules.ISession.AutoPropagateLinkedFacts
  isSpec: "True"
  fullName: NRules.ISession.AutoPropagateLinkedFacts
  nameWithType: ISession.AutoPropagateLinkedFacts
- uid: NRules.ISession.DependencyResolver
  name: DependencyResolver
  href: api/NRules.ISession.html#NRules_ISession_DependencyResolver
  commentId: P:NRules.ISession.DependencyResolver
  fullName: NRules.ISession.DependencyResolver
  nameWithType: ISession.DependencyResolver
- uid: NRules.ISession.DependencyResolver*
  name: DependencyResolver
  href: api/NRules.ISession.html#NRules_ISession_DependencyResolver_
  commentId: Overload:NRules.ISession.DependencyResolver
  isSpec: "True"
  fullName: NRules.ISession.DependencyResolver
  nameWithType: ISession.DependencyResolver
- uid: NRules.ISession.Events
  name: Events
  href: api/NRules.ISession.html#NRules_ISession_Events
  commentId: P:NRules.ISession.Events
  fullName: NRules.ISession.Events
  nameWithType: ISession.Events
- uid: NRules.ISession.Events*
  name: Events
  href: api/NRules.ISession.html#NRules_ISession_Events_
  commentId: Overload:NRules.ISession.Events
  isSpec: "True"
  fullName: NRules.ISession.Events
  nameWithType: ISession.Events
- uid: NRules.ISession.Fire
  name: Fire()
  href: api/NRules.ISession.html#NRules_ISession_Fire
  commentId: M:NRules.ISession.Fire
  fullName: NRules.ISession.Fire()
  nameWithType: ISession.Fire()
- uid: NRules.ISession.Fire(System.Int32)
  name: Fire(int)
  href: api/NRules.ISession.html#NRules_ISession_Fire_System_Int32_
  commentId: M:NRules.ISession.Fire(System.Int32)
  name.vb: Fire(Integer)
  fullName: NRules.ISession.Fire(int)
  fullName.vb: NRules.ISession.Fire(Integer)
  nameWithType: ISession.Fire(int)
  nameWithType.vb: ISession.Fire(Integer)
- uid: NRules.ISession.Fire(System.Int32,System.Threading.CancellationToken)
  name: Fire(int, CancellationToken)
  href: api/NRules.ISession.html#NRules_ISession_Fire_System_Int32_System_Threading_CancellationToken_
  commentId: M:NRules.ISession.Fire(System.Int32,System.Threading.CancellationToken)
  name.vb: Fire(Integer, CancellationToken)
  fullName: NRules.ISession.Fire(int, System.Threading.CancellationToken)
  fullName.vb: NRules.ISession.Fire(Integer, System.Threading.CancellationToken)
  nameWithType: ISession.Fire(int, CancellationToken)
  nameWithType.vb: ISession.Fire(Integer, CancellationToken)
- uid: NRules.ISession.Fire(System.Threading.CancellationToken)
  name: Fire(CancellationToken)
  href: api/NRules.ISession.html#NRules_ISession_Fire_System_Threading_CancellationToken_
  commentId: M:NRules.ISession.Fire(System.Threading.CancellationToken)
  fullName: NRules.ISession.Fire(System.Threading.CancellationToken)
  nameWithType: ISession.Fire(CancellationToken)
- uid: NRules.ISession.Fire*
  name: Fire
  href: api/NRules.ISession.html#NRules_ISession_Fire_
  commentId: Overload:NRules.ISession.Fire
  isSpec: "True"
  fullName: NRules.ISession.Fire
  nameWithType: ISession.Fire
- uid: NRules.ISession.Insert(System.Object)
  name: Insert(object)
  href: api/NRules.ISession.html#NRules_ISession_Insert_System_Object_
  commentId: M:NRules.ISession.Insert(System.Object)
  name.vb: Insert(Object)
  fullName: NRules.ISession.Insert(object)
  fullName.vb: NRules.ISession.Insert(Object)
  nameWithType: ISession.Insert(object)
  nameWithType.vb: ISession.Insert(Object)
- uid: NRules.ISession.Insert*
  name: Insert
  href: api/NRules.ISession.html#NRules_ISession_Insert_
  commentId: Overload:NRules.ISession.Insert
  isSpec: "True"
  fullName: NRules.ISession.Insert
  nameWithType: ISession.Insert
- uid: NRules.ISession.InsertAll(System.Collections.Generic.IEnumerable{System.Object})
  name: InsertAll(IEnumerable<object>)
  href: api/NRules.ISession.html#NRules_ISession_InsertAll_System_Collections_Generic_IEnumerable_System_Object__
  commentId: M:NRules.ISession.InsertAll(System.Collections.Generic.IEnumerable{System.Object})
  name.vb: InsertAll(IEnumerable(Of Object))
  fullName: NRules.ISession.InsertAll(System.Collections.Generic.IEnumerable<object>)
  fullName.vb: NRules.ISession.InsertAll(System.Collections.Generic.IEnumerable(Of Object))
  nameWithType: ISession.InsertAll(IEnumerable<object>)
  nameWithType.vb: ISession.InsertAll(IEnumerable(Of Object))
- uid: NRules.ISession.InsertAll*
  name: InsertAll
  href: api/NRules.ISession.html#NRules_ISession_InsertAll_
  commentId: Overload:NRules.ISession.InsertAll
  isSpec: "True"
  fullName: NRules.ISession.InsertAll
  nameWithType: ISession.InsertAll
- uid: NRules.ISession.Metrics
  name: Metrics
  href: api/NRules.ISession.html#NRules_ISession_Metrics
  commentId: P:NRules.ISession.Metrics
  fullName: NRules.ISession.Metrics
  nameWithType: ISession.Metrics
- uid: NRules.ISession.Metrics*
  name: Metrics
  href: api/NRules.ISession.html#NRules_ISession_Metrics_
  commentId: Overload:NRules.ISession.Metrics
  isSpec: "True"
  fullName: NRules.ISession.Metrics
  nameWithType: ISession.Metrics
- uid: NRules.ISession.PropagateLinked
  name: PropagateLinked()
  href: api/NRules.ISession.html#NRules_ISession_PropagateLinked
  commentId: M:NRules.ISession.PropagateLinked
  fullName: NRules.ISession.PropagateLinked()
  nameWithType: ISession.PropagateLinked()
- uid: NRules.ISession.PropagateLinked*
  name: PropagateLinked
  href: api/NRules.ISession.html#NRules_ISession_PropagateLinked_
  commentId: Overload:NRules.ISession.PropagateLinked
  isSpec: "True"
  fullName: NRules.ISession.PropagateLinked
  nameWithType: ISession.PropagateLinked
- uid: NRules.ISession.Query*
  name: Query
  href: api/NRules.ISession.html#NRules_ISession_Query_
  commentId: Overload:NRules.ISession.Query
  isSpec: "True"
  fullName: NRules.ISession.Query
  nameWithType: ISession.Query
- uid: NRules.ISession.Query``1
  name: Query<TFact>()
  href: api/NRules.ISession.html#NRules_ISession_Query__1
  commentId: M:NRules.ISession.Query``1
  name.vb: Query(Of TFact)()
  fullName: NRules.ISession.Query<TFact>()
  fullName.vb: NRules.ISession.Query(Of TFact)()
  nameWithType: ISession.Query<TFact>()
  nameWithType.vb: ISession.Query(Of TFact)()
- uid: NRules.ISession.Retract(System.Object)
  name: Retract(object)
  href: api/NRules.ISession.html#NRules_ISession_Retract_System_Object_
  commentId: M:NRules.ISession.Retract(System.Object)
  name.vb: Retract(Object)
  fullName: NRules.ISession.Retract(object)
  fullName.vb: NRules.ISession.Retract(Object)
  nameWithType: ISession.Retract(object)
  nameWithType.vb: ISession.Retract(Object)
- uid: NRules.ISession.Retract*
  name: Retract
  href: api/NRules.ISession.html#NRules_ISession_Retract_
  commentId: Overload:NRules.ISession.Retract
  isSpec: "True"
  fullName: NRules.ISession.Retract
  nameWithType: ISession.Retract
- uid: NRules.ISession.RetractAll(System.Collections.Generic.IEnumerable{System.Object})
  name: RetractAll(IEnumerable<object>)
  href: api/NRules.ISession.html#NRules_ISession_RetractAll_System_Collections_Generic_IEnumerable_System_Object__
  commentId: M:NRules.ISession.RetractAll(System.Collections.Generic.IEnumerable{System.Object})
  name.vb: RetractAll(IEnumerable(Of Object))
  fullName: NRules.ISession.RetractAll(System.Collections.Generic.IEnumerable<object>)
  fullName.vb: NRules.ISession.RetractAll(System.Collections.Generic.IEnumerable(Of Object))
  nameWithType: ISession.RetractAll(IEnumerable<object>)
  nameWithType.vb: ISession.RetractAll(IEnumerable(Of Object))
- uid: NRules.ISession.RetractAll*
  name: RetractAll
  href: api/NRules.ISession.html#NRules_ISession_RetractAll_
  commentId: Overload:NRules.ISession.RetractAll
  isSpec: "True"
  fullName: NRules.ISession.RetractAll
  nameWithType: ISession.RetractAll
- uid: NRules.ISession.TryInsert(System.Object)
  name: TryInsert(object)
  href: api/NRules.ISession.html#NRules_ISession_TryInsert_System_Object_
  commentId: M:NRules.ISession.TryInsert(System.Object)
  name.vb: TryInsert(Object)
  fullName: NRules.ISession.TryInsert(object)
  fullName.vb: NRules.ISession.TryInsert(Object)
  nameWithType: ISession.TryInsert(object)
  nameWithType.vb: ISession.TryInsert(Object)
- uid: NRules.ISession.TryInsert*
  name: TryInsert
  href: api/NRules.ISession.html#NRules_ISession_TryInsert_
  commentId: Overload:NRules.ISession.TryInsert
  isSpec: "True"
  fullName: NRules.ISession.TryInsert
  nameWithType: ISession.TryInsert
- uid: NRules.ISession.TryInsertAll(System.Collections.Generic.IEnumerable{System.Object})
  name: TryInsertAll(IEnumerable<object>)
  href: api/NRules.ISession.html#NRules_ISession_TryInsertAll_System_Collections_Generic_IEnumerable_System_Object__
  commentId: M:NRules.ISession.TryInsertAll(System.Collections.Generic.IEnumerable{System.Object})
  name.vb: TryInsertAll(IEnumerable(Of Object))
  fullName: NRules.ISession.TryInsertAll(System.Collections.Generic.IEnumerable<object>)
  fullName.vb: NRules.ISession.TryInsertAll(System.Collections.Generic.IEnumerable(Of Object))
  nameWithType: ISession.TryInsertAll(IEnumerable<object>)
  nameWithType.vb: ISession.TryInsertAll(IEnumerable(Of Object))
- uid: NRules.ISession.TryInsertAll(System.Collections.Generic.IEnumerable{System.Object},NRules.BatchOptions)
  name: TryInsertAll(IEnumerable<object>, BatchOptions)
  href: api/NRules.ISession.html#NRules_ISession_TryInsertAll_System_Collections_Generic_IEnumerable_System_Object__NRules_BatchOptions_
  commentId: M:NRules.ISession.TryInsertAll(System.Collections.Generic.IEnumerable{System.Object},NRules.BatchOptions)
  name.vb: TryInsertAll(IEnumerable(Of Object), BatchOptions)
  fullName: NRules.ISession.TryInsertAll(System.Collections.Generic.IEnumerable<object>, NRules.BatchOptions)
  fullName.vb: NRules.ISession.TryInsertAll(System.Collections.Generic.IEnumerable(Of Object), NRules.BatchOptions)
  nameWithType: ISession.TryInsertAll(IEnumerable<object>, BatchOptions)
  nameWithType.vb: ISession.TryInsertAll(IEnumerable(Of Object), BatchOptions)
- uid: NRules.ISession.TryInsertAll*
  name: TryInsertAll
  href: api/NRules.ISession.html#NRules_ISession_TryInsertAll_
  commentId: Overload:NRules.ISession.TryInsertAll
  isSpec: "True"
  fullName: NRules.ISession.TryInsertAll
  nameWithType: ISession.TryInsertAll
- uid: NRules.ISession.TryRetract(System.Object)
  name: TryRetract(object)
  href: api/NRules.ISession.html#NRules_ISession_TryRetract_System_Object_
  commentId: M:NRules.ISession.TryRetract(System.Object)
  name.vb: TryRetract(Object)
  fullName: NRules.ISession.TryRetract(object)
  fullName.vb: NRules.ISession.TryRetract(Object)
  nameWithType: ISession.TryRetract(object)
  nameWithType.vb: ISession.TryRetract(Object)
- uid: NRules.ISession.TryRetract*
  name: TryRetract
  href: api/NRules.ISession.html#NRules_ISession_TryRetract_
  commentId: Overload:NRules.ISession.TryRetract
  isSpec: "True"
  fullName: NRules.ISession.TryRetract
  nameWithType: ISession.TryRetract
- uid: NRules.ISession.TryRetractAll(System.Collections.Generic.IEnumerable{System.Object})
  name: TryRetractAll(IEnumerable<object>)
  href: api/NRules.ISession.html#NRules_ISession_TryRetractAll_System_Collections_Generic_IEnumerable_System_Object__
  commentId: M:NRules.ISession.TryRetractAll(System.Collections.Generic.IEnumerable{System.Object})
  name.vb: TryRetractAll(IEnumerable(Of Object))
  fullName: NRules.ISession.TryRetractAll(System.Collections.Generic.IEnumerable<object>)
  fullName.vb: NRules.ISession.TryRetractAll(System.Collections.Generic.IEnumerable(Of Object))
  nameWithType: ISession.TryRetractAll(IEnumerable<object>)
  nameWithType.vb: ISession.TryRetractAll(IEnumerable(Of Object))
- uid: NRules.ISession.TryRetractAll(System.Collections.Generic.IEnumerable{System.Object},NRules.BatchOptions)
  name: TryRetractAll(IEnumerable<object>, BatchOptions)
  href: api/NRules.ISession.html#NRules_ISession_TryRetractAll_System_Collections_Generic_IEnumerable_System_Object__NRules_BatchOptions_
  commentId: M:NRules.ISession.TryRetractAll(System.Collections.Generic.IEnumerable{System.Object},NRules.BatchOptions)
  name.vb: TryRetractAll(IEnumerable(Of Object), BatchOptions)
  fullName: NRules.ISession.TryRetractAll(System.Collections.Generic.IEnumerable<object>, NRules.BatchOptions)
  fullName.vb: NRules.ISession.TryRetractAll(System.Collections.Generic.IEnumerable(Of Object), NRules.BatchOptions)
  nameWithType: ISession.TryRetractAll(IEnumerable<object>, BatchOptions)
  nameWithType.vb: ISession.TryRetractAll(IEnumerable(Of Object), BatchOptions)
- uid: NRules.ISession.TryRetractAll*
  name: TryRetractAll
  href: api/NRules.ISession.html#NRules_ISession_TryRetractAll_
  commentId: Overload:NRules.ISession.TryRetractAll
  isSpec: "True"
  fullName: NRules.ISession.TryRetractAll
  nameWithType: ISession.TryRetractAll
- uid: NRules.ISession.TryUpdate(System.Object)
  name: TryUpdate(object)
  href: api/NRules.ISession.html#NRules_ISession_TryUpdate_System_Object_
  commentId: M:NRules.ISession.TryUpdate(System.Object)
  name.vb: TryUpdate(Object)
  fullName: NRules.ISession.TryUpdate(object)
  fullName.vb: NRules.ISession.TryUpdate(Object)
  nameWithType: ISession.TryUpdate(object)
  nameWithType.vb: ISession.TryUpdate(Object)
- uid: NRules.ISession.TryUpdate*
  name: TryUpdate
  href: api/NRules.ISession.html#NRules_ISession_TryUpdate_
  commentId: Overload:NRules.ISession.TryUpdate
  isSpec: "True"
  fullName: NRules.ISession.TryUpdate
  nameWithType: ISession.TryUpdate
- uid: NRules.ISession.TryUpdateAll(System.Collections.Generic.IEnumerable{System.Object})
  name: TryUpdateAll(IEnumerable<object>)
  href: api/NRules.ISession.html#NRules_ISession_TryUpdateAll_System_Collections_Generic_IEnumerable_System_Object__
  commentId: M:NRules.ISession.TryUpdateAll(System.Collections.Generic.IEnumerable{System.Object})
  name.vb: TryUpdateAll(IEnumerable(Of Object))
  fullName: NRules.ISession.TryUpdateAll(System.Collections.Generic.IEnumerable<object>)
  fullName.vb: NRules.ISession.TryUpdateAll(System.Collections.Generic.IEnumerable(Of Object))
  nameWithType: ISession.TryUpdateAll(IEnumerable<object>)
  nameWithType.vb: ISession.TryUpdateAll(IEnumerable(Of Object))
- uid: NRules.ISession.TryUpdateAll(System.Collections.Generic.IEnumerable{System.Object},NRules.BatchOptions)
  name: TryUpdateAll(IEnumerable<object>, BatchOptions)
  href: api/NRules.ISession.html#NRules_ISession_TryUpdateAll_System_Collections_Generic_IEnumerable_System_Object__NRules_BatchOptions_
  commentId: M:NRules.ISession.TryUpdateAll(System.Collections.Generic.IEnumerable{System.Object},NRules.BatchOptions)
  name.vb: TryUpdateAll(IEnumerable(Of Object), BatchOptions)
  fullName: NRules.ISession.TryUpdateAll(System.Collections.Generic.IEnumerable<object>, NRules.BatchOptions)
  fullName.vb: NRules.ISession.TryUpdateAll(System.Collections.Generic.IEnumerable(Of Object), NRules.BatchOptions)
  nameWithType: ISession.TryUpdateAll(IEnumerable<object>, BatchOptions)
  nameWithType.vb: ISession.TryUpdateAll(IEnumerable(Of Object), BatchOptions)
- uid: NRules.ISession.TryUpdateAll*
  name: TryUpdateAll
  href: api/NRules.ISession.html#NRules_ISession_TryUpdateAll_
  commentId: Overload:NRules.ISession.TryUpdateAll
  isSpec: "True"
  fullName: NRules.ISession.TryUpdateAll
  nameWithType: ISession.TryUpdateAll
- uid: NRules.ISession.Update(System.Object)
  name: Update(object)
  href: api/NRules.ISession.html#NRules_ISession_Update_System_Object_
  commentId: M:NRules.ISession.Update(System.Object)
  name.vb: Update(Object)
  fullName: NRules.ISession.Update(object)
  fullName.vb: NRules.ISession.Update(Object)
  nameWithType: ISession.Update(object)
  nameWithType.vb: ISession.Update(Object)
- uid: NRules.ISession.Update*
  name: Update
  href: api/NRules.ISession.html#NRules_ISession_Update_
  commentId: Overload:NRules.ISession.Update
  isSpec: "True"
  fullName: NRules.ISession.Update
  nameWithType: ISession.Update
- uid: NRules.ISession.UpdateAll(System.Collections.Generic.IEnumerable{System.Object})
  name: UpdateAll(IEnumerable<object>)
  href: api/NRules.ISession.html#NRules_ISession_UpdateAll_System_Collections_Generic_IEnumerable_System_Object__
  commentId: M:NRules.ISession.UpdateAll(System.Collections.Generic.IEnumerable{System.Object})
  name.vb: UpdateAll(IEnumerable(Of Object))
  fullName: NRules.ISession.UpdateAll(System.Collections.Generic.IEnumerable<object>)
  fullName.vb: NRules.ISession.UpdateAll(System.Collections.Generic.IEnumerable(Of Object))
  nameWithType: ISession.UpdateAll(IEnumerable<object>)
  nameWithType.vb: ISession.UpdateAll(IEnumerable(Of Object))
- uid: NRules.ISession.UpdateAll*
  name: UpdateAll
  href: api/NRules.ISession.html#NRules_ISession_UpdateAll_
  commentId: Overload:NRules.ISession.UpdateAll
  isSpec: "True"
  fullName: NRules.ISession.UpdateAll
  nameWithType: ISession.UpdateAll
- uid: NRules.ISessionFactory
  name: ISessionFactory
  href: api/NRules.ISessionFactory.html
  commentId: T:NRules.ISessionFactory
  fullName: NRules.ISessionFactory
  nameWithType: ISessionFactory
- uid: NRules.ISessionFactory.ActionInterceptor
  name: ActionInterceptor
  href: api/NRules.ISessionFactory.html#NRules_ISessionFactory_ActionInterceptor
  commentId: P:NRules.ISessionFactory.ActionInterceptor
  fullName: NRules.ISessionFactory.ActionInterceptor
  nameWithType: ISessionFactory.ActionInterceptor
- uid: NRules.ISessionFactory.ActionInterceptor*
  name: ActionInterceptor
  href: api/NRules.ISessionFactory.html#NRules_ISessionFactory_ActionInterceptor_
  commentId: Overload:NRules.ISessionFactory.ActionInterceptor
  isSpec: "True"
  fullName: NRules.ISessionFactory.ActionInterceptor
  nameWithType: ISessionFactory.ActionInterceptor
- uid: NRules.ISessionFactory.CreateSession
  name: CreateSession()
  href: api/NRules.ISessionFactory.html#NRules_ISessionFactory_CreateSession
  commentId: M:NRules.ISessionFactory.CreateSession
  fullName: NRules.ISessionFactory.CreateSession()
  nameWithType: ISessionFactory.CreateSession()
- uid: NRules.ISessionFactory.CreateSession(System.Action{NRules.ISession})
  name: CreateSession(Action<ISession>)
  href: api/NRules.ISessionFactory.html#NRules_ISessionFactory_CreateSession_System_Action_NRules_ISession__
  commentId: M:NRules.ISessionFactory.CreateSession(System.Action{NRules.ISession})
  name.vb: CreateSession(Action(Of ISession))
  fullName: NRules.ISessionFactory.CreateSession(System.Action<NRules.ISession>)
  fullName.vb: NRules.ISessionFactory.CreateSession(System.Action(Of NRules.ISession))
  nameWithType: ISessionFactory.CreateSession(Action<ISession>)
  nameWithType.vb: ISessionFactory.CreateSession(Action(Of ISession))
- uid: NRules.ISessionFactory.CreateSession*
  name: CreateSession
  href: api/NRules.ISessionFactory.html#NRules_ISessionFactory_CreateSession_
  commentId: Overload:NRules.ISessionFactory.CreateSession
  isSpec: "True"
  fullName: NRules.ISessionFactory.CreateSession
  nameWithType: ISessionFactory.CreateSession
- uid: NRules.ISessionFactory.DependencyResolver
  name: DependencyResolver
  href: api/NRules.ISessionFactory.html#NRules_ISessionFactory_DependencyResolver
  commentId: P:NRules.ISessionFactory.DependencyResolver
  fullName: NRules.ISessionFactory.DependencyResolver
  nameWithType: ISessionFactory.DependencyResolver
- uid: NRules.ISessionFactory.DependencyResolver*
  name: DependencyResolver
  href: api/NRules.ISessionFactory.html#NRules_ISessionFactory_DependencyResolver_
  commentId: Overload:NRules.ISessionFactory.DependencyResolver
  isSpec: "True"
  fullName: NRules.ISessionFactory.DependencyResolver
  nameWithType: ISessionFactory.DependencyResolver
- uid: NRules.ISessionFactory.Events
  name: Events
  href: api/NRules.ISessionFactory.html#NRules_ISessionFactory_Events
  commentId: P:NRules.ISessionFactory.Events
  fullName: NRules.ISessionFactory.Events
  nameWithType: ISessionFactory.Events
- uid: NRules.ISessionFactory.Events*
  name: Events
  href: api/NRules.ISessionFactory.html#NRules_ISessionFactory_Events_
  commentId: Overload:NRules.ISessionFactory.Events
  isSpec: "True"
  fullName: NRules.ISessionFactory.Events
  nameWithType: ISessionFactory.Events
- uid: NRules.Integration.Autofac
  name: NRules.Integration.Autofac
  href: api/NRules.Integration.Autofac.html
  commentId: N:NRules.Integration.Autofac
  fullName: NRules.Integration.Autofac
  nameWithType: NRules.Integration.Autofac
- uid: NRules.Integration.Autofac.AutofacDependencyResolver
  name: AutofacDependencyResolver
  href: api/NRules.Integration.Autofac.AutofacDependencyResolver.html
  commentId: T:NRules.Integration.Autofac.AutofacDependencyResolver
  fullName: NRules.Integration.Autofac.AutofacDependencyResolver
  nameWithType: AutofacDependencyResolver
- uid: NRules.Integration.Autofac.AutofacDependencyResolver.#ctor(Autofac.ILifetimeScope)
  name: AutofacDependencyResolver(ILifetimeScope)
  href: api/NRules.Integration.Autofac.AutofacDependencyResolver.html#NRules_Integration_Autofac_AutofacDependencyResolver__ctor_Autofac_ILifetimeScope_
  commentId: M:NRules.Integration.Autofac.AutofacDependencyResolver.#ctor(Autofac.ILifetimeScope)
  name.vb: New(ILifetimeScope)
  fullName: NRules.Integration.Autofac.AutofacDependencyResolver.AutofacDependencyResolver(Autofac.ILifetimeScope)
  fullName.vb: NRules.Integration.Autofac.AutofacDependencyResolver.New(Autofac.ILifetimeScope)
  nameWithType: AutofacDependencyResolver.AutofacDependencyResolver(ILifetimeScope)
  nameWithType.vb: AutofacDependencyResolver.New(ILifetimeScope)
- uid: NRules.Integration.Autofac.AutofacDependencyResolver.#ctor*
  name: AutofacDependencyResolver
  href: api/NRules.Integration.Autofac.AutofacDependencyResolver.html#NRules_Integration_Autofac_AutofacDependencyResolver__ctor_
  commentId: Overload:NRules.Integration.Autofac.AutofacDependencyResolver.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Integration.Autofac.AutofacDependencyResolver.AutofacDependencyResolver
  fullName.vb: NRules.Integration.Autofac.AutofacDependencyResolver.New
  nameWithType: AutofacDependencyResolver.AutofacDependencyResolver
  nameWithType.vb: AutofacDependencyResolver.New
- uid: NRules.Integration.Autofac.AutofacDependencyResolver.Resolve(NRules.Extensibility.IResolutionContext,System.Type)
  name: Resolve(IResolutionContext, Type)
  href: api/NRules.Integration.Autofac.AutofacDependencyResolver.html#NRules_Integration_Autofac_AutofacDependencyResolver_Resolve_NRules_Extensibility_IResolutionContext_System_Type_
  commentId: M:NRules.Integration.Autofac.AutofacDependencyResolver.Resolve(NRules.Extensibility.IResolutionContext,System.Type)
  fullName: NRules.Integration.Autofac.AutofacDependencyResolver.Resolve(NRules.Extensibility.IResolutionContext, System.Type)
  nameWithType: AutofacDependencyResolver.Resolve(IResolutionContext, Type)
- uid: NRules.Integration.Autofac.AutofacDependencyResolver.Resolve*
  name: Resolve
  href: api/NRules.Integration.Autofac.AutofacDependencyResolver.html#NRules_Integration_Autofac_AutofacDependencyResolver_Resolve_
  commentId: Overload:NRules.Integration.Autofac.AutofacDependencyResolver.Resolve
  isSpec: "True"
  fullName: NRules.Integration.Autofac.AutofacDependencyResolver.Resolve
  nameWithType: AutofacDependencyResolver.Resolve
- uid: NRules.Integration.Autofac.AutofacRuleActivator
  name: AutofacRuleActivator
  href: api/NRules.Integration.Autofac.AutofacRuleActivator.html
  commentId: T:NRules.Integration.Autofac.AutofacRuleActivator
  fullName: NRules.Integration.Autofac.AutofacRuleActivator
  nameWithType: AutofacRuleActivator
- uid: NRules.Integration.Autofac.AutofacRuleActivator.#ctor(Autofac.ILifetimeScope)
  name: AutofacRuleActivator(ILifetimeScope)
  href: api/NRules.Integration.Autofac.AutofacRuleActivator.html#NRules_Integration_Autofac_AutofacRuleActivator__ctor_Autofac_ILifetimeScope_
  commentId: M:NRules.Integration.Autofac.AutofacRuleActivator.#ctor(Autofac.ILifetimeScope)
  name.vb: New(ILifetimeScope)
  fullName: NRules.Integration.Autofac.AutofacRuleActivator.AutofacRuleActivator(Autofac.ILifetimeScope)
  fullName.vb: NRules.Integration.Autofac.AutofacRuleActivator.New(Autofac.ILifetimeScope)
  nameWithType: AutofacRuleActivator.AutofacRuleActivator(ILifetimeScope)
  nameWithType.vb: AutofacRuleActivator.New(ILifetimeScope)
- uid: NRules.Integration.Autofac.AutofacRuleActivator.#ctor*
  name: AutofacRuleActivator
  href: api/NRules.Integration.Autofac.AutofacRuleActivator.html#NRules_Integration_Autofac_AutofacRuleActivator__ctor_
  commentId: Overload:NRules.Integration.Autofac.AutofacRuleActivator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Integration.Autofac.AutofacRuleActivator.AutofacRuleActivator
  fullName.vb: NRules.Integration.Autofac.AutofacRuleActivator.New
  nameWithType: AutofacRuleActivator.AutofacRuleActivator
  nameWithType.vb: AutofacRuleActivator.New
- uid: NRules.Integration.Autofac.AutofacRuleActivator.Activate(System.Type)
  name: Activate(Type)
  href: api/NRules.Integration.Autofac.AutofacRuleActivator.html#NRules_Integration_Autofac_AutofacRuleActivator_Activate_System_Type_
  commentId: M:NRules.Integration.Autofac.AutofacRuleActivator.Activate(System.Type)
  fullName: NRules.Integration.Autofac.AutofacRuleActivator.Activate(System.Type)
  nameWithType: AutofacRuleActivator.Activate(Type)
- uid: NRules.Integration.Autofac.AutofacRuleActivator.Activate*
  name: Activate
  href: api/NRules.Integration.Autofac.AutofacRuleActivator.html#NRules_Integration_Autofac_AutofacRuleActivator_Activate_
  commentId: Overload:NRules.Integration.Autofac.AutofacRuleActivator.Activate
  isSpec: "True"
  fullName: NRules.Integration.Autofac.AutofacRuleActivator.Activate
  nameWithType: AutofacRuleActivator.Activate
- uid: NRules.Integration.Autofac.RegistrationExtensions
  name: RegistrationExtensions
  href: api/NRules.Integration.Autofac.RegistrationExtensions.html
  commentId: T:NRules.Integration.Autofac.RegistrationExtensions
  fullName: NRules.Integration.Autofac.RegistrationExtensions
  nameWithType: RegistrationExtensions
- uid: NRules.Integration.Autofac.RegistrationExtensions.RegisterRuleRepository(Autofac.ContainerBuilder,System.Action{NRules.Fluent.IRuleTypeScanner})
  name: RegisterRuleRepository(ContainerBuilder, Action<IRuleTypeScanner>)
  href: api/NRules.Integration.Autofac.RegistrationExtensions.html#NRules_Integration_Autofac_RegistrationExtensions_RegisterRuleRepository_Autofac_ContainerBuilder_System_Action_NRules_Fluent_IRuleTypeScanner__
  commentId: M:NRules.Integration.Autofac.RegistrationExtensions.RegisterRuleRepository(Autofac.ContainerBuilder,System.Action{NRules.Fluent.IRuleTypeScanner})
  name.vb: RegisterRuleRepository(ContainerBuilder, Action(Of IRuleTypeScanner))
  fullName: NRules.Integration.Autofac.RegistrationExtensions.RegisterRuleRepository(Autofac.ContainerBuilder, System.Action<NRules.Fluent.IRuleTypeScanner>)
  fullName.vb: NRules.Integration.Autofac.RegistrationExtensions.RegisterRuleRepository(Autofac.ContainerBuilder, System.Action(Of NRules.Fluent.IRuleTypeScanner))
  nameWithType: RegistrationExtensions.RegisterRuleRepository(ContainerBuilder, Action<IRuleTypeScanner>)
  nameWithType.vb: RegistrationExtensions.RegisterRuleRepository(ContainerBuilder, Action(Of IRuleTypeScanner))
- uid: NRules.Integration.Autofac.RegistrationExtensions.RegisterRuleRepository*
  name: RegisterRuleRepository
  href: api/NRules.Integration.Autofac.RegistrationExtensions.html#NRules_Integration_Autofac_RegistrationExtensions_RegisterRuleRepository_
  commentId: Overload:NRules.Integration.Autofac.RegistrationExtensions.RegisterRuleRepository
  isSpec: "True"
  fullName: NRules.Integration.Autofac.RegistrationExtensions.RegisterRuleRepository
  nameWithType: RegistrationExtensions.RegisterRuleRepository
- uid: NRules.Integration.Autofac.RegistrationExtensions.RegisterSession(Autofac.ContainerBuilder)
  name: RegisterSession(ContainerBuilder)
  href: api/NRules.Integration.Autofac.RegistrationExtensions.html#NRules_Integration_Autofac_RegistrationExtensions_RegisterSession_Autofac_ContainerBuilder_
  commentId: M:NRules.Integration.Autofac.RegistrationExtensions.RegisterSession(Autofac.ContainerBuilder)
  fullName: NRules.Integration.Autofac.RegistrationExtensions.RegisterSession(Autofac.ContainerBuilder)
  nameWithType: RegistrationExtensions.RegisterSession(ContainerBuilder)
- uid: NRules.Integration.Autofac.RegistrationExtensions.RegisterSession(Autofac.ContainerBuilder,System.Func{Autofac.IComponentContext,NRules.ISession})
  name: RegisterSession(ContainerBuilder, Func<IComponentContext, ISession>)
  href: api/NRules.Integration.Autofac.RegistrationExtensions.html#NRules_Integration_Autofac_RegistrationExtensions_RegisterSession_Autofac_ContainerBuilder_System_Func_Autofac_IComponentContext_NRules_ISession__
  commentId: M:NRules.Integration.Autofac.RegistrationExtensions.RegisterSession(Autofac.ContainerBuilder,System.Func{Autofac.IComponentContext,NRules.ISession})
  name.vb: RegisterSession(ContainerBuilder, Func(Of IComponentContext, ISession))
  fullName: NRules.Integration.Autofac.RegistrationExtensions.RegisterSession(Autofac.ContainerBuilder, System.Func<Autofac.IComponentContext, NRules.ISession>)
  fullName.vb: NRules.Integration.Autofac.RegistrationExtensions.RegisterSession(Autofac.ContainerBuilder, System.Func(Of Autofac.IComponentContext, NRules.ISession))
  nameWithType: RegistrationExtensions.RegisterSession(ContainerBuilder, Func<IComponentContext, ISession>)
  nameWithType.vb: RegistrationExtensions.RegisterSession(ContainerBuilder, Func(Of IComponentContext, ISession))
- uid: NRules.Integration.Autofac.RegistrationExtensions.RegisterSession*
  name: RegisterSession
  href: api/NRules.Integration.Autofac.RegistrationExtensions.html#NRules_Integration_Autofac_RegistrationExtensions_RegisterSession_
  commentId: Overload:NRules.Integration.Autofac.RegistrationExtensions.RegisterSession
  isSpec: "True"
  fullName: NRules.Integration.Autofac.RegistrationExtensions.RegisterSession
  nameWithType: RegistrationExtensions.RegisterSession
- uid: NRules.Integration.Autofac.RegistrationExtensions.RegisterSessionFactory(Autofac.ContainerBuilder)
  name: RegisterSessionFactory(ContainerBuilder)
  href: api/NRules.Integration.Autofac.RegistrationExtensions.html#NRules_Integration_Autofac_RegistrationExtensions_RegisterSessionFactory_Autofac_ContainerBuilder_
  commentId: M:NRules.Integration.Autofac.RegistrationExtensions.RegisterSessionFactory(Autofac.ContainerBuilder)
  fullName: NRules.Integration.Autofac.RegistrationExtensions.RegisterSessionFactory(Autofac.ContainerBuilder)
  nameWithType: RegistrationExtensions.RegisterSessionFactory(ContainerBuilder)
- uid: NRules.Integration.Autofac.RegistrationExtensions.RegisterSessionFactory(Autofac.ContainerBuilder,System.Func{Autofac.IComponentContext,NRules.ISessionFactory})
  name: RegisterSessionFactory(ContainerBuilder, Func<IComponentContext, ISessionFactory>)
  href: api/NRules.Integration.Autofac.RegistrationExtensions.html#NRules_Integration_Autofac_RegistrationExtensions_RegisterSessionFactory_Autofac_ContainerBuilder_System_Func_Autofac_IComponentContext_NRules_ISessionFactory__
  commentId: M:NRules.Integration.Autofac.RegistrationExtensions.RegisterSessionFactory(Autofac.ContainerBuilder,System.Func{Autofac.IComponentContext,NRules.ISessionFactory})
  name.vb: RegisterSessionFactory(ContainerBuilder, Func(Of IComponentContext, ISessionFactory))
  fullName: NRules.Integration.Autofac.RegistrationExtensions.RegisterSessionFactory(Autofac.ContainerBuilder, System.Func<Autofac.IComponentContext, NRules.ISessionFactory>)
  fullName.vb: NRules.Integration.Autofac.RegistrationExtensions.RegisterSessionFactory(Autofac.ContainerBuilder, System.Func(Of Autofac.IComponentContext, NRules.ISessionFactory))
  nameWithType: RegistrationExtensions.RegisterSessionFactory(ContainerBuilder, Func<IComponentContext, ISessionFactory>)
  nameWithType.vb: RegistrationExtensions.RegisterSessionFactory(ContainerBuilder, Func(Of IComponentContext, ISessionFactory))
- uid: NRules.Integration.Autofac.RegistrationExtensions.RegisterSessionFactory*
  name: RegisterSessionFactory
  href: api/NRules.Integration.Autofac.RegistrationExtensions.html#NRules_Integration_Autofac_RegistrationExtensions_RegisterSessionFactory_
  commentId: Overload:NRules.Integration.Autofac.RegistrationExtensions.RegisterSessionFactory
  isSpec: "True"
  fullName: NRules.Integration.Autofac.RegistrationExtensions.RegisterSessionFactory
  nameWithType: RegistrationExtensions.RegisterSessionFactory
- uid: NRules.Json
  name: NRules.Json
  href: api/NRules.Json.html
  commentId: N:NRules.Json
  fullName: NRules.Json
  nameWithType: NRules.Json
- uid: NRules.Json.ITypeResolver
  name: ITypeResolver
  href: api/NRules.Json.ITypeResolver.html
  commentId: T:NRules.Json.ITypeResolver
  fullName: NRules.Json.ITypeResolver
  nameWithType: ITypeResolver
- uid: NRules.Json.ITypeResolver.GetTypeFromName(System.String)
  name: GetTypeFromName(string)
  href: api/NRules.Json.ITypeResolver.html#NRules_Json_ITypeResolver_GetTypeFromName_System_String_
  commentId: M:NRules.Json.ITypeResolver.GetTypeFromName(System.String)
  name.vb: GetTypeFromName(String)
  fullName: NRules.Json.ITypeResolver.GetTypeFromName(string)
  fullName.vb: NRules.Json.ITypeResolver.GetTypeFromName(String)
  nameWithType: ITypeResolver.GetTypeFromName(string)
  nameWithType.vb: ITypeResolver.GetTypeFromName(String)
- uid: NRules.Json.ITypeResolver.GetTypeFromName*
  name: GetTypeFromName
  href: api/NRules.Json.ITypeResolver.html#NRules_Json_ITypeResolver_GetTypeFromName_
  commentId: Overload:NRules.Json.ITypeResolver.GetTypeFromName
  isSpec: "True"
  fullName: NRules.Json.ITypeResolver.GetTypeFromName
  nameWithType: ITypeResolver.GetTypeFromName
- uid: NRules.Json.ITypeResolver.GetTypeName(System.Type)
  name: GetTypeName(Type)
  href: api/NRules.Json.ITypeResolver.html#NRules_Json_ITypeResolver_GetTypeName_System_Type_
  commentId: M:NRules.Json.ITypeResolver.GetTypeName(System.Type)
  fullName: NRules.Json.ITypeResolver.GetTypeName(System.Type)
  nameWithType: ITypeResolver.GetTypeName(Type)
- uid: NRules.Json.ITypeResolver.GetTypeName*
  name: GetTypeName
  href: api/NRules.Json.ITypeResolver.html#NRules_Json_ITypeResolver_GetTypeName_
  commentId: Overload:NRules.Json.ITypeResolver.GetTypeName
  isSpec: "True"
  fullName: NRules.Json.ITypeResolver.GetTypeName
  nameWithType: ITypeResolver.GetTypeName
- uid: NRules.Json.RuleSerializer
  name: RuleSerializer
  href: api/NRules.Json.RuleSerializer.html
  commentId: T:NRules.Json.RuleSerializer
  fullName: NRules.Json.RuleSerializer
  nameWithType: RuleSerializer
- uid: NRules.Json.RuleSerializer.GetConverters
  name: GetConverters()
  href: api/NRules.Json.RuleSerializer.html#NRules_Json_RuleSerializer_GetConverters
  commentId: M:NRules.Json.RuleSerializer.GetConverters
  fullName: NRules.Json.RuleSerializer.GetConverters()
  nameWithType: RuleSerializer.GetConverters()
- uid: NRules.Json.RuleSerializer.GetConverters(NRules.Json.ITypeResolver)
  name: GetConverters(ITypeResolver)
  href: api/NRules.Json.RuleSerializer.html#NRules_Json_RuleSerializer_GetConverters_NRules_Json_ITypeResolver_
  commentId: M:NRules.Json.RuleSerializer.GetConverters(NRules.Json.ITypeResolver)
  fullName: NRules.Json.RuleSerializer.GetConverters(NRules.Json.ITypeResolver)
  nameWithType: RuleSerializer.GetConverters(ITypeResolver)
- uid: NRules.Json.RuleSerializer.GetConverters*
  name: GetConverters
  href: api/NRules.Json.RuleSerializer.html#NRules_Json_RuleSerializer_GetConverters_
  commentId: Overload:NRules.Json.RuleSerializer.GetConverters
  isSpec: "True"
  fullName: NRules.Json.RuleSerializer.GetConverters
  nameWithType: RuleSerializer.GetConverters
- uid: NRules.Json.RuleSerializer.Setup(System.Text.Json.JsonSerializerOptions)
  name: Setup(JsonSerializerOptions)
  href: api/NRules.Json.RuleSerializer.html#NRules_Json_RuleSerializer_Setup_System_Text_Json_JsonSerializerOptions_
  commentId: M:NRules.Json.RuleSerializer.Setup(System.Text.Json.JsonSerializerOptions)
  fullName: NRules.Json.RuleSerializer.Setup(System.Text.Json.JsonSerializerOptions)
  nameWithType: RuleSerializer.Setup(JsonSerializerOptions)
- uid: NRules.Json.RuleSerializer.Setup(System.Text.Json.JsonSerializerOptions,NRules.Json.ITypeResolver)
  name: Setup(JsonSerializerOptions, ITypeResolver)
  href: api/NRules.Json.RuleSerializer.html#NRules_Json_RuleSerializer_Setup_System_Text_Json_JsonSerializerOptions_NRules_Json_ITypeResolver_
  commentId: M:NRules.Json.RuleSerializer.Setup(System.Text.Json.JsonSerializerOptions,NRules.Json.ITypeResolver)
  fullName: NRules.Json.RuleSerializer.Setup(System.Text.Json.JsonSerializerOptions, NRules.Json.ITypeResolver)
  nameWithType: RuleSerializer.Setup(JsonSerializerOptions, ITypeResolver)
- uid: NRules.Json.RuleSerializer.Setup*
  name: Setup
  href: api/NRules.Json.RuleSerializer.html#NRules_Json_RuleSerializer_Setup_
  commentId: Overload:NRules.Json.RuleSerializer.Setup
  isSpec: "True"
  fullName: NRules.Json.RuleSerializer.Setup
  nameWithType: RuleSerializer.Setup
- uid: NRules.Json.TypeResolver
  name: TypeResolver
  href: api/NRules.Json.TypeResolver.html
  commentId: T:NRules.Json.TypeResolver
  fullName: NRules.Json.TypeResolver
  nameWithType: TypeResolver
- uid: NRules.Json.TypeResolver.GetTypeFromName(System.String)
  name: GetTypeFromName(string)
  href: api/NRules.Json.TypeResolver.html#NRules_Json_TypeResolver_GetTypeFromName_System_String_
  commentId: M:NRules.Json.TypeResolver.GetTypeFromName(System.String)
  name.vb: GetTypeFromName(String)
  fullName: NRules.Json.TypeResolver.GetTypeFromName(string)
  fullName.vb: NRules.Json.TypeResolver.GetTypeFromName(String)
  nameWithType: TypeResolver.GetTypeFromName(string)
  nameWithType.vb: TypeResolver.GetTypeFromName(String)
- uid: NRules.Json.TypeResolver.GetTypeFromName*
  name: GetTypeFromName
  href: api/NRules.Json.TypeResolver.html#NRules_Json_TypeResolver_GetTypeFromName_
  commentId: Overload:NRules.Json.TypeResolver.GetTypeFromName
  isSpec: "True"
  fullName: NRules.Json.TypeResolver.GetTypeFromName
  nameWithType: TypeResolver.GetTypeFromName
- uid: NRules.Json.TypeResolver.GetTypeName(System.Type)
  name: GetTypeName(Type)
  href: api/NRules.Json.TypeResolver.html#NRules_Json_TypeResolver_GetTypeName_System_Type_
  commentId: M:NRules.Json.TypeResolver.GetTypeName(System.Type)
  fullName: NRules.Json.TypeResolver.GetTypeName(System.Type)
  nameWithType: TypeResolver.GetTypeName(Type)
- uid: NRules.Json.TypeResolver.GetTypeName*
  name: GetTypeName
  href: api/NRules.Json.TypeResolver.html#NRules_Json_TypeResolver_GetTypeName_
  commentId: Overload:NRules.Json.TypeResolver.GetTypeName
  isSpec: "True"
  fullName: NRules.Json.TypeResolver.GetTypeName
  nameWithType: TypeResolver.GetTypeName
- uid: NRules.Json.TypeResolver.RegisterAlias(System.String,System.Type)
  name: RegisterAlias(string, Type)
  href: api/NRules.Json.TypeResolver.html#NRules_Json_TypeResolver_RegisterAlias_System_String_System_Type_
  commentId: M:NRules.Json.TypeResolver.RegisterAlias(System.String,System.Type)
  name.vb: RegisterAlias(String, Type)
  fullName: NRules.Json.TypeResolver.RegisterAlias(string, System.Type)
  fullName.vb: NRules.Json.TypeResolver.RegisterAlias(String, System.Type)
  nameWithType: TypeResolver.RegisterAlias(string, Type)
  nameWithType.vb: TypeResolver.RegisterAlias(String, Type)
- uid: NRules.Json.TypeResolver.RegisterAlias*
  name: RegisterAlias
  href: api/NRules.Json.TypeResolver.html#NRules_Json_TypeResolver_RegisterAlias_
  commentId: Overload:NRules.Json.TypeResolver.RegisterAlias
  isSpec: "True"
  fullName: NRules.Json.TypeResolver.RegisterAlias
  nameWithType: TypeResolver.RegisterAlias
- uid: NRules.Json.TypeResolver.RegisterDefaultAliases
  name: RegisterDefaultAliases()
  href: api/NRules.Json.TypeResolver.html#NRules_Json_TypeResolver_RegisterDefaultAliases
  commentId: M:NRules.Json.TypeResolver.RegisterDefaultAliases
  fullName: NRules.Json.TypeResolver.RegisterDefaultAliases()
  nameWithType: TypeResolver.RegisterDefaultAliases()
- uid: NRules.Json.TypeResolver.RegisterDefaultAliases*
  name: RegisterDefaultAliases
  href: api/NRules.Json.TypeResolver.html#NRules_Json_TypeResolver_RegisterDefaultAliases_
  commentId: Overload:NRules.Json.TypeResolver.RegisterDefaultAliases
  isSpec: "True"
  fullName: NRules.Json.TypeResolver.RegisterDefaultAliases
  nameWithType: TypeResolver.RegisterDefaultAliases
- uid: NRules.LinkedFactAction
  name: LinkedFactAction
  href: api/NRules.LinkedFactAction.html
  commentId: T:NRules.LinkedFactAction
  fullName: NRules.LinkedFactAction
  nameWithType: LinkedFactAction
- uid: NRules.LinkedFactAction.Insert
  name: Insert
  href: api/NRules.LinkedFactAction.html#NRules_LinkedFactAction_Insert
  commentId: F:NRules.LinkedFactAction.Insert
  fullName: NRules.LinkedFactAction.Insert
  nameWithType: LinkedFactAction.Insert
- uid: NRules.LinkedFactAction.Retract
  name: Retract
  href: api/NRules.LinkedFactAction.html#NRules_LinkedFactAction_Retract
  commentId: F:NRules.LinkedFactAction.Retract
  fullName: NRules.LinkedFactAction.Retract
  nameWithType: LinkedFactAction.Retract
- uid: NRules.LinkedFactAction.Update
  name: Update
  href: api/NRules.LinkedFactAction.html#NRules_LinkedFactAction_Update
  commentId: F:NRules.LinkedFactAction.Update
  fullName: NRules.LinkedFactAction.Update
  nameWithType: LinkedFactAction.Update
- uid: NRules.RuleCompilationException
  name: RuleCompilationException
  href: api/NRules.RuleCompilationException.html
  commentId: T:NRules.RuleCompilationException
  fullName: NRules.RuleCompilationException
  nameWithType: RuleCompilationException
- uid: NRules.RuleCompilationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: RuleCompilationException(SerializationInfo, StreamingContext)
  href: api/NRules.RuleCompilationException.html#NRules_RuleCompilationException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:NRules.RuleCompilationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name.vb: New(SerializationInfo, StreamingContext)
  fullName: NRules.RuleCompilationException.RuleCompilationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  fullName.vb: NRules.RuleCompilationException.New(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: RuleCompilationException.RuleCompilationException(SerializationInfo, StreamingContext)
  nameWithType.vb: RuleCompilationException.New(SerializationInfo, StreamingContext)
- uid: NRules.RuleCompilationException.#ctor*
  name: RuleCompilationException
  href: api/NRules.RuleCompilationException.html#NRules_RuleCompilationException__ctor_
  commentId: Overload:NRules.RuleCompilationException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleCompilationException.RuleCompilationException
  fullName.vb: NRules.RuleCompilationException.New
  nameWithType: RuleCompilationException.RuleCompilationException
  nameWithType.vb: RuleCompilationException.New
- uid: NRules.RuleCompilationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData(SerializationInfo, StreamingContext)
  href: api/NRules.RuleCompilationException.html#NRules_RuleCompilationException_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:NRules.RuleCompilationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: NRules.RuleCompilationException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: RuleCompilationException.GetObjectData(SerializationInfo, StreamingContext)
- uid: NRules.RuleCompilationException.GetObjectData*
  name: GetObjectData
  href: api/NRules.RuleCompilationException.html#NRules_RuleCompilationException_GetObjectData_
  commentId: Overload:NRules.RuleCompilationException.GetObjectData
  isSpec: "True"
  fullName: NRules.RuleCompilationException.GetObjectData
  nameWithType: RuleCompilationException.GetObjectData
- uid: NRules.RuleCompilationException.Message
  name: Message
  href: api/NRules.RuleCompilationException.html#NRules_RuleCompilationException_Message
  commentId: P:NRules.RuleCompilationException.Message
  fullName: NRules.RuleCompilationException.Message
  nameWithType: RuleCompilationException.Message
- uid: NRules.RuleCompilationException.Message*
  name: Message
  href: api/NRules.RuleCompilationException.html#NRules_RuleCompilationException_Message_
  commentId: Overload:NRules.RuleCompilationException.Message
  isSpec: "True"
  fullName: NRules.RuleCompilationException.Message
  nameWithType: RuleCompilationException.Message
- uid: NRules.RuleCompilationException.RuleName
  name: RuleName
  href: api/NRules.RuleCompilationException.html#NRules_RuleCompilationException_RuleName
  commentId: P:NRules.RuleCompilationException.RuleName
  fullName: NRules.RuleCompilationException.RuleName
  nameWithType: RuleCompilationException.RuleName
- uid: NRules.RuleCompilationException.RuleName*
  name: RuleName
  href: api/NRules.RuleCompilationException.html#NRules_RuleCompilationException_RuleName_
  commentId: Overload:NRules.RuleCompilationException.RuleName
  isSpec: "True"
  fullName: NRules.RuleCompilationException.RuleName
  nameWithType: RuleCompilationException.RuleName
- uid: NRules.RuleCompiler
  name: RuleCompiler
  href: api/NRules.RuleCompiler.html
  commentId: T:NRules.RuleCompiler
  fullName: NRules.RuleCompiler
  nameWithType: RuleCompiler
- uid: NRules.RuleCompiler.#ctor
  name: RuleCompiler()
  href: api/NRules.RuleCompiler.html#NRules_RuleCompiler__ctor
  commentId: M:NRules.RuleCompiler.#ctor
  name.vb: New()
  fullName: NRules.RuleCompiler.RuleCompiler()
  fullName.vb: NRules.RuleCompiler.New()
  nameWithType: RuleCompiler.RuleCompiler()
  nameWithType.vb: RuleCompiler.New()
- uid: NRules.RuleCompiler.#ctor(NRules.RuleCompilerOptions)
  name: RuleCompiler(RuleCompilerOptions)
  href: api/NRules.RuleCompiler.html#NRules_RuleCompiler__ctor_NRules_RuleCompilerOptions_
  commentId: M:NRules.RuleCompiler.#ctor(NRules.RuleCompilerOptions)
  name.vb: New(RuleCompilerOptions)
  fullName: NRules.RuleCompiler.RuleCompiler(NRules.RuleCompilerOptions)
  fullName.vb: NRules.RuleCompiler.New(NRules.RuleCompilerOptions)
  nameWithType: RuleCompiler.RuleCompiler(RuleCompilerOptions)
  nameWithType.vb: RuleCompiler.New(RuleCompilerOptions)
- uid: NRules.RuleCompiler.#ctor*
  name: RuleCompiler
  href: api/NRules.RuleCompiler.html#NRules_RuleCompiler__ctor_
  commentId: Overload:NRules.RuleCompiler.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleCompiler.RuleCompiler
  fullName.vb: NRules.RuleCompiler.New
  nameWithType: RuleCompiler.RuleCompiler
  nameWithType.vb: RuleCompiler.New
- uid: NRules.RuleCompiler.AggregatorRegistry
  name: AggregatorRegistry
  href: api/NRules.RuleCompiler.html#NRules_RuleCompiler_AggregatorRegistry
  commentId: P:NRules.RuleCompiler.AggregatorRegistry
  fullName: NRules.RuleCompiler.AggregatorRegistry
  nameWithType: RuleCompiler.AggregatorRegistry
- uid: NRules.RuleCompiler.AggregatorRegistry*
  name: AggregatorRegistry
  href: api/NRules.RuleCompiler.html#NRules_RuleCompiler_AggregatorRegistry_
  commentId: Overload:NRules.RuleCompiler.AggregatorRegistry
  isSpec: "True"
  fullName: NRules.RuleCompiler.AggregatorRegistry
  nameWithType: RuleCompiler.AggregatorRegistry
- uid: NRules.RuleCompiler.Compile(System.Collections.Generic.IEnumerable{NRules.RuleModel.IRuleDefinition})
  name: Compile(IEnumerable<IRuleDefinition>)
  href: api/NRules.RuleCompiler.html#NRules_RuleCompiler_Compile_System_Collections_Generic_IEnumerable_NRules_RuleModel_IRuleDefinition__
  commentId: M:NRules.RuleCompiler.Compile(System.Collections.Generic.IEnumerable{NRules.RuleModel.IRuleDefinition})
  name.vb: Compile(IEnumerable(Of IRuleDefinition))
  fullName: NRules.RuleCompiler.Compile(System.Collections.Generic.IEnumerable<NRules.RuleModel.IRuleDefinition>)
  fullName.vb: NRules.RuleCompiler.Compile(System.Collections.Generic.IEnumerable(Of NRules.RuleModel.IRuleDefinition))
  nameWithType: RuleCompiler.Compile(IEnumerable<IRuleDefinition>)
  nameWithType.vb: RuleCompiler.Compile(IEnumerable(Of IRuleDefinition))
- uid: NRules.RuleCompiler.Compile(System.Collections.Generic.IEnumerable{NRules.RuleModel.IRuleDefinition},System.Threading.CancellationToken)
  name: Compile(IEnumerable<IRuleDefinition>, CancellationToken)
  href: api/NRules.RuleCompiler.html#NRules_RuleCompiler_Compile_System_Collections_Generic_IEnumerable_NRules_RuleModel_IRuleDefinition__System_Threading_CancellationToken_
  commentId: M:NRules.RuleCompiler.Compile(System.Collections.Generic.IEnumerable{NRules.RuleModel.IRuleDefinition},System.Threading.CancellationToken)
  name.vb: Compile(IEnumerable(Of IRuleDefinition), CancellationToken)
  fullName: NRules.RuleCompiler.Compile(System.Collections.Generic.IEnumerable<NRules.RuleModel.IRuleDefinition>, System.Threading.CancellationToken)
  fullName.vb: NRules.RuleCompiler.Compile(System.Collections.Generic.IEnumerable(Of NRules.RuleModel.IRuleDefinition), System.Threading.CancellationToken)
  nameWithType: RuleCompiler.Compile(IEnumerable<IRuleDefinition>, CancellationToken)
  nameWithType.vb: RuleCompiler.Compile(IEnumerable(Of IRuleDefinition), CancellationToken)
- uid: NRules.RuleCompiler.Compile(System.Collections.Generic.IEnumerable{NRules.RuleModel.IRuleSet})
  name: Compile(IEnumerable<IRuleSet>)
  href: api/NRules.RuleCompiler.html#NRules_RuleCompiler_Compile_System_Collections_Generic_IEnumerable_NRules_RuleModel_IRuleSet__
  commentId: M:NRules.RuleCompiler.Compile(System.Collections.Generic.IEnumerable{NRules.RuleModel.IRuleSet})
  name.vb: Compile(IEnumerable(Of IRuleSet))
  fullName: NRules.RuleCompiler.Compile(System.Collections.Generic.IEnumerable<NRules.RuleModel.IRuleSet>)
  fullName.vb: NRules.RuleCompiler.Compile(System.Collections.Generic.IEnumerable(Of NRules.RuleModel.IRuleSet))
  nameWithType: RuleCompiler.Compile(IEnumerable<IRuleSet>)
  nameWithType.vb: RuleCompiler.Compile(IEnumerable(Of IRuleSet))
- uid: NRules.RuleCompiler.Compile(System.Collections.Generic.IEnumerable{NRules.RuleModel.IRuleSet},System.Threading.CancellationToken)
  name: Compile(IEnumerable<IRuleSet>, CancellationToken)
  href: api/NRules.RuleCompiler.html#NRules_RuleCompiler_Compile_System_Collections_Generic_IEnumerable_NRules_RuleModel_IRuleSet__System_Threading_CancellationToken_
  commentId: M:NRules.RuleCompiler.Compile(System.Collections.Generic.IEnumerable{NRules.RuleModel.IRuleSet},System.Threading.CancellationToken)
  name.vb: Compile(IEnumerable(Of IRuleSet), CancellationToken)
  fullName: NRules.RuleCompiler.Compile(System.Collections.Generic.IEnumerable<NRules.RuleModel.IRuleSet>, System.Threading.CancellationToken)
  fullName.vb: NRules.RuleCompiler.Compile(System.Collections.Generic.IEnumerable(Of NRules.RuleModel.IRuleSet), System.Threading.CancellationToken)
  nameWithType: RuleCompiler.Compile(IEnumerable<IRuleSet>, CancellationToken)
  nameWithType.vb: RuleCompiler.Compile(IEnumerable(Of IRuleSet), CancellationToken)
- uid: NRules.RuleCompiler.Compile*
  name: Compile
  href: api/NRules.RuleCompiler.html#NRules_RuleCompiler_Compile_
  commentId: Overload:NRules.RuleCompiler.Compile
  isSpec: "True"
  fullName: NRules.RuleCompiler.Compile
  nameWithType: RuleCompiler.Compile
- uid: NRules.RuleCompiler.ExpressionCompiler
  name: ExpressionCompiler
  href: api/NRules.RuleCompiler.html#NRules_RuleCompiler_ExpressionCompiler
  commentId: P:NRules.RuleCompiler.ExpressionCompiler
  fullName: NRules.RuleCompiler.ExpressionCompiler
  nameWithType: RuleCompiler.ExpressionCompiler
- uid: NRules.RuleCompiler.ExpressionCompiler*
  name: ExpressionCompiler
  href: api/NRules.RuleCompiler.html#NRules_RuleCompiler_ExpressionCompiler_
  commentId: Overload:NRules.RuleCompiler.ExpressionCompiler
  isSpec: "True"
  fullName: NRules.RuleCompiler.ExpressionCompiler
  nameWithType: RuleCompiler.ExpressionCompiler
- uid: NRules.RuleCompilerOptions
  name: RuleCompilerOptions
  href: api/NRules.RuleCompilerOptions.html
  commentId: T:NRules.RuleCompilerOptions
  fullName: NRules.RuleCompilerOptions
  nameWithType: RuleCompilerOptions
- uid: NRules.RuleCompilerOptions.UnsupportedExpressionHandling
  name: UnsupportedExpressionHandling
  href: api/NRules.RuleCompilerOptions.html#NRules_RuleCompilerOptions_UnsupportedExpressionHandling
  commentId: P:NRules.RuleCompilerOptions.UnsupportedExpressionHandling
  fullName: NRules.RuleCompilerOptions.UnsupportedExpressionHandling
  nameWithType: RuleCompilerOptions.UnsupportedExpressionHandling
- uid: NRules.RuleCompilerOptions.UnsupportedExpressionHandling*
  name: UnsupportedExpressionHandling
  href: api/NRules.RuleCompilerOptions.html#NRules_RuleCompilerOptions_UnsupportedExpressionHandling_
  commentId: Overload:NRules.RuleCompilerOptions.UnsupportedExpressionHandling
  isSpec: "True"
  fullName: NRules.RuleCompilerOptions.UnsupportedExpressionHandling
  nameWithType: RuleCompilerOptions.UnsupportedExpressionHandling
- uid: NRules.RuleCompilerUnsupportedExpressionsHandling
  name: RuleCompilerUnsupportedExpressionsHandling
  href: api/NRules.RuleCompilerUnsupportedExpressionsHandling.html
  commentId: T:NRules.RuleCompilerUnsupportedExpressionsHandling
  fullName: NRules.RuleCompilerUnsupportedExpressionsHandling
  nameWithType: RuleCompilerUnsupportedExpressionsHandling
- uid: NRules.RuleCompilerUnsupportedExpressionsHandling.FailFast
  name: FailFast
  href: api/NRules.RuleCompilerUnsupportedExpressionsHandling.html#NRules_RuleCompilerUnsupportedExpressionsHandling_FailFast
  commentId: F:NRules.RuleCompilerUnsupportedExpressionsHandling.FailFast
  fullName: NRules.RuleCompilerUnsupportedExpressionsHandling.FailFast
  nameWithType: RuleCompilerUnsupportedExpressionsHandling.FailFast
- uid: NRules.RuleCompilerUnsupportedExpressionsHandling.TreatAsNotEqual
  name: TreatAsNotEqual
  href: api/NRules.RuleCompilerUnsupportedExpressionsHandling.html#NRules_RuleCompilerUnsupportedExpressionsHandling_TreatAsNotEqual
  commentId: F:NRules.RuleCompilerUnsupportedExpressionsHandling.TreatAsNotEqual
  fullName: NRules.RuleCompilerUnsupportedExpressionsHandling.TreatAsNotEqual
  nameWithType: RuleCompilerUnsupportedExpressionsHandling.TreatAsNotEqual
- uid: NRules.RuleExecutionException
  name: RuleExecutionException
  href: api/NRules.RuleExecutionException.html
  commentId: T:NRules.RuleExecutionException
  fullName: NRules.RuleExecutionException
  nameWithType: RuleExecutionException
- uid: NRules.RuleExecutionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: RuleExecutionException(SerializationInfo, StreamingContext)
  href: api/NRules.RuleExecutionException.html#NRules_RuleExecutionException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:NRules.RuleExecutionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name.vb: New(SerializationInfo, StreamingContext)
  fullName: NRules.RuleExecutionException.RuleExecutionException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  fullName.vb: NRules.RuleExecutionException.New(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: RuleExecutionException.RuleExecutionException(SerializationInfo, StreamingContext)
  nameWithType.vb: RuleExecutionException.New(SerializationInfo, StreamingContext)
- uid: NRules.RuleExecutionException.#ctor*
  name: RuleExecutionException
  href: api/NRules.RuleExecutionException.html#NRules_RuleExecutionException__ctor_
  commentId: Overload:NRules.RuleExecutionException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleExecutionException.RuleExecutionException
  fullName.vb: NRules.RuleExecutionException.New
  nameWithType: RuleExecutionException.RuleExecutionException
  nameWithType.vb: RuleExecutionException.New
- uid: NRules.RuleExpressionEvaluationException
  name: RuleExpressionEvaluationException
  href: api/NRules.RuleExpressionEvaluationException.html
  commentId: T:NRules.RuleExpressionEvaluationException
  fullName: NRules.RuleExpressionEvaluationException
  nameWithType: RuleExpressionEvaluationException
- uid: NRules.RuleExpressionEvaluationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: RuleExpressionEvaluationException(SerializationInfo, StreamingContext)
  href: api/NRules.RuleExpressionEvaluationException.html#NRules_RuleExpressionEvaluationException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:NRules.RuleExpressionEvaluationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name.vb: New(SerializationInfo, StreamingContext)
  fullName: NRules.RuleExpressionEvaluationException.RuleExpressionEvaluationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  fullName.vb: NRules.RuleExpressionEvaluationException.New(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: RuleExpressionEvaluationException.RuleExpressionEvaluationException(SerializationInfo, StreamingContext)
  nameWithType.vb: RuleExpressionEvaluationException.New(SerializationInfo, StreamingContext)
- uid: NRules.RuleExpressionEvaluationException.#ctor*
  name: RuleExpressionEvaluationException
  href: api/NRules.RuleExpressionEvaluationException.html#NRules_RuleExpressionEvaluationException__ctor_
  commentId: Overload:NRules.RuleExpressionEvaluationException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleExpressionEvaluationException.RuleExpressionEvaluationException
  fullName.vb: NRules.RuleExpressionEvaluationException.New
  nameWithType: RuleExpressionEvaluationException.RuleExpressionEvaluationException
  nameWithType.vb: RuleExpressionEvaluationException.New
- uid: NRules.RuleExpressionEvaluationException.Expression
  name: Expression
  href: api/NRules.RuleExpressionEvaluationException.html#NRules_RuleExpressionEvaluationException_Expression
  commentId: P:NRules.RuleExpressionEvaluationException.Expression
  fullName: NRules.RuleExpressionEvaluationException.Expression
  nameWithType: RuleExpressionEvaluationException.Expression
- uid: NRules.RuleExpressionEvaluationException.Expression*
  name: Expression
  href: api/NRules.RuleExpressionEvaluationException.html#NRules_RuleExpressionEvaluationException_Expression_
  commentId: Overload:NRules.RuleExpressionEvaluationException.Expression
  isSpec: "True"
  fullName: NRules.RuleExpressionEvaluationException.Expression
  nameWithType: RuleExpressionEvaluationException.Expression
- uid: NRules.RuleExpressionEvaluationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData(SerializationInfo, StreamingContext)
  href: api/NRules.RuleExpressionEvaluationException.html#NRules_RuleExpressionEvaluationException_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:NRules.RuleExpressionEvaluationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: NRules.RuleExpressionEvaluationException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: RuleExpressionEvaluationException.GetObjectData(SerializationInfo, StreamingContext)
- uid: NRules.RuleExpressionEvaluationException.GetObjectData*
  name: GetObjectData
  href: api/NRules.RuleExpressionEvaluationException.html#NRules_RuleExpressionEvaluationException_GetObjectData_
  commentId: Overload:NRules.RuleExpressionEvaluationException.GetObjectData
  isSpec: "True"
  fullName: NRules.RuleExpressionEvaluationException.GetObjectData
  nameWithType: RuleExpressionEvaluationException.GetObjectData
- uid: NRules.RuleExpressionEvaluationException.Message
  name: Message
  href: api/NRules.RuleExpressionEvaluationException.html#NRules_RuleExpressionEvaluationException_Message
  commentId: P:NRules.RuleExpressionEvaluationException.Message
  fullName: NRules.RuleExpressionEvaluationException.Message
  nameWithType: RuleExpressionEvaluationException.Message
- uid: NRules.RuleExpressionEvaluationException.Message*
  name: Message
  href: api/NRules.RuleExpressionEvaluationException.html#NRules_RuleExpressionEvaluationException_Message_
  commentId: Overload:NRules.RuleExpressionEvaluationException.Message
  isSpec: "True"
  fullName: NRules.RuleExpressionEvaluationException.Message
  nameWithType: RuleExpressionEvaluationException.Message
- uid: NRules.RuleLhsExpressionEvaluationException
  name: RuleLhsExpressionEvaluationException
  href: api/NRules.RuleLhsExpressionEvaluationException.html
  commentId: T:NRules.RuleLhsExpressionEvaluationException
  fullName: NRules.RuleLhsExpressionEvaluationException
  nameWithType: RuleLhsExpressionEvaluationException
- uid: NRules.RuleLhsExpressionEvaluationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: RuleLhsExpressionEvaluationException(SerializationInfo, StreamingContext)
  href: api/NRules.RuleLhsExpressionEvaluationException.html#NRules_RuleLhsExpressionEvaluationException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:NRules.RuleLhsExpressionEvaluationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name.vb: New(SerializationInfo, StreamingContext)
  fullName: NRules.RuleLhsExpressionEvaluationException.RuleLhsExpressionEvaluationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  fullName.vb: NRules.RuleLhsExpressionEvaluationException.New(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: RuleLhsExpressionEvaluationException.RuleLhsExpressionEvaluationException(SerializationInfo, StreamingContext)
  nameWithType.vb: RuleLhsExpressionEvaluationException.New(SerializationInfo, StreamingContext)
- uid: NRules.RuleLhsExpressionEvaluationException.#ctor*
  name: RuleLhsExpressionEvaluationException
  href: api/NRules.RuleLhsExpressionEvaluationException.html#NRules_RuleLhsExpressionEvaluationException__ctor_
  commentId: Overload:NRules.RuleLhsExpressionEvaluationException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleLhsExpressionEvaluationException.RuleLhsExpressionEvaluationException
  fullName.vb: NRules.RuleLhsExpressionEvaluationException.New
  nameWithType: RuleLhsExpressionEvaluationException.RuleLhsExpressionEvaluationException
  nameWithType.vb: RuleLhsExpressionEvaluationException.New
- uid: NRules.RuleModel
  name: NRules.RuleModel
  href: api/NRules.RuleModel.html
  commentId: N:NRules.RuleModel
  fullName: NRules.RuleModel
  nameWithType: NRules.RuleModel
- uid: NRules.RuleModel.ActionElement
  name: ActionElement
  href: api/NRules.RuleModel.ActionElement.html
  commentId: T:NRules.RuleModel.ActionElement
  fullName: NRules.RuleModel.ActionElement
  nameWithType: ActionElement
- uid: NRules.RuleModel.ActionElement.ActionTrigger
  name: ActionTrigger
  href: api/NRules.RuleModel.ActionElement.html#NRules_RuleModel_ActionElement_ActionTrigger
  commentId: P:NRules.RuleModel.ActionElement.ActionTrigger
  fullName: NRules.RuleModel.ActionElement.ActionTrigger
  nameWithType: ActionElement.ActionTrigger
- uid: NRules.RuleModel.ActionElement.ActionTrigger*
  name: ActionTrigger
  href: api/NRules.RuleModel.ActionElement.html#NRules_RuleModel_ActionElement_ActionTrigger_
  commentId: Overload:NRules.RuleModel.ActionElement.ActionTrigger
  isSpec: "True"
  fullName: NRules.RuleModel.ActionElement.ActionTrigger
  nameWithType: ActionElement.ActionTrigger
- uid: NRules.RuleModel.ActionElement.DefaultTrigger
  name: DefaultTrigger
  href: api/NRules.RuleModel.ActionElement.html#NRules_RuleModel_ActionElement_DefaultTrigger
  commentId: F:NRules.RuleModel.ActionElement.DefaultTrigger
  fullName: NRules.RuleModel.ActionElement.DefaultTrigger
  nameWithType: ActionElement.DefaultTrigger
- uid: NRules.RuleModel.ActionElement.ElementType
  name: ElementType
  href: api/NRules.RuleModel.ActionElement.html#NRules_RuleModel_ActionElement_ElementType
  commentId: P:NRules.RuleModel.ActionElement.ElementType
  fullName: NRules.RuleModel.ActionElement.ElementType
  nameWithType: ActionElement.ElementType
- uid: NRules.RuleModel.ActionElement.ElementType*
  name: ElementType
  href: api/NRules.RuleModel.ActionElement.html#NRules_RuleModel_ActionElement_ElementType_
  commentId: Overload:NRules.RuleModel.ActionElement.ElementType
  isSpec: "True"
  fullName: NRules.RuleModel.ActionElement.ElementType
  nameWithType: ActionElement.ElementType
- uid: NRules.RuleModel.ActionGroupElement
  name: ActionGroupElement
  href: api/NRules.RuleModel.ActionGroupElement.html
  commentId: T:NRules.RuleModel.ActionGroupElement
  fullName: NRules.RuleModel.ActionGroupElement
  nameWithType: ActionGroupElement
- uid: NRules.RuleModel.ActionGroupElement.Actions
  name: Actions
  href: api/NRules.RuleModel.ActionGroupElement.html#NRules_RuleModel_ActionGroupElement_Actions
  commentId: P:NRules.RuleModel.ActionGroupElement.Actions
  fullName: NRules.RuleModel.ActionGroupElement.Actions
  nameWithType: ActionGroupElement.Actions
- uid: NRules.RuleModel.ActionGroupElement.Actions*
  name: Actions
  href: api/NRules.RuleModel.ActionGroupElement.html#NRules_RuleModel_ActionGroupElement_Actions_
  commentId: Overload:NRules.RuleModel.ActionGroupElement.Actions
  isSpec: "True"
  fullName: NRules.RuleModel.ActionGroupElement.Actions
  nameWithType: ActionGroupElement.Actions
- uid: NRules.RuleModel.ActionGroupElement.ElementType
  name: ElementType
  href: api/NRules.RuleModel.ActionGroupElement.html#NRules_RuleModel_ActionGroupElement_ElementType
  commentId: P:NRules.RuleModel.ActionGroupElement.ElementType
  fullName: NRules.RuleModel.ActionGroupElement.ElementType
  nameWithType: ActionGroupElement.ElementType
- uid: NRules.RuleModel.ActionGroupElement.ElementType*
  name: ElementType
  href: api/NRules.RuleModel.ActionGroupElement.html#NRules_RuleModel_ActionGroupElement_ElementType_
  commentId: Overload:NRules.RuleModel.ActionGroupElement.ElementType
  isSpec: "True"
  fullName: NRules.RuleModel.ActionGroupElement.ElementType
  nameWithType: ActionGroupElement.ElementType
- uid: NRules.RuleModel.ActionTrigger
  name: ActionTrigger
  href: api/NRules.RuleModel.ActionTrigger.html
  commentId: T:NRules.RuleModel.ActionTrigger
  fullName: NRules.RuleModel.ActionTrigger
  nameWithType: ActionTrigger
- uid: NRules.RuleModel.ActionTrigger.Activated
  name: Activated
  href: api/NRules.RuleModel.ActionTrigger.html#NRules_RuleModel_ActionTrigger_Activated
  commentId: F:NRules.RuleModel.ActionTrigger.Activated
  fullName: NRules.RuleModel.ActionTrigger.Activated
  nameWithType: ActionTrigger.Activated
- uid: NRules.RuleModel.ActionTrigger.Deactivated
  name: Deactivated
  href: api/NRules.RuleModel.ActionTrigger.html#NRules_RuleModel_ActionTrigger_Deactivated
  commentId: F:NRules.RuleModel.ActionTrigger.Deactivated
  fullName: NRules.RuleModel.ActionTrigger.Deactivated
  nameWithType: ActionTrigger.Deactivated
- uid: NRules.RuleModel.ActionTrigger.None
  name: None
  href: api/NRules.RuleModel.ActionTrigger.html#NRules_RuleModel_ActionTrigger_None
  commentId: F:NRules.RuleModel.ActionTrigger.None
  fullName: NRules.RuleModel.ActionTrigger.None
  nameWithType: ActionTrigger.None
- uid: NRules.RuleModel.ActionTrigger.Reactivated
  name: Reactivated
  href: api/NRules.RuleModel.ActionTrigger.html#NRules_RuleModel_ActionTrigger_Reactivated
  commentId: F:NRules.RuleModel.ActionTrigger.Reactivated
  fullName: NRules.RuleModel.ActionTrigger.Reactivated
  nameWithType: ActionTrigger.Reactivated
- uid: NRules.RuleModel.AggregateElement
  name: AggregateElement
  href: api/NRules.RuleModel.AggregateElement.html
  commentId: T:NRules.RuleModel.AggregateElement
  fullName: NRules.RuleModel.AggregateElement
  nameWithType: AggregateElement
- uid: NRules.RuleModel.AggregateElement.CollectName
  name: CollectName
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_CollectName
  commentId: F:NRules.RuleModel.AggregateElement.CollectName
  fullName: NRules.RuleModel.AggregateElement.CollectName
  nameWithType: AggregateElement.CollectName
- uid: NRules.RuleModel.AggregateElement.CustomFactoryType
  name: CustomFactoryType
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_CustomFactoryType
  commentId: P:NRules.RuleModel.AggregateElement.CustomFactoryType
  fullName: NRules.RuleModel.AggregateElement.CustomFactoryType
  nameWithType: AggregateElement.CustomFactoryType
- uid: NRules.RuleModel.AggregateElement.CustomFactoryType*
  name: CustomFactoryType
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_CustomFactoryType_
  commentId: Overload:NRules.RuleModel.AggregateElement.CustomFactoryType
  isSpec: "True"
  fullName: NRules.RuleModel.AggregateElement.CustomFactoryType
  nameWithType: AggregateElement.CustomFactoryType
- uid: NRules.RuleModel.AggregateElement.ElementSelectorName
  name: ElementSelectorName
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_ElementSelectorName
  commentId: F:NRules.RuleModel.AggregateElement.ElementSelectorName
  fullName: NRules.RuleModel.AggregateElement.ElementSelectorName
  nameWithType: AggregateElement.ElementSelectorName
- uid: NRules.RuleModel.AggregateElement.ElementType
  name: ElementType
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_ElementType
  commentId: P:NRules.RuleModel.AggregateElement.ElementType
  fullName: NRules.RuleModel.AggregateElement.ElementType
  nameWithType: AggregateElement.ElementType
- uid: NRules.RuleModel.AggregateElement.ElementType*
  name: ElementType
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_ElementType_
  commentId: Overload:NRules.RuleModel.AggregateElement.ElementType
  isSpec: "True"
  fullName: NRules.RuleModel.AggregateElement.ElementType
  nameWithType: AggregateElement.ElementType
- uid: NRules.RuleModel.AggregateElement.Expressions
  name: Expressions
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_Expressions
  commentId: P:NRules.RuleModel.AggregateElement.Expressions
  fullName: NRules.RuleModel.AggregateElement.Expressions
  nameWithType: AggregateElement.Expressions
- uid: NRules.RuleModel.AggregateElement.Expressions*
  name: Expressions
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_Expressions_
  commentId: Overload:NRules.RuleModel.AggregateElement.Expressions
  isSpec: "True"
  fullName: NRules.RuleModel.AggregateElement.Expressions
  nameWithType: AggregateElement.Expressions
- uid: NRules.RuleModel.AggregateElement.FlattenName
  name: FlattenName
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_FlattenName
  commentId: F:NRules.RuleModel.AggregateElement.FlattenName
  fullName: NRules.RuleModel.AggregateElement.FlattenName
  nameWithType: AggregateElement.FlattenName
- uid: NRules.RuleModel.AggregateElement.GroupByName
  name: GroupByName
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_GroupByName
  commentId: F:NRules.RuleModel.AggregateElement.GroupByName
  fullName: NRules.RuleModel.AggregateElement.GroupByName
  nameWithType: AggregateElement.GroupByName
- uid: NRules.RuleModel.AggregateElement.KeySelectorAscendingName
  name: KeySelectorAscendingName
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_KeySelectorAscendingName
  commentId: F:NRules.RuleModel.AggregateElement.KeySelectorAscendingName
  fullName: NRules.RuleModel.AggregateElement.KeySelectorAscendingName
  nameWithType: AggregateElement.KeySelectorAscendingName
- uid: NRules.RuleModel.AggregateElement.KeySelectorDescendingName
  name: KeySelectorDescendingName
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_KeySelectorDescendingName
  commentId: F:NRules.RuleModel.AggregateElement.KeySelectorDescendingName
  fullName: NRules.RuleModel.AggregateElement.KeySelectorDescendingName
  nameWithType: AggregateElement.KeySelectorDescendingName
- uid: NRules.RuleModel.AggregateElement.KeySelectorName
  name: KeySelectorName
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_KeySelectorName
  commentId: F:NRules.RuleModel.AggregateElement.KeySelectorName
  fullName: NRules.RuleModel.AggregateElement.KeySelectorName
  nameWithType: AggregateElement.KeySelectorName
- uid: NRules.RuleModel.AggregateElement.Name
  name: Name
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_Name
  commentId: P:NRules.RuleModel.AggregateElement.Name
  fullName: NRules.RuleModel.AggregateElement.Name
  nameWithType: AggregateElement.Name
- uid: NRules.RuleModel.AggregateElement.Name*
  name: Name
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_Name_
  commentId: Overload:NRules.RuleModel.AggregateElement.Name
  isSpec: "True"
  fullName: NRules.RuleModel.AggregateElement.Name
  nameWithType: AggregateElement.Name
- uid: NRules.RuleModel.AggregateElement.ProjectName
  name: ProjectName
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_ProjectName
  commentId: F:NRules.RuleModel.AggregateElement.ProjectName
  fullName: NRules.RuleModel.AggregateElement.ProjectName
  nameWithType: AggregateElement.ProjectName
- uid: NRules.RuleModel.AggregateElement.ResultType
  name: ResultType
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_ResultType
  commentId: P:NRules.RuleModel.AggregateElement.ResultType
  fullName: NRules.RuleModel.AggregateElement.ResultType
  nameWithType: AggregateElement.ResultType
- uid: NRules.RuleModel.AggregateElement.ResultType*
  name: ResultType
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_ResultType_
  commentId: Overload:NRules.RuleModel.AggregateElement.ResultType
  isSpec: "True"
  fullName: NRules.RuleModel.AggregateElement.ResultType
  nameWithType: AggregateElement.ResultType
- uid: NRules.RuleModel.AggregateElement.SelectorName
  name: SelectorName
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_SelectorName
  commentId: F:NRules.RuleModel.AggregateElement.SelectorName
  fullName: NRules.RuleModel.AggregateElement.SelectorName
  nameWithType: AggregateElement.SelectorName
- uid: NRules.RuleModel.AggregateElement.Source
  name: Source
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_Source
  commentId: P:NRules.RuleModel.AggregateElement.Source
  fullName: NRules.RuleModel.AggregateElement.Source
  nameWithType: AggregateElement.Source
- uid: NRules.RuleModel.AggregateElement.Source*
  name: Source
  href: api/NRules.RuleModel.AggregateElement.html#NRules_RuleModel_AggregateElement_Source_
  commentId: Overload:NRules.RuleModel.AggregateElement.Source
  isSpec: "True"
  fullName: NRules.RuleModel.AggregateElement.Source
  nameWithType: AggregateElement.Source
- uid: NRules.RuleModel.AndElement
  name: AndElement
  href: api/NRules.RuleModel.AndElement.html
  commentId: T:NRules.RuleModel.AndElement
  fullName: NRules.RuleModel.AndElement
  nameWithType: AndElement
- uid: NRules.RuleModel.AndElement.ElementType
  name: ElementType
  href: api/NRules.RuleModel.AndElement.html#NRules_RuleModel_AndElement_ElementType
  commentId: P:NRules.RuleModel.AndElement.ElementType
  fullName: NRules.RuleModel.AndElement.ElementType
  nameWithType: AndElement.ElementType
- uid: NRules.RuleModel.AndElement.ElementType*
  name: ElementType
  href: api/NRules.RuleModel.AndElement.html#NRules_RuleModel_AndElement_ElementType_
  commentId: Overload:NRules.RuleModel.AndElement.ElementType
  isSpec: "True"
  fullName: NRules.RuleModel.AndElement.ElementType
  nameWithType: AndElement.ElementType
- uid: NRules.RuleModel.BindingElement
  name: BindingElement
  href: api/NRules.RuleModel.BindingElement.html
  commentId: T:NRules.RuleModel.BindingElement
  fullName: NRules.RuleModel.BindingElement
  nameWithType: BindingElement
- uid: NRules.RuleModel.BindingElement.ElementType
  name: ElementType
  href: api/NRules.RuleModel.BindingElement.html#NRules_RuleModel_BindingElement_ElementType
  commentId: P:NRules.RuleModel.BindingElement.ElementType
  fullName: NRules.RuleModel.BindingElement.ElementType
  nameWithType: BindingElement.ElementType
- uid: NRules.RuleModel.BindingElement.ElementType*
  name: ElementType
  href: api/NRules.RuleModel.BindingElement.html#NRules_RuleModel_BindingElement_ElementType_
  commentId: Overload:NRules.RuleModel.BindingElement.ElementType
  isSpec: "True"
  fullName: NRules.RuleModel.BindingElement.ElementType
  nameWithType: BindingElement.ElementType
- uid: NRules.RuleModel.BindingElement.ResultType
  name: ResultType
  href: api/NRules.RuleModel.BindingElement.html#NRules_RuleModel_BindingElement_ResultType
  commentId: P:NRules.RuleModel.BindingElement.ResultType
  fullName: NRules.RuleModel.BindingElement.ResultType
  nameWithType: BindingElement.ResultType
- uid: NRules.RuleModel.BindingElement.ResultType*
  name: ResultType
  href: api/NRules.RuleModel.BindingElement.html#NRules_RuleModel_BindingElement_ResultType_
  commentId: Overload:NRules.RuleModel.BindingElement.ResultType
  isSpec: "True"
  fullName: NRules.RuleModel.BindingElement.ResultType
  nameWithType: BindingElement.ResultType
- uid: NRules.RuleModel.Builders
  name: NRules.RuleModel.Builders
  href: api/NRules.RuleModel.Builders.html
  commentId: N:NRules.RuleModel.Builders
  fullName: NRules.RuleModel.Builders
  nameWithType: NRules.RuleModel.Builders
- uid: NRules.RuleModel.Builders.ActionGroupBuilder
  name: ActionGroupBuilder
  href: api/NRules.RuleModel.Builders.ActionGroupBuilder.html
  commentId: T:NRules.RuleModel.Builders.ActionGroupBuilder
  fullName: NRules.RuleModel.Builders.ActionGroupBuilder
  nameWithType: ActionGroupBuilder
- uid: NRules.RuleModel.Builders.ActionGroupBuilder.#ctor
  name: ActionGroupBuilder()
  href: api/NRules.RuleModel.Builders.ActionGroupBuilder.html#NRules_RuleModel_Builders_ActionGroupBuilder__ctor
  commentId: M:NRules.RuleModel.Builders.ActionGroupBuilder.#ctor
  name.vb: New()
  fullName: NRules.RuleModel.Builders.ActionGroupBuilder.ActionGroupBuilder()
  fullName.vb: NRules.RuleModel.Builders.ActionGroupBuilder.New()
  nameWithType: ActionGroupBuilder.ActionGroupBuilder()
  nameWithType.vb: ActionGroupBuilder.New()
- uid: NRules.RuleModel.Builders.ActionGroupBuilder.#ctor*
  name: ActionGroupBuilder
  href: api/NRules.RuleModel.Builders.ActionGroupBuilder.html#NRules_RuleModel_Builders_ActionGroupBuilder__ctor_
  commentId: Overload:NRules.RuleModel.Builders.ActionGroupBuilder.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleModel.Builders.ActionGroupBuilder.ActionGroupBuilder
  fullName.vb: NRules.RuleModel.Builders.ActionGroupBuilder.New
  nameWithType: ActionGroupBuilder.ActionGroupBuilder
  nameWithType.vb: ActionGroupBuilder.New
- uid: NRules.RuleModel.Builders.ActionGroupBuilder.Action(System.Linq.Expressions.LambdaExpression)
  name: Action(LambdaExpression)
  href: api/NRules.RuleModel.Builders.ActionGroupBuilder.html#NRules_RuleModel_Builders_ActionGroupBuilder_Action_System_Linq_Expressions_LambdaExpression_
  commentId: M:NRules.RuleModel.Builders.ActionGroupBuilder.Action(System.Linq.Expressions.LambdaExpression)
  fullName: NRules.RuleModel.Builders.ActionGroupBuilder.Action(System.Linq.Expressions.LambdaExpression)
  nameWithType: ActionGroupBuilder.Action(LambdaExpression)
- uid: NRules.RuleModel.Builders.ActionGroupBuilder.Action(System.Linq.Expressions.LambdaExpression,NRules.RuleModel.ActionTrigger)
  name: Action(LambdaExpression, ActionTrigger)
  href: api/NRules.RuleModel.Builders.ActionGroupBuilder.html#NRules_RuleModel_Builders_ActionGroupBuilder_Action_System_Linq_Expressions_LambdaExpression_NRules_RuleModel_ActionTrigger_
  commentId: M:NRules.RuleModel.Builders.ActionGroupBuilder.Action(System.Linq.Expressions.LambdaExpression,NRules.RuleModel.ActionTrigger)
  fullName: NRules.RuleModel.Builders.ActionGroupBuilder.Action(System.Linq.Expressions.LambdaExpression, NRules.RuleModel.ActionTrigger)
  nameWithType: ActionGroupBuilder.Action(LambdaExpression, ActionTrigger)
- uid: NRules.RuleModel.Builders.ActionGroupBuilder.Action*
  name: Action
  href: api/NRules.RuleModel.Builders.ActionGroupBuilder.html#NRules_RuleModel_Builders_ActionGroupBuilder_Action_
  commentId: Overload:NRules.RuleModel.Builders.ActionGroupBuilder.Action
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.ActionGroupBuilder.Action
  nameWithType: ActionGroupBuilder.Action
- uid: NRules.RuleModel.Builders.AggregateBuilder
  name: AggregateBuilder
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html
  commentId: T:NRules.RuleModel.Builders.AggregateBuilder
  fullName: NRules.RuleModel.Builders.AggregateBuilder
  nameWithType: AggregateBuilder
- uid: NRules.RuleModel.Builders.AggregateBuilder.#ctor
  name: AggregateBuilder()
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder__ctor
  commentId: M:NRules.RuleModel.Builders.AggregateBuilder.#ctor
  name.vb: New()
  fullName: NRules.RuleModel.Builders.AggregateBuilder.AggregateBuilder()
  fullName.vb: NRules.RuleModel.Builders.AggregateBuilder.New()
  nameWithType: AggregateBuilder.AggregateBuilder()
  nameWithType.vb: AggregateBuilder.New()
- uid: NRules.RuleModel.Builders.AggregateBuilder.#ctor*
  name: AggregateBuilder
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder__ctor_
  commentId: Overload:NRules.RuleModel.Builders.AggregateBuilder.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleModel.Builders.AggregateBuilder.AggregateBuilder
  fullName.vb: NRules.RuleModel.Builders.AggregateBuilder.New
  nameWithType: AggregateBuilder.AggregateBuilder
  nameWithType.vb: AggregateBuilder.New
- uid: NRules.RuleModel.Builders.AggregateBuilder.Aggregator(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Linq.Expressions.LambdaExpression}},System.Type)
  name: Aggregator(string, IEnumerable<KeyValuePair<string, LambdaExpression>>, Type)
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_Aggregator_System_String_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_Linq_Expressions_LambdaExpression___System_Type_
  commentId: M:NRules.RuleModel.Builders.AggregateBuilder.Aggregator(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Linq.Expressions.LambdaExpression}},System.Type)
  name.vb: Aggregator(String, IEnumerable(Of KeyValuePair(Of String, LambdaExpression)), Type)
  fullName: NRules.RuleModel.Builders.AggregateBuilder.Aggregator(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Linq.Expressions.LambdaExpression>>, System.Type)
  fullName.vb: NRules.RuleModel.Builders.AggregateBuilder.Aggregator(String, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, System.Linq.Expressions.LambdaExpression)), System.Type)
  nameWithType: AggregateBuilder.Aggregator(string, IEnumerable<KeyValuePair<string, LambdaExpression>>, Type)
  nameWithType.vb: AggregateBuilder.Aggregator(String, IEnumerable(Of KeyValuePair(Of String, LambdaExpression)), Type)
- uid: NRules.RuleModel.Builders.AggregateBuilder.Aggregator*
  name: Aggregator
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_Aggregator_
  commentId: Overload:NRules.RuleModel.Builders.AggregateBuilder.Aggregator
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.AggregateBuilder.Aggregator
  nameWithType: AggregateBuilder.Aggregator
- uid: NRules.RuleModel.Builders.AggregateBuilder.Collect
  name: Collect()
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_Collect
  commentId: M:NRules.RuleModel.Builders.AggregateBuilder.Collect
  fullName: NRules.RuleModel.Builders.AggregateBuilder.Collect()
  nameWithType: AggregateBuilder.Collect()
- uid: NRules.RuleModel.Builders.AggregateBuilder.Collect*
  name: Collect
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_Collect_
  commentId: Overload:NRules.RuleModel.Builders.AggregateBuilder.Collect
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.AggregateBuilder.Collect
  nameWithType: AggregateBuilder.Collect
- uid: NRules.RuleModel.Builders.AggregateBuilder.Flatten(System.Linq.Expressions.LambdaExpression)
  name: Flatten(LambdaExpression)
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_Flatten_System_Linq_Expressions_LambdaExpression_
  commentId: M:NRules.RuleModel.Builders.AggregateBuilder.Flatten(System.Linq.Expressions.LambdaExpression)
  fullName: NRules.RuleModel.Builders.AggregateBuilder.Flatten(System.Linq.Expressions.LambdaExpression)
  nameWithType: AggregateBuilder.Flatten(LambdaExpression)
- uid: NRules.RuleModel.Builders.AggregateBuilder.Flatten*
  name: Flatten
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_Flatten_
  commentId: Overload:NRules.RuleModel.Builders.AggregateBuilder.Flatten
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.AggregateBuilder.Flatten
  nameWithType: AggregateBuilder.Flatten
- uid: NRules.RuleModel.Builders.AggregateBuilder.GroupBy(System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.LambdaExpression)
  name: GroupBy(LambdaExpression, LambdaExpression)
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_GroupBy_System_Linq_Expressions_LambdaExpression_System_Linq_Expressions_LambdaExpression_
  commentId: M:NRules.RuleModel.Builders.AggregateBuilder.GroupBy(System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.LambdaExpression)
  fullName: NRules.RuleModel.Builders.AggregateBuilder.GroupBy(System.Linq.Expressions.LambdaExpression, System.Linq.Expressions.LambdaExpression)
  nameWithType: AggregateBuilder.GroupBy(LambdaExpression, LambdaExpression)
- uid: NRules.RuleModel.Builders.AggregateBuilder.GroupBy*
  name: GroupBy
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_GroupBy_
  commentId: Overload:NRules.RuleModel.Builders.AggregateBuilder.GroupBy
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.AggregateBuilder.GroupBy
  nameWithType: AggregateBuilder.GroupBy
- uid: NRules.RuleModel.Builders.AggregateBuilder.OrderBy(System.Linq.Expressions.LambdaExpression,NRules.RuleModel.SortDirection)
  name: OrderBy(LambdaExpression, SortDirection)
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_OrderBy_System_Linq_Expressions_LambdaExpression_NRules_RuleModel_SortDirection_
  commentId: M:NRules.RuleModel.Builders.AggregateBuilder.OrderBy(System.Linq.Expressions.LambdaExpression,NRules.RuleModel.SortDirection)
  fullName: NRules.RuleModel.Builders.AggregateBuilder.OrderBy(System.Linq.Expressions.LambdaExpression, NRules.RuleModel.SortDirection)
  nameWithType: AggregateBuilder.OrderBy(LambdaExpression, SortDirection)
- uid: NRules.RuleModel.Builders.AggregateBuilder.OrderBy*
  name: OrderBy
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_OrderBy_
  commentId: Overload:NRules.RuleModel.Builders.AggregateBuilder.OrderBy
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.AggregateBuilder.OrderBy
  nameWithType: AggregateBuilder.OrderBy
- uid: NRules.RuleModel.Builders.AggregateBuilder.Pattern(NRules.RuleModel.Builders.PatternBuilder)
  name: Pattern(PatternBuilder)
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_Pattern_NRules_RuleModel_Builders_PatternBuilder_
  commentId: M:NRules.RuleModel.Builders.AggregateBuilder.Pattern(NRules.RuleModel.Builders.PatternBuilder)
  fullName: NRules.RuleModel.Builders.AggregateBuilder.Pattern(NRules.RuleModel.Builders.PatternBuilder)
  nameWithType: AggregateBuilder.Pattern(PatternBuilder)
- uid: NRules.RuleModel.Builders.AggregateBuilder.Pattern(NRules.RuleModel.Declaration)
  name: Pattern(Declaration)
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_Pattern_NRules_RuleModel_Declaration_
  commentId: M:NRules.RuleModel.Builders.AggregateBuilder.Pattern(NRules.RuleModel.Declaration)
  fullName: NRules.RuleModel.Builders.AggregateBuilder.Pattern(NRules.RuleModel.Declaration)
  nameWithType: AggregateBuilder.Pattern(Declaration)
- uid: NRules.RuleModel.Builders.AggregateBuilder.Pattern(NRules.RuleModel.PatternElement)
  name: Pattern(PatternElement)
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_Pattern_NRules_RuleModel_PatternElement_
  commentId: M:NRules.RuleModel.Builders.AggregateBuilder.Pattern(NRules.RuleModel.PatternElement)
  fullName: NRules.RuleModel.Builders.AggregateBuilder.Pattern(NRules.RuleModel.PatternElement)
  nameWithType: AggregateBuilder.Pattern(PatternElement)
- uid: NRules.RuleModel.Builders.AggregateBuilder.Pattern(System.Type,System.String)
  name: Pattern(Type, string)
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_Pattern_System_Type_System_String_
  commentId: M:NRules.RuleModel.Builders.AggregateBuilder.Pattern(System.Type,System.String)
  name.vb: Pattern(Type, String)
  fullName: NRules.RuleModel.Builders.AggregateBuilder.Pattern(System.Type, string)
  fullName.vb: NRules.RuleModel.Builders.AggregateBuilder.Pattern(System.Type, String)
  nameWithType: AggregateBuilder.Pattern(Type, string)
  nameWithType.vb: AggregateBuilder.Pattern(Type, String)
- uid: NRules.RuleModel.Builders.AggregateBuilder.Pattern*
  name: Pattern
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_Pattern_
  commentId: Overload:NRules.RuleModel.Builders.AggregateBuilder.Pattern
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.AggregateBuilder.Pattern
  nameWithType: AggregateBuilder.Pattern
- uid: NRules.RuleModel.Builders.AggregateBuilder.Project(System.Linq.Expressions.LambdaExpression)
  name: Project(LambdaExpression)
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_Project_System_Linq_Expressions_LambdaExpression_
  commentId: M:NRules.RuleModel.Builders.AggregateBuilder.Project(System.Linq.Expressions.LambdaExpression)
  fullName: NRules.RuleModel.Builders.AggregateBuilder.Project(System.Linq.Expressions.LambdaExpression)
  nameWithType: AggregateBuilder.Project(LambdaExpression)
- uid: NRules.RuleModel.Builders.AggregateBuilder.Project*
  name: Project
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_Project_
  commentId: Overload:NRules.RuleModel.Builders.AggregateBuilder.Project
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.AggregateBuilder.Project
  nameWithType: AggregateBuilder.Project
- uid: NRules.RuleModel.Builders.AggregateBuilder.ResultType(System.Type)
  name: ResultType(Type)
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_ResultType_System_Type_
  commentId: M:NRules.RuleModel.Builders.AggregateBuilder.ResultType(System.Type)
  fullName: NRules.RuleModel.Builders.AggregateBuilder.ResultType(System.Type)
  nameWithType: AggregateBuilder.ResultType(Type)
- uid: NRules.RuleModel.Builders.AggregateBuilder.ResultType*
  name: ResultType
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_ResultType_
  commentId: Overload:NRules.RuleModel.Builders.AggregateBuilder.ResultType
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.AggregateBuilder.ResultType
  nameWithType: AggregateBuilder.ResultType
- uid: NRules.RuleModel.Builders.AggregateBuilder.ToLookup(System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.LambdaExpression)
  name: ToLookup(LambdaExpression, LambdaExpression)
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_ToLookup_System_Linq_Expressions_LambdaExpression_System_Linq_Expressions_LambdaExpression_
  commentId: M:NRules.RuleModel.Builders.AggregateBuilder.ToLookup(System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.LambdaExpression)
  fullName: NRules.RuleModel.Builders.AggregateBuilder.ToLookup(System.Linq.Expressions.LambdaExpression, System.Linq.Expressions.LambdaExpression)
  nameWithType: AggregateBuilder.ToLookup(LambdaExpression, LambdaExpression)
- uid: NRules.RuleModel.Builders.AggregateBuilder.ToLookup*
  name: ToLookup
  href: api/NRules.RuleModel.Builders.AggregateBuilder.html#NRules_RuleModel_Builders_AggregateBuilder_ToLookup_
  commentId: Overload:NRules.RuleModel.Builders.AggregateBuilder.ToLookup
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.AggregateBuilder.ToLookup
  nameWithType: AggregateBuilder.ToLookup
- uid: NRules.RuleModel.Builders.BindingBuilder
  name: BindingBuilder
  href: api/NRules.RuleModel.Builders.BindingBuilder.html
  commentId: T:NRules.RuleModel.Builders.BindingBuilder
  fullName: NRules.RuleModel.Builders.BindingBuilder
  nameWithType: BindingBuilder
- uid: NRules.RuleModel.Builders.BindingBuilder.#ctor
  name: BindingBuilder()
  href: api/NRules.RuleModel.Builders.BindingBuilder.html#NRules_RuleModel_Builders_BindingBuilder__ctor
  commentId: M:NRules.RuleModel.Builders.BindingBuilder.#ctor
  name.vb: New()
  fullName: NRules.RuleModel.Builders.BindingBuilder.BindingBuilder()
  fullName.vb: NRules.RuleModel.Builders.BindingBuilder.New()
  nameWithType: BindingBuilder.BindingBuilder()
  nameWithType.vb: BindingBuilder.New()
- uid: NRules.RuleModel.Builders.BindingBuilder.#ctor*
  name: BindingBuilder
  href: api/NRules.RuleModel.Builders.BindingBuilder.html#NRules_RuleModel_Builders_BindingBuilder__ctor_
  commentId: Overload:NRules.RuleModel.Builders.BindingBuilder.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleModel.Builders.BindingBuilder.BindingBuilder
  fullName.vb: NRules.RuleModel.Builders.BindingBuilder.New
  nameWithType: BindingBuilder.BindingBuilder
  nameWithType.vb: BindingBuilder.New
- uid: NRules.RuleModel.Builders.BindingBuilder.BindingExpression(System.Linq.Expressions.LambdaExpression)
  name: BindingExpression(LambdaExpression)
  href: api/NRules.RuleModel.Builders.BindingBuilder.html#NRules_RuleModel_Builders_BindingBuilder_BindingExpression_System_Linq_Expressions_LambdaExpression_
  commentId: M:NRules.RuleModel.Builders.BindingBuilder.BindingExpression(System.Linq.Expressions.LambdaExpression)
  fullName: NRules.RuleModel.Builders.BindingBuilder.BindingExpression(System.Linq.Expressions.LambdaExpression)
  nameWithType: BindingBuilder.BindingExpression(LambdaExpression)
- uid: NRules.RuleModel.Builders.BindingBuilder.BindingExpression*
  name: BindingExpression
  href: api/NRules.RuleModel.Builders.BindingBuilder.html#NRules_RuleModel_Builders_BindingBuilder_BindingExpression_
  commentId: Overload:NRules.RuleModel.Builders.BindingBuilder.BindingExpression
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.BindingBuilder.BindingExpression
  nameWithType: BindingBuilder.BindingExpression
- uid: NRules.RuleModel.Builders.BindingBuilder.ResultType(System.Type)
  name: ResultType(Type)
  href: api/NRules.RuleModel.Builders.BindingBuilder.html#NRules_RuleModel_Builders_BindingBuilder_ResultType_System_Type_
  commentId: M:NRules.RuleModel.Builders.BindingBuilder.ResultType(System.Type)
  fullName: NRules.RuleModel.Builders.BindingBuilder.ResultType(System.Type)
  nameWithType: BindingBuilder.ResultType(Type)
- uid: NRules.RuleModel.Builders.BindingBuilder.ResultType*
  name: ResultType
  href: api/NRules.RuleModel.Builders.BindingBuilder.html#NRules_RuleModel_Builders_BindingBuilder_ResultType_
  commentId: Overload:NRules.RuleModel.Builders.BindingBuilder.ResultType
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.BindingBuilder.ResultType
  nameWithType: BindingBuilder.ResultType
- uid: NRules.RuleModel.Builders.DependencyGroupBuilder
  name: DependencyGroupBuilder
  href: api/NRules.RuleModel.Builders.DependencyGroupBuilder.html
  commentId: T:NRules.RuleModel.Builders.DependencyGroupBuilder
  fullName: NRules.RuleModel.Builders.DependencyGroupBuilder
  nameWithType: DependencyGroupBuilder
- uid: NRules.RuleModel.Builders.DependencyGroupBuilder.#ctor
  name: DependencyGroupBuilder()
  href: api/NRules.RuleModel.Builders.DependencyGroupBuilder.html#NRules_RuleModel_Builders_DependencyGroupBuilder__ctor
  commentId: M:NRules.RuleModel.Builders.DependencyGroupBuilder.#ctor
  name.vb: New()
  fullName: NRules.RuleModel.Builders.DependencyGroupBuilder.DependencyGroupBuilder()
  fullName.vb: NRules.RuleModel.Builders.DependencyGroupBuilder.New()
  nameWithType: DependencyGroupBuilder.DependencyGroupBuilder()
  nameWithType.vb: DependencyGroupBuilder.New()
- uid: NRules.RuleModel.Builders.DependencyGroupBuilder.#ctor*
  name: DependencyGroupBuilder
  href: api/NRules.RuleModel.Builders.DependencyGroupBuilder.html#NRules_RuleModel_Builders_DependencyGroupBuilder__ctor_
  commentId: Overload:NRules.RuleModel.Builders.DependencyGroupBuilder.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleModel.Builders.DependencyGroupBuilder.DependencyGroupBuilder
  fullName.vb: NRules.RuleModel.Builders.DependencyGroupBuilder.New
  nameWithType: DependencyGroupBuilder.DependencyGroupBuilder
  nameWithType.vb: DependencyGroupBuilder.New
- uid: NRules.RuleModel.Builders.DependencyGroupBuilder.Dependency(NRules.RuleModel.DependencyElement)
  name: Dependency(DependencyElement)
  href: api/NRules.RuleModel.Builders.DependencyGroupBuilder.html#NRules_RuleModel_Builders_DependencyGroupBuilder_Dependency_NRules_RuleModel_DependencyElement_
  commentId: M:NRules.RuleModel.Builders.DependencyGroupBuilder.Dependency(NRules.RuleModel.DependencyElement)
  fullName: NRules.RuleModel.Builders.DependencyGroupBuilder.Dependency(NRules.RuleModel.DependencyElement)
  nameWithType: DependencyGroupBuilder.Dependency(DependencyElement)
- uid: NRules.RuleModel.Builders.DependencyGroupBuilder.Dependency(System.Type,System.String)
  name: Dependency(Type, string)
  href: api/NRules.RuleModel.Builders.DependencyGroupBuilder.html#NRules_RuleModel_Builders_DependencyGroupBuilder_Dependency_System_Type_System_String_
  commentId: M:NRules.RuleModel.Builders.DependencyGroupBuilder.Dependency(System.Type,System.String)
  name.vb: Dependency(Type, String)
  fullName: NRules.RuleModel.Builders.DependencyGroupBuilder.Dependency(System.Type, string)
  fullName.vb: NRules.RuleModel.Builders.DependencyGroupBuilder.Dependency(System.Type, String)
  nameWithType: DependencyGroupBuilder.Dependency(Type, string)
  nameWithType.vb: DependencyGroupBuilder.Dependency(Type, String)
- uid: NRules.RuleModel.Builders.DependencyGroupBuilder.Dependency*
  name: Dependency
  href: api/NRules.RuleModel.Builders.DependencyGroupBuilder.html#NRules_RuleModel_Builders_DependencyGroupBuilder_Dependency_
  commentId: Overload:NRules.RuleModel.Builders.DependencyGroupBuilder.Dependency
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.DependencyGroupBuilder.Dependency
  nameWithType: DependencyGroupBuilder.Dependency
- uid: NRules.RuleModel.Builders.Element
  name: Element
  href: api/NRules.RuleModel.Builders.Element.html
  commentId: T:NRules.RuleModel.Builders.Element
  fullName: NRules.RuleModel.Builders.Element
  nameWithType: Element
- uid: NRules.RuleModel.Builders.Element.Action(System.Linq.Expressions.LambdaExpression)
  name: Action(LambdaExpression)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Action_System_Linq_Expressions_LambdaExpression_
  commentId: M:NRules.RuleModel.Builders.Element.Action(System.Linq.Expressions.LambdaExpression)
  fullName: NRules.RuleModel.Builders.Element.Action(System.Linq.Expressions.LambdaExpression)
  nameWithType: Element.Action(LambdaExpression)
- uid: NRules.RuleModel.Builders.Element.Action(System.Linq.Expressions.LambdaExpression,NRules.RuleModel.ActionTrigger)
  name: Action(LambdaExpression, ActionTrigger)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Action_System_Linq_Expressions_LambdaExpression_NRules_RuleModel_ActionTrigger_
  commentId: M:NRules.RuleModel.Builders.Element.Action(System.Linq.Expressions.LambdaExpression,NRules.RuleModel.ActionTrigger)
  fullName: NRules.RuleModel.Builders.Element.Action(System.Linq.Expressions.LambdaExpression, NRules.RuleModel.ActionTrigger)
  nameWithType: Element.Action(LambdaExpression, ActionTrigger)
- uid: NRules.RuleModel.Builders.Element.Action*
  name: Action
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Action_
  commentId: Overload:NRules.RuleModel.Builders.Element.Action
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.Action
  nameWithType: Element.Action
- uid: NRules.RuleModel.Builders.Element.ActionGroup(NRules.RuleModel.ActionElement[])
  name: ActionGroup(params ActionElement[])
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_ActionGroup_NRules_RuleModel_ActionElement___
  commentId: M:NRules.RuleModel.Builders.Element.ActionGroup(NRules.RuleModel.ActionElement[])
  name.vb: ActionGroup(ParamArray ActionElement())
  fullName: NRules.RuleModel.Builders.Element.ActionGroup(params NRules.RuleModel.ActionElement[])
  fullName.vb: NRules.RuleModel.Builders.Element.ActionGroup(ParamArray NRules.RuleModel.ActionElement())
  nameWithType: Element.ActionGroup(params ActionElement[])
  nameWithType.vb: Element.ActionGroup(ParamArray ActionElement())
- uid: NRules.RuleModel.Builders.Element.ActionGroup(System.Collections.Generic.IEnumerable{NRules.RuleModel.ActionElement})
  name: ActionGroup(IEnumerable<ActionElement>)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_ActionGroup_System_Collections_Generic_IEnumerable_NRules_RuleModel_ActionElement__
  commentId: M:NRules.RuleModel.Builders.Element.ActionGroup(System.Collections.Generic.IEnumerable{NRules.RuleModel.ActionElement})
  name.vb: ActionGroup(IEnumerable(Of ActionElement))
  fullName: NRules.RuleModel.Builders.Element.ActionGroup(System.Collections.Generic.IEnumerable<NRules.RuleModel.ActionElement>)
  fullName.vb: NRules.RuleModel.Builders.Element.ActionGroup(System.Collections.Generic.IEnumerable(Of NRules.RuleModel.ActionElement))
  nameWithType: Element.ActionGroup(IEnumerable<ActionElement>)
  nameWithType.vb: Element.ActionGroup(IEnumerable(Of ActionElement))
- uid: NRules.RuleModel.Builders.Element.ActionGroup*
  name: ActionGroup
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_ActionGroup_
  commentId: Overload:NRules.RuleModel.Builders.Element.ActionGroup
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.ActionGroup
  nameWithType: Element.ActionGroup
- uid: NRules.RuleModel.Builders.Element.Aggregate(System.Type,System.String,System.Collections.Generic.IEnumerable{NRules.RuleModel.NamedExpressionElement},NRules.RuleModel.PatternElement)
  name: Aggregate(Type, string, IEnumerable<NamedExpressionElement>, PatternElement)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Aggregate_System_Type_System_String_System_Collections_Generic_IEnumerable_NRules_RuleModel_NamedExpressionElement__NRules_RuleModel_PatternElement_
  commentId: M:NRules.RuleModel.Builders.Element.Aggregate(System.Type,System.String,System.Collections.Generic.IEnumerable{NRules.RuleModel.NamedExpressionElement},NRules.RuleModel.PatternElement)
  name.vb: Aggregate(Type, String, IEnumerable(Of NamedExpressionElement), PatternElement)
  fullName: NRules.RuleModel.Builders.Element.Aggregate(System.Type, string, System.Collections.Generic.IEnumerable<NRules.RuleModel.NamedExpressionElement>, NRules.RuleModel.PatternElement)
  fullName.vb: NRules.RuleModel.Builders.Element.Aggregate(System.Type, String, System.Collections.Generic.IEnumerable(Of NRules.RuleModel.NamedExpressionElement), NRules.RuleModel.PatternElement)
  nameWithType: Element.Aggregate(Type, string, IEnumerable<NamedExpressionElement>, PatternElement)
  nameWithType.vb: Element.Aggregate(Type, String, IEnumerable(Of NamedExpressionElement), PatternElement)
- uid: NRules.RuleModel.Builders.Element.Aggregate(System.Type,System.String,System.Collections.Generic.IEnumerable{NRules.RuleModel.NamedExpressionElement},NRules.RuleModel.PatternElement,System.Type)
  name: Aggregate(Type, string, IEnumerable<NamedExpressionElement>, PatternElement, Type)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Aggregate_System_Type_System_String_System_Collections_Generic_IEnumerable_NRules_RuleModel_NamedExpressionElement__NRules_RuleModel_PatternElement_System_Type_
  commentId: M:NRules.RuleModel.Builders.Element.Aggregate(System.Type,System.String,System.Collections.Generic.IEnumerable{NRules.RuleModel.NamedExpressionElement},NRules.RuleModel.PatternElement,System.Type)
  name.vb: Aggregate(Type, String, IEnumerable(Of NamedExpressionElement), PatternElement, Type)
  fullName: NRules.RuleModel.Builders.Element.Aggregate(System.Type, string, System.Collections.Generic.IEnumerable<NRules.RuleModel.NamedExpressionElement>, NRules.RuleModel.PatternElement, System.Type)
  fullName.vb: NRules.RuleModel.Builders.Element.Aggregate(System.Type, String, System.Collections.Generic.IEnumerable(Of NRules.RuleModel.NamedExpressionElement), NRules.RuleModel.PatternElement, System.Type)
  nameWithType: Element.Aggregate(Type, string, IEnumerable<NamedExpressionElement>, PatternElement, Type)
  nameWithType.vb: Element.Aggregate(Type, String, IEnumerable(Of NamedExpressionElement), PatternElement, Type)
- uid: NRules.RuleModel.Builders.Element.Aggregate(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Linq.Expressions.LambdaExpression}},NRules.RuleModel.PatternElement)
  name: Aggregate(Type, string, IEnumerable<KeyValuePair<string, LambdaExpression>>, PatternElement)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Aggregate_System_Type_System_String_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_Linq_Expressions_LambdaExpression___NRules_RuleModel_PatternElement_
  commentId: M:NRules.RuleModel.Builders.Element.Aggregate(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Linq.Expressions.LambdaExpression}},NRules.RuleModel.PatternElement)
  name.vb: Aggregate(Type, String, IEnumerable(Of KeyValuePair(Of String, LambdaExpression)), PatternElement)
  fullName: NRules.RuleModel.Builders.Element.Aggregate(System.Type, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Linq.Expressions.LambdaExpression>>, NRules.RuleModel.PatternElement)
  fullName.vb: NRules.RuleModel.Builders.Element.Aggregate(System.Type, String, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, System.Linq.Expressions.LambdaExpression)), NRules.RuleModel.PatternElement)
  nameWithType: Element.Aggregate(Type, string, IEnumerable<KeyValuePair<string, LambdaExpression>>, PatternElement)
  nameWithType.vb: Element.Aggregate(Type, String, IEnumerable(Of KeyValuePair(Of String, LambdaExpression)), PatternElement)
- uid: NRules.RuleModel.Builders.Element.Aggregate(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Linq.Expressions.LambdaExpression}},NRules.RuleModel.PatternElement,System.Type)
  name: Aggregate(Type, string, IEnumerable<KeyValuePair<string, LambdaExpression>>, PatternElement, Type)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Aggregate_System_Type_System_String_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_Linq_Expressions_LambdaExpression___NRules_RuleModel_PatternElement_System_Type_
  commentId: M:NRules.RuleModel.Builders.Element.Aggregate(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Linq.Expressions.LambdaExpression}},NRules.RuleModel.PatternElement,System.Type)
  name.vb: Aggregate(Type, String, IEnumerable(Of KeyValuePair(Of String, LambdaExpression)), PatternElement, Type)
  fullName: NRules.RuleModel.Builders.Element.Aggregate(System.Type, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Linq.Expressions.LambdaExpression>>, NRules.RuleModel.PatternElement, System.Type)
  fullName.vb: NRules.RuleModel.Builders.Element.Aggregate(System.Type, String, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, System.Linq.Expressions.LambdaExpression)), NRules.RuleModel.PatternElement, System.Type)
  nameWithType: Element.Aggregate(Type, string, IEnumerable<KeyValuePair<string, LambdaExpression>>, PatternElement, Type)
  nameWithType.vb: Element.Aggregate(Type, String, IEnumerable(Of KeyValuePair(Of String, LambdaExpression)), PatternElement, Type)
- uid: NRules.RuleModel.Builders.Element.Aggregate*
  name: Aggregate
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Aggregate_
  commentId: Overload:NRules.RuleModel.Builders.Element.Aggregate
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.Aggregate
  nameWithType: Element.Aggregate
- uid: NRules.RuleModel.Builders.Element.AndGroup(NRules.RuleModel.RuleElement[])
  name: AndGroup(params RuleElement[])
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_AndGroup_NRules_RuleModel_RuleElement___
  commentId: M:NRules.RuleModel.Builders.Element.AndGroup(NRules.RuleModel.RuleElement[])
  name.vb: AndGroup(ParamArray RuleElement())
  fullName: NRules.RuleModel.Builders.Element.AndGroup(params NRules.RuleModel.RuleElement[])
  fullName.vb: NRules.RuleModel.Builders.Element.AndGroup(ParamArray NRules.RuleModel.RuleElement())
  nameWithType: Element.AndGroup(params RuleElement[])
  nameWithType.vb: Element.AndGroup(ParamArray RuleElement())
- uid: NRules.RuleModel.Builders.Element.AndGroup(System.Collections.Generic.IEnumerable{NRules.RuleModel.RuleElement})
  name: AndGroup(IEnumerable<RuleElement>)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_AndGroup_System_Collections_Generic_IEnumerable_NRules_RuleModel_RuleElement__
  commentId: M:NRules.RuleModel.Builders.Element.AndGroup(System.Collections.Generic.IEnumerable{NRules.RuleModel.RuleElement})
  name.vb: AndGroup(IEnumerable(Of RuleElement))
  fullName: NRules.RuleModel.Builders.Element.AndGroup(System.Collections.Generic.IEnumerable<NRules.RuleModel.RuleElement>)
  fullName.vb: NRules.RuleModel.Builders.Element.AndGroup(System.Collections.Generic.IEnumerable(Of NRules.RuleModel.RuleElement))
  nameWithType: Element.AndGroup(IEnumerable<RuleElement>)
  nameWithType.vb: Element.AndGroup(IEnumerable(Of RuleElement))
- uid: NRules.RuleModel.Builders.Element.AndGroup*
  name: AndGroup
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_AndGroup_
  commentId: Overload:NRules.RuleModel.Builders.Element.AndGroup
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.AndGroup
  nameWithType: Element.AndGroup
- uid: NRules.RuleModel.Builders.Element.Binding(System.Linq.Expressions.LambdaExpression)
  name: Binding(LambdaExpression)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Binding_System_Linq_Expressions_LambdaExpression_
  commentId: M:NRules.RuleModel.Builders.Element.Binding(System.Linq.Expressions.LambdaExpression)
  fullName: NRules.RuleModel.Builders.Element.Binding(System.Linq.Expressions.LambdaExpression)
  nameWithType: Element.Binding(LambdaExpression)
- uid: NRules.RuleModel.Builders.Element.Binding(System.Type,System.Linq.Expressions.LambdaExpression)
  name: Binding(Type, LambdaExpression)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Binding_System_Type_System_Linq_Expressions_LambdaExpression_
  commentId: M:NRules.RuleModel.Builders.Element.Binding(System.Type,System.Linq.Expressions.LambdaExpression)
  fullName: NRules.RuleModel.Builders.Element.Binding(System.Type, System.Linq.Expressions.LambdaExpression)
  nameWithType: Element.Binding(Type, LambdaExpression)
- uid: NRules.RuleModel.Builders.Element.Binding*
  name: Binding
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Binding_
  commentId: Overload:NRules.RuleModel.Builders.Element.Binding
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.Binding
  nameWithType: Element.Binding
- uid: NRules.RuleModel.Builders.Element.Collect(NRules.RuleModel.PatternElement)
  name: Collect(PatternElement)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Collect_NRules_RuleModel_PatternElement_
  commentId: M:NRules.RuleModel.Builders.Element.Collect(NRules.RuleModel.PatternElement)
  fullName: NRules.RuleModel.Builders.Element.Collect(NRules.RuleModel.PatternElement)
  nameWithType: Element.Collect(PatternElement)
- uid: NRules.RuleModel.Builders.Element.Collect(System.Type,NRules.RuleModel.PatternElement)
  name: Collect(Type, PatternElement)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Collect_System_Type_NRules_RuleModel_PatternElement_
  commentId: M:NRules.RuleModel.Builders.Element.Collect(System.Type,NRules.RuleModel.PatternElement)
  fullName: NRules.RuleModel.Builders.Element.Collect(System.Type, NRules.RuleModel.PatternElement)
  nameWithType: Element.Collect(Type, PatternElement)
- uid: NRules.RuleModel.Builders.Element.Collect*
  name: Collect
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Collect_
  commentId: Overload:NRules.RuleModel.Builders.Element.Collect
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.Collect
  nameWithType: Element.Collect
- uid: NRules.RuleModel.Builders.Element.Condition(System.Linq.Expressions.LambdaExpression)
  name: Condition(LambdaExpression)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Condition_System_Linq_Expressions_LambdaExpression_
  commentId: M:NRules.RuleModel.Builders.Element.Condition(System.Linq.Expressions.LambdaExpression)
  fullName: NRules.RuleModel.Builders.Element.Condition(System.Linq.Expressions.LambdaExpression)
  nameWithType: Element.Condition(LambdaExpression)
- uid: NRules.RuleModel.Builders.Element.Condition*
  name: Condition
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Condition_
  commentId: Overload:NRules.RuleModel.Builders.Element.Condition
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.Condition
  nameWithType: Element.Condition
- uid: NRules.RuleModel.Builders.Element.Declaration(System.Type,System.String)
  name: Declaration(Type, string)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Declaration_System_Type_System_String_
  commentId: M:NRules.RuleModel.Builders.Element.Declaration(System.Type,System.String)
  name.vb: Declaration(Type, String)
  fullName: NRules.RuleModel.Builders.Element.Declaration(System.Type, string)
  fullName.vb: NRules.RuleModel.Builders.Element.Declaration(System.Type, String)
  nameWithType: Element.Declaration(Type, string)
  nameWithType.vb: Element.Declaration(Type, String)
- uid: NRules.RuleModel.Builders.Element.Declaration*
  name: Declaration
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Declaration_
  commentId: Overload:NRules.RuleModel.Builders.Element.Declaration
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.Declaration
  nameWithType: Element.Declaration
- uid: NRules.RuleModel.Builders.Element.Dependency(NRules.RuleModel.Declaration,System.Type)
  name: Dependency(Declaration, Type)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Dependency_NRules_RuleModel_Declaration_System_Type_
  commentId: M:NRules.RuleModel.Builders.Element.Dependency(NRules.RuleModel.Declaration,System.Type)
  fullName: NRules.RuleModel.Builders.Element.Dependency(NRules.RuleModel.Declaration, System.Type)
  nameWithType: Element.Dependency(Declaration, Type)
- uid: NRules.RuleModel.Builders.Element.Dependency(System.Type,System.String)
  name: Dependency(Type, string)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Dependency_System_Type_System_String_
  commentId: M:NRules.RuleModel.Builders.Element.Dependency(System.Type,System.String)
  name.vb: Dependency(Type, String)
  fullName: NRules.RuleModel.Builders.Element.Dependency(System.Type, string)
  fullName.vb: NRules.RuleModel.Builders.Element.Dependency(System.Type, String)
  nameWithType: Element.Dependency(Type, string)
  nameWithType.vb: Element.Dependency(Type, String)
- uid: NRules.RuleModel.Builders.Element.Dependency*
  name: Dependency
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Dependency_
  commentId: Overload:NRules.RuleModel.Builders.Element.Dependency
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.Dependency
  nameWithType: Element.Dependency
- uid: NRules.RuleModel.Builders.Element.DependencyGroup(NRules.RuleModel.DependencyElement[])
  name: DependencyGroup(params DependencyElement[])
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_DependencyGroup_NRules_RuleModel_DependencyElement___
  commentId: M:NRules.RuleModel.Builders.Element.DependencyGroup(NRules.RuleModel.DependencyElement[])
  name.vb: DependencyGroup(ParamArray DependencyElement())
  fullName: NRules.RuleModel.Builders.Element.DependencyGroup(params NRules.RuleModel.DependencyElement[])
  fullName.vb: NRules.RuleModel.Builders.Element.DependencyGroup(ParamArray NRules.RuleModel.DependencyElement())
  nameWithType: Element.DependencyGroup(params DependencyElement[])
  nameWithType.vb: Element.DependencyGroup(ParamArray DependencyElement())
- uid: NRules.RuleModel.Builders.Element.DependencyGroup(System.Collections.Generic.IEnumerable{NRules.RuleModel.DependencyElement})
  name: DependencyGroup(IEnumerable<DependencyElement>)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_DependencyGroup_System_Collections_Generic_IEnumerable_NRules_RuleModel_DependencyElement__
  commentId: M:NRules.RuleModel.Builders.Element.DependencyGroup(System.Collections.Generic.IEnumerable{NRules.RuleModel.DependencyElement})
  name.vb: DependencyGroup(IEnumerable(Of DependencyElement))
  fullName: NRules.RuleModel.Builders.Element.DependencyGroup(System.Collections.Generic.IEnumerable<NRules.RuleModel.DependencyElement>)
  fullName.vb: NRules.RuleModel.Builders.Element.DependencyGroup(System.Collections.Generic.IEnumerable(Of NRules.RuleModel.DependencyElement))
  nameWithType: Element.DependencyGroup(IEnumerable<DependencyElement>)
  nameWithType.vb: Element.DependencyGroup(IEnumerable(Of DependencyElement))
- uid: NRules.RuleModel.Builders.Element.DependencyGroup*
  name: DependencyGroup
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_DependencyGroup_
  commentId: Overload:NRules.RuleModel.Builders.Element.DependencyGroup
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.DependencyGroup
  nameWithType: Element.DependencyGroup
- uid: NRules.RuleModel.Builders.Element.Exists(NRules.RuleModel.RuleElement)
  name: Exists(RuleElement)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Exists_NRules_RuleModel_RuleElement_
  commentId: M:NRules.RuleModel.Builders.Element.Exists(NRules.RuleModel.RuleElement)
  fullName: NRules.RuleModel.Builders.Element.Exists(NRules.RuleModel.RuleElement)
  nameWithType: Element.Exists(RuleElement)
- uid: NRules.RuleModel.Builders.Element.Exists*
  name: Exists
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Exists_
  commentId: Overload:NRules.RuleModel.Builders.Element.Exists
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.Exists
  nameWithType: Element.Exists
- uid: NRules.RuleModel.Builders.Element.Expression(System.String,System.Linq.Expressions.LambdaExpression)
  name: Expression(string, LambdaExpression)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Expression_System_String_System_Linq_Expressions_LambdaExpression_
  commentId: M:NRules.RuleModel.Builders.Element.Expression(System.String,System.Linq.Expressions.LambdaExpression)
  name.vb: Expression(String, LambdaExpression)
  fullName: NRules.RuleModel.Builders.Element.Expression(string, System.Linq.Expressions.LambdaExpression)
  fullName.vb: NRules.RuleModel.Builders.Element.Expression(String, System.Linq.Expressions.LambdaExpression)
  nameWithType: Element.Expression(string, LambdaExpression)
  nameWithType.vb: Element.Expression(String, LambdaExpression)
- uid: NRules.RuleModel.Builders.Element.Expression*
  name: Expression
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Expression_
  commentId: Overload:NRules.RuleModel.Builders.Element.Expression
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.Expression
  nameWithType: Element.Expression
- uid: NRules.RuleModel.Builders.Element.Filter(NRules.RuleModel.FilterType,System.Linq.Expressions.LambdaExpression)
  name: Filter(FilterType, LambdaExpression)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Filter_NRules_RuleModel_FilterType_System_Linq_Expressions_LambdaExpression_
  commentId: M:NRules.RuleModel.Builders.Element.Filter(NRules.RuleModel.FilterType,System.Linq.Expressions.LambdaExpression)
  fullName: NRules.RuleModel.Builders.Element.Filter(NRules.RuleModel.FilterType, System.Linq.Expressions.LambdaExpression)
  nameWithType: Element.Filter(FilterType, LambdaExpression)
- uid: NRules.RuleModel.Builders.Element.Filter*
  name: Filter
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Filter_
  commentId: Overload:NRules.RuleModel.Builders.Element.Filter
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.Filter
  nameWithType: Element.Filter
- uid: NRules.RuleModel.Builders.Element.FilterGroup(NRules.RuleModel.FilterElement[])
  name: FilterGroup(params FilterElement[])
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_FilterGroup_NRules_RuleModel_FilterElement___
  commentId: M:NRules.RuleModel.Builders.Element.FilterGroup(NRules.RuleModel.FilterElement[])
  name.vb: FilterGroup(ParamArray FilterElement())
  fullName: NRules.RuleModel.Builders.Element.FilterGroup(params NRules.RuleModel.FilterElement[])
  fullName.vb: NRules.RuleModel.Builders.Element.FilterGroup(ParamArray NRules.RuleModel.FilterElement())
  nameWithType: Element.FilterGroup(params FilterElement[])
  nameWithType.vb: Element.FilterGroup(ParamArray FilterElement())
- uid: NRules.RuleModel.Builders.Element.FilterGroup(System.Collections.Generic.IEnumerable{NRules.RuleModel.FilterElement})
  name: FilterGroup(IEnumerable<FilterElement>)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_FilterGroup_System_Collections_Generic_IEnumerable_NRules_RuleModel_FilterElement__
  commentId: M:NRules.RuleModel.Builders.Element.FilterGroup(System.Collections.Generic.IEnumerable{NRules.RuleModel.FilterElement})
  name.vb: FilterGroup(IEnumerable(Of FilterElement))
  fullName: NRules.RuleModel.Builders.Element.FilterGroup(System.Collections.Generic.IEnumerable<NRules.RuleModel.FilterElement>)
  fullName.vb: NRules.RuleModel.Builders.Element.FilterGroup(System.Collections.Generic.IEnumerable(Of NRules.RuleModel.FilterElement))
  nameWithType: Element.FilterGroup(IEnumerable<FilterElement>)
  nameWithType.vb: Element.FilterGroup(IEnumerable(Of FilterElement))
- uid: NRules.RuleModel.Builders.Element.FilterGroup*
  name: FilterGroup
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_FilterGroup_
  commentId: Overload:NRules.RuleModel.Builders.Element.FilterGroup
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.FilterGroup
  nameWithType: Element.FilterGroup
- uid: NRules.RuleModel.Builders.Element.Flatten(System.Type,System.Linq.Expressions.LambdaExpression,NRules.RuleModel.PatternElement)
  name: Flatten(Type, LambdaExpression, PatternElement)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Flatten_System_Type_System_Linq_Expressions_LambdaExpression_NRules_RuleModel_PatternElement_
  commentId: M:NRules.RuleModel.Builders.Element.Flatten(System.Type,System.Linq.Expressions.LambdaExpression,NRules.RuleModel.PatternElement)
  fullName: NRules.RuleModel.Builders.Element.Flatten(System.Type, System.Linq.Expressions.LambdaExpression, NRules.RuleModel.PatternElement)
  nameWithType: Element.Flatten(Type, LambdaExpression, PatternElement)
- uid: NRules.RuleModel.Builders.Element.Flatten*
  name: Flatten
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Flatten_
  commentId: Overload:NRules.RuleModel.Builders.Element.Flatten
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.Flatten
  nameWithType: Element.Flatten
- uid: NRules.RuleModel.Builders.Element.ForAll(NRules.RuleModel.PatternElement,System.Collections.Generic.IEnumerable{NRules.RuleModel.PatternElement})
  name: ForAll(PatternElement, IEnumerable<PatternElement>)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_ForAll_NRules_RuleModel_PatternElement_System_Collections_Generic_IEnumerable_NRules_RuleModel_PatternElement__
  commentId: M:NRules.RuleModel.Builders.Element.ForAll(NRules.RuleModel.PatternElement,System.Collections.Generic.IEnumerable{NRules.RuleModel.PatternElement})
  name.vb: ForAll(PatternElement, IEnumerable(Of PatternElement))
  fullName: NRules.RuleModel.Builders.Element.ForAll(NRules.RuleModel.PatternElement, System.Collections.Generic.IEnumerable<NRules.RuleModel.PatternElement>)
  fullName.vb: NRules.RuleModel.Builders.Element.ForAll(NRules.RuleModel.PatternElement, System.Collections.Generic.IEnumerable(Of NRules.RuleModel.PatternElement))
  nameWithType: Element.ForAll(PatternElement, IEnumerable<PatternElement>)
  nameWithType.vb: Element.ForAll(PatternElement, IEnumerable(Of PatternElement))
- uid: NRules.RuleModel.Builders.Element.ForAll*
  name: ForAll
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_ForAll_
  commentId: Overload:NRules.RuleModel.Builders.Element.ForAll
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.ForAll
  nameWithType: Element.ForAll
- uid: NRules.RuleModel.Builders.Element.Group(NRules.RuleModel.Builders.GroupType,System.Collections.Generic.IEnumerable{NRules.RuleModel.RuleElement})
  name: Group(GroupType, IEnumerable<RuleElement>)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Group_NRules_RuleModel_Builders_GroupType_System_Collections_Generic_IEnumerable_NRules_RuleModel_RuleElement__
  commentId: M:NRules.RuleModel.Builders.Element.Group(NRules.RuleModel.Builders.GroupType,System.Collections.Generic.IEnumerable{NRules.RuleModel.RuleElement})
  name.vb: Group(GroupType, IEnumerable(Of RuleElement))
  fullName: NRules.RuleModel.Builders.Element.Group(NRules.RuleModel.Builders.GroupType, System.Collections.Generic.IEnumerable<NRules.RuleModel.RuleElement>)
  fullName.vb: NRules.RuleModel.Builders.Element.Group(NRules.RuleModel.Builders.GroupType, System.Collections.Generic.IEnumerable(Of NRules.RuleModel.RuleElement))
  nameWithType: Element.Group(GroupType, IEnumerable<RuleElement>)
  nameWithType.vb: Element.Group(GroupType, IEnumerable(Of RuleElement))
- uid: NRules.RuleModel.Builders.Element.Group*
  name: Group
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Group_
  commentId: Overload:NRules.RuleModel.Builders.Element.Group
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.Group
  nameWithType: Element.Group
- uid: NRules.RuleModel.Builders.Element.GroupBy(System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.LambdaExpression,NRules.RuleModel.PatternElement)
  name: GroupBy(LambdaExpression, LambdaExpression, PatternElement)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_GroupBy_System_Linq_Expressions_LambdaExpression_System_Linq_Expressions_LambdaExpression_NRules_RuleModel_PatternElement_
  commentId: M:NRules.RuleModel.Builders.Element.GroupBy(System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.LambdaExpression,NRules.RuleModel.PatternElement)
  fullName: NRules.RuleModel.Builders.Element.GroupBy(System.Linq.Expressions.LambdaExpression, System.Linq.Expressions.LambdaExpression, NRules.RuleModel.PatternElement)
  nameWithType: Element.GroupBy(LambdaExpression, LambdaExpression, PatternElement)
- uid: NRules.RuleModel.Builders.Element.GroupBy(System.Type,System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.LambdaExpression,NRules.RuleModel.PatternElement)
  name: GroupBy(Type, LambdaExpression, LambdaExpression, PatternElement)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_GroupBy_System_Type_System_Linq_Expressions_LambdaExpression_System_Linq_Expressions_LambdaExpression_NRules_RuleModel_PatternElement_
  commentId: M:NRules.RuleModel.Builders.Element.GroupBy(System.Type,System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.LambdaExpression,NRules.RuleModel.PatternElement)
  fullName: NRules.RuleModel.Builders.Element.GroupBy(System.Type, System.Linq.Expressions.LambdaExpression, System.Linq.Expressions.LambdaExpression, NRules.RuleModel.PatternElement)
  nameWithType: Element.GroupBy(Type, LambdaExpression, LambdaExpression, PatternElement)
- uid: NRules.RuleModel.Builders.Element.GroupBy*
  name: GroupBy
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_GroupBy_
  commentId: Overload:NRules.RuleModel.Builders.Element.GroupBy
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.GroupBy
  nameWithType: Element.GroupBy
- uid: NRules.RuleModel.Builders.Element.Not(NRules.RuleModel.RuleElement)
  name: Not(RuleElement)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Not_NRules_RuleModel_RuleElement_
  commentId: M:NRules.RuleModel.Builders.Element.Not(NRules.RuleModel.RuleElement)
  fullName: NRules.RuleModel.Builders.Element.Not(NRules.RuleModel.RuleElement)
  nameWithType: Element.Not(RuleElement)
- uid: NRules.RuleModel.Builders.Element.Not*
  name: Not
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Not_
  commentId: Overload:NRules.RuleModel.Builders.Element.Not
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.Not
  nameWithType: Element.Not
- uid: NRules.RuleModel.Builders.Element.OrGroup(NRules.RuleModel.RuleElement[])
  name: OrGroup(params RuleElement[])
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_OrGroup_NRules_RuleModel_RuleElement___
  commentId: M:NRules.RuleModel.Builders.Element.OrGroup(NRules.RuleModel.RuleElement[])
  name.vb: OrGroup(ParamArray RuleElement())
  fullName: NRules.RuleModel.Builders.Element.OrGroup(params NRules.RuleModel.RuleElement[])
  fullName.vb: NRules.RuleModel.Builders.Element.OrGroup(ParamArray NRules.RuleModel.RuleElement())
  nameWithType: Element.OrGroup(params RuleElement[])
  nameWithType.vb: Element.OrGroup(ParamArray RuleElement())
- uid: NRules.RuleModel.Builders.Element.OrGroup(System.Collections.Generic.IEnumerable{NRules.RuleModel.RuleElement})
  name: OrGroup(IEnumerable<RuleElement>)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_OrGroup_System_Collections_Generic_IEnumerable_NRules_RuleModel_RuleElement__
  commentId: M:NRules.RuleModel.Builders.Element.OrGroup(System.Collections.Generic.IEnumerable{NRules.RuleModel.RuleElement})
  name.vb: OrGroup(IEnumerable(Of RuleElement))
  fullName: NRules.RuleModel.Builders.Element.OrGroup(System.Collections.Generic.IEnumerable<NRules.RuleModel.RuleElement>)
  fullName.vb: NRules.RuleModel.Builders.Element.OrGroup(System.Collections.Generic.IEnumerable(Of NRules.RuleModel.RuleElement))
  nameWithType: Element.OrGroup(IEnumerable<RuleElement>)
  nameWithType.vb: Element.OrGroup(IEnumerable(Of RuleElement))
- uid: NRules.RuleModel.Builders.Element.OrGroup*
  name: OrGroup
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_OrGroup_
  commentId: Overload:NRules.RuleModel.Builders.Element.OrGroup
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.OrGroup
  nameWithType: Element.OrGroup
- uid: NRules.RuleModel.Builders.Element.Pattern(NRules.RuleModel.Declaration,System.Collections.Generic.IEnumerable{NRules.RuleModel.NamedExpressionElement},NRules.RuleModel.RuleElement)
  name: Pattern(Declaration, IEnumerable<NamedExpressionElement>, RuleElement)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Pattern_NRules_RuleModel_Declaration_System_Collections_Generic_IEnumerable_NRules_RuleModel_NamedExpressionElement__NRules_RuleModel_RuleElement_
  commentId: M:NRules.RuleModel.Builders.Element.Pattern(NRules.RuleModel.Declaration,System.Collections.Generic.IEnumerable{NRules.RuleModel.NamedExpressionElement},NRules.RuleModel.RuleElement)
  name.vb: Pattern(Declaration, IEnumerable(Of NamedExpressionElement), RuleElement)
  fullName: NRules.RuleModel.Builders.Element.Pattern(NRules.RuleModel.Declaration, System.Collections.Generic.IEnumerable<NRules.RuleModel.NamedExpressionElement>, NRules.RuleModel.RuleElement)
  fullName.vb: NRules.RuleModel.Builders.Element.Pattern(NRules.RuleModel.Declaration, System.Collections.Generic.IEnumerable(Of NRules.RuleModel.NamedExpressionElement), NRules.RuleModel.RuleElement)
  nameWithType: Element.Pattern(Declaration, IEnumerable<NamedExpressionElement>, RuleElement)
  nameWithType.vb: Element.Pattern(Declaration, IEnumerable(Of NamedExpressionElement), RuleElement)
- uid: NRules.RuleModel.Builders.Element.Pattern(NRules.RuleModel.Declaration,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Linq.Expressions.LambdaExpression}})
  name: Pattern(Declaration, IEnumerable<KeyValuePair<string, LambdaExpression>>)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Pattern_NRules_RuleModel_Declaration_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_Linq_Expressions_LambdaExpression___
  commentId: M:NRules.RuleModel.Builders.Element.Pattern(NRules.RuleModel.Declaration,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Linq.Expressions.LambdaExpression}})
  name.vb: Pattern(Declaration, IEnumerable(Of KeyValuePair(Of String, LambdaExpression)))
  fullName: NRules.RuleModel.Builders.Element.Pattern(NRules.RuleModel.Declaration, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Linq.Expressions.LambdaExpression>>)
  fullName.vb: NRules.RuleModel.Builders.Element.Pattern(NRules.RuleModel.Declaration, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, System.Linq.Expressions.LambdaExpression)))
  nameWithType: Element.Pattern(Declaration, IEnumerable<KeyValuePair<string, LambdaExpression>>)
  nameWithType.vb: Element.Pattern(Declaration, IEnumerable(Of KeyValuePair(Of String, LambdaExpression)))
- uid: NRules.RuleModel.Builders.Element.Pattern(NRules.RuleModel.Declaration,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Linq.Expressions.LambdaExpression}},NRules.RuleModel.RuleElement)
  name: Pattern(Declaration, IEnumerable<KeyValuePair<string, LambdaExpression>>, RuleElement)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Pattern_NRules_RuleModel_Declaration_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_Linq_Expressions_LambdaExpression___NRules_RuleModel_RuleElement_
  commentId: M:NRules.RuleModel.Builders.Element.Pattern(NRules.RuleModel.Declaration,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Linq.Expressions.LambdaExpression}},NRules.RuleModel.RuleElement)
  name.vb: Pattern(Declaration, IEnumerable(Of KeyValuePair(Of String, LambdaExpression)), RuleElement)
  fullName: NRules.RuleModel.Builders.Element.Pattern(NRules.RuleModel.Declaration, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Linq.Expressions.LambdaExpression>>, NRules.RuleModel.RuleElement)
  fullName.vb: NRules.RuleModel.Builders.Element.Pattern(NRules.RuleModel.Declaration, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, System.Linq.Expressions.LambdaExpression)), NRules.RuleModel.RuleElement)
  nameWithType: Element.Pattern(Declaration, IEnumerable<KeyValuePair<string, LambdaExpression>>, RuleElement)
  nameWithType.vb: Element.Pattern(Declaration, IEnumerable(Of KeyValuePair(Of String, LambdaExpression)), RuleElement)
- uid: NRules.RuleModel.Builders.Element.Pattern(System.Type,System.String,System.Collections.Generic.IEnumerable{NRules.RuleModel.NamedExpressionElement},NRules.RuleModel.RuleElement)
  name: Pattern(Type, string, IEnumerable<NamedExpressionElement>, RuleElement)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Pattern_System_Type_System_String_System_Collections_Generic_IEnumerable_NRules_RuleModel_NamedExpressionElement__NRules_RuleModel_RuleElement_
  commentId: M:NRules.RuleModel.Builders.Element.Pattern(System.Type,System.String,System.Collections.Generic.IEnumerable{NRules.RuleModel.NamedExpressionElement},NRules.RuleModel.RuleElement)
  name.vb: Pattern(Type, String, IEnumerable(Of NamedExpressionElement), RuleElement)
  fullName: NRules.RuleModel.Builders.Element.Pattern(System.Type, string, System.Collections.Generic.IEnumerable<NRules.RuleModel.NamedExpressionElement>, NRules.RuleModel.RuleElement)
  fullName.vb: NRules.RuleModel.Builders.Element.Pattern(System.Type, String, System.Collections.Generic.IEnumerable(Of NRules.RuleModel.NamedExpressionElement), NRules.RuleModel.RuleElement)
  nameWithType: Element.Pattern(Type, string, IEnumerable<NamedExpressionElement>, RuleElement)
  nameWithType.vb: Element.Pattern(Type, String, IEnumerable(Of NamedExpressionElement), RuleElement)
- uid: NRules.RuleModel.Builders.Element.Pattern(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Linq.Expressions.LambdaExpression}})
  name: Pattern(Type, string, IEnumerable<KeyValuePair<string, LambdaExpression>>)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Pattern_System_Type_System_String_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_Linq_Expressions_LambdaExpression___
  commentId: M:NRules.RuleModel.Builders.Element.Pattern(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Linq.Expressions.LambdaExpression}})
  name.vb: Pattern(Type, String, IEnumerable(Of KeyValuePair(Of String, LambdaExpression)))
  fullName: NRules.RuleModel.Builders.Element.Pattern(System.Type, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Linq.Expressions.LambdaExpression>>)
  fullName.vb: NRules.RuleModel.Builders.Element.Pattern(System.Type, String, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, System.Linq.Expressions.LambdaExpression)))
  nameWithType: Element.Pattern(Type, string, IEnumerable<KeyValuePair<string, LambdaExpression>>)
  nameWithType.vb: Element.Pattern(Type, String, IEnumerable(Of KeyValuePair(Of String, LambdaExpression)))
- uid: NRules.RuleModel.Builders.Element.Pattern(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Linq.Expressions.LambdaExpression}},NRules.RuleModel.RuleElement)
  name: Pattern(Type, string, IEnumerable<KeyValuePair<string, LambdaExpression>>, RuleElement)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Pattern_System_Type_System_String_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_Linq_Expressions_LambdaExpression___NRules_RuleModel_RuleElement_
  commentId: M:NRules.RuleModel.Builders.Element.Pattern(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Linq.Expressions.LambdaExpression}},NRules.RuleModel.RuleElement)
  name.vb: Pattern(Type, String, IEnumerable(Of KeyValuePair(Of String, LambdaExpression)), RuleElement)
  fullName: NRules.RuleModel.Builders.Element.Pattern(System.Type, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Linq.Expressions.LambdaExpression>>, NRules.RuleModel.RuleElement)
  fullName.vb: NRules.RuleModel.Builders.Element.Pattern(System.Type, String, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, System.Linq.Expressions.LambdaExpression)), NRules.RuleModel.RuleElement)
  nameWithType: Element.Pattern(Type, string, IEnumerable<KeyValuePair<string, LambdaExpression>>, RuleElement)
  nameWithType.vb: Element.Pattern(Type, String, IEnumerable(Of KeyValuePair(Of String, LambdaExpression)), RuleElement)
- uid: NRules.RuleModel.Builders.Element.Pattern*
  name: Pattern
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Pattern_
  commentId: Overload:NRules.RuleModel.Builders.Element.Pattern
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.Pattern
  nameWithType: Element.Pattern
- uid: NRules.RuleModel.Builders.Element.Project(System.Linq.Expressions.LambdaExpression,NRules.RuleModel.PatternElement)
  name: Project(LambdaExpression, PatternElement)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Project_System_Linq_Expressions_LambdaExpression_NRules_RuleModel_PatternElement_
  commentId: M:NRules.RuleModel.Builders.Element.Project(System.Linq.Expressions.LambdaExpression,NRules.RuleModel.PatternElement)
  fullName: NRules.RuleModel.Builders.Element.Project(System.Linq.Expressions.LambdaExpression, NRules.RuleModel.PatternElement)
  nameWithType: Element.Project(LambdaExpression, PatternElement)
- uid: NRules.RuleModel.Builders.Element.Project(System.Type,System.Linq.Expressions.LambdaExpression,NRules.RuleModel.PatternElement)
  name: Project(Type, LambdaExpression, PatternElement)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Project_System_Type_System_Linq_Expressions_LambdaExpression_NRules_RuleModel_PatternElement_
  commentId: M:NRules.RuleModel.Builders.Element.Project(System.Type,System.Linq.Expressions.LambdaExpression,NRules.RuleModel.PatternElement)
  fullName: NRules.RuleModel.Builders.Element.Project(System.Type, System.Linq.Expressions.LambdaExpression, NRules.RuleModel.PatternElement)
  nameWithType: Element.Project(Type, LambdaExpression, PatternElement)
- uid: NRules.RuleModel.Builders.Element.Project*
  name: Project
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_Project_
  commentId: Overload:NRules.RuleModel.Builders.Element.Project
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.Project
  nameWithType: Element.Project
- uid: NRules.RuleModel.Builders.Element.RuleDefinition(System.String,System.String,System.Int32,NRules.RuleModel.GroupElement,NRules.RuleModel.ActionGroupElement)
  name: RuleDefinition(string, string, int, GroupElement, ActionGroupElement)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_RuleDefinition_System_String_System_String_System_Int32_NRules_RuleModel_GroupElement_NRules_RuleModel_ActionGroupElement_
  commentId: M:NRules.RuleModel.Builders.Element.RuleDefinition(System.String,System.String,System.Int32,NRules.RuleModel.GroupElement,NRules.RuleModel.ActionGroupElement)
  name.vb: RuleDefinition(String, String, Integer, GroupElement, ActionGroupElement)
  fullName: NRules.RuleModel.Builders.Element.RuleDefinition(string, string, int, NRules.RuleModel.GroupElement, NRules.RuleModel.ActionGroupElement)
  fullName.vb: NRules.RuleModel.Builders.Element.RuleDefinition(String, String, Integer, NRules.RuleModel.GroupElement, NRules.RuleModel.ActionGroupElement)
  nameWithType: Element.RuleDefinition(string, string, int, GroupElement, ActionGroupElement)
  nameWithType.vb: Element.RuleDefinition(String, String, Integer, GroupElement, ActionGroupElement)
- uid: NRules.RuleModel.Builders.Element.RuleDefinition(System.String,System.String,System.Int32,NRules.RuleModel.RuleRepeatability,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{NRules.RuleModel.RuleProperty},NRules.RuleModel.DependencyGroupElement,NRules.RuleModel.GroupElement,NRules.RuleModel.FilterGroupElement,NRules.RuleModel.ActionGroupElement)
  name: RuleDefinition(string, string, int, RuleRepeatability, IEnumerable<string>, IEnumerable<RuleProperty>, DependencyGroupElement, GroupElement, FilterGroupElement, ActionGroupElement)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_RuleDefinition_System_String_System_String_System_Int32_NRules_RuleModel_RuleRepeatability_System_Collections_Generic_IEnumerable_System_String__System_Collections_Generic_IEnumerable_NRules_RuleModel_RuleProperty__NRules_RuleModel_DependencyGroupElement_NRules_RuleModel_GroupElement_NRules_RuleModel_FilterGroupElement_NRules_RuleModel_ActionGroupElement_
  commentId: M:NRules.RuleModel.Builders.Element.RuleDefinition(System.String,System.String,System.Int32,NRules.RuleModel.RuleRepeatability,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{NRules.RuleModel.RuleProperty},NRules.RuleModel.DependencyGroupElement,NRules.RuleModel.GroupElement,NRules.RuleModel.FilterGroupElement,NRules.RuleModel.ActionGroupElement)
  name.vb: RuleDefinition(String, String, Integer, RuleRepeatability, IEnumerable(Of String), IEnumerable(Of RuleProperty), DependencyGroupElement, GroupElement, FilterGroupElement, ActionGroupElement)
  fullName: NRules.RuleModel.Builders.Element.RuleDefinition(string, string, int, NRules.RuleModel.RuleRepeatability, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<NRules.RuleModel.RuleProperty>, NRules.RuleModel.DependencyGroupElement, NRules.RuleModel.GroupElement, NRules.RuleModel.FilterGroupElement, NRules.RuleModel.ActionGroupElement)
  fullName.vb: NRules.RuleModel.Builders.Element.RuleDefinition(String, String, Integer, NRules.RuleModel.RuleRepeatability, System.Collections.Generic.IEnumerable(Of String), System.Collections.Generic.IEnumerable(Of NRules.RuleModel.RuleProperty), NRules.RuleModel.DependencyGroupElement, NRules.RuleModel.GroupElement, NRules.RuleModel.FilterGroupElement, NRules.RuleModel.ActionGroupElement)
  nameWithType: Element.RuleDefinition(string, string, int, RuleRepeatability, IEnumerable<string>, IEnumerable<RuleProperty>, DependencyGroupElement, GroupElement, FilterGroupElement, ActionGroupElement)
  nameWithType.vb: Element.RuleDefinition(String, String, Integer, RuleRepeatability, IEnumerable(Of String), IEnumerable(Of RuleProperty), DependencyGroupElement, GroupElement, FilterGroupElement, ActionGroupElement)
- uid: NRules.RuleModel.Builders.Element.RuleDefinition(System.String,System.String,System.Int32,System.Collections.Generic.IEnumerable{System.String},NRules.RuleModel.GroupElement,NRules.RuleModel.ActionGroupElement)
  name: RuleDefinition(string, string, int, IEnumerable<string>, GroupElement, ActionGroupElement)
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_RuleDefinition_System_String_System_String_System_Int32_System_Collections_Generic_IEnumerable_System_String__NRules_RuleModel_GroupElement_NRules_RuleModel_ActionGroupElement_
  commentId: M:NRules.RuleModel.Builders.Element.RuleDefinition(System.String,System.String,System.Int32,System.Collections.Generic.IEnumerable{System.String},NRules.RuleModel.GroupElement,NRules.RuleModel.ActionGroupElement)
  name.vb: RuleDefinition(String, String, Integer, IEnumerable(Of String), GroupElement, ActionGroupElement)
  fullName: NRules.RuleModel.Builders.Element.RuleDefinition(string, string, int, System.Collections.Generic.IEnumerable<string>, NRules.RuleModel.GroupElement, NRules.RuleModel.ActionGroupElement)
  fullName.vb: NRules.RuleModel.Builders.Element.RuleDefinition(String, String, Integer, System.Collections.Generic.IEnumerable(Of String), NRules.RuleModel.GroupElement, NRules.RuleModel.ActionGroupElement)
  nameWithType: Element.RuleDefinition(string, string, int, IEnumerable<string>, GroupElement, ActionGroupElement)
  nameWithType.vb: Element.RuleDefinition(String, String, Integer, IEnumerable(Of String), GroupElement, ActionGroupElement)
- uid: NRules.RuleModel.Builders.Element.RuleDefinition*
  name: RuleDefinition
  href: api/NRules.RuleModel.Builders.Element.html#NRules_RuleModel_Builders_Element_RuleDefinition_
  commentId: Overload:NRules.RuleModel.Builders.Element.RuleDefinition
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.Element.RuleDefinition
  nameWithType: Element.RuleDefinition
- uid: NRules.RuleModel.Builders.ExistsBuilder
  name: ExistsBuilder
  href: api/NRules.RuleModel.Builders.ExistsBuilder.html
  commentId: T:NRules.RuleModel.Builders.ExistsBuilder
  fullName: NRules.RuleModel.Builders.ExistsBuilder
  nameWithType: ExistsBuilder
- uid: NRules.RuleModel.Builders.ExistsBuilder.#ctor
  name: ExistsBuilder()
  href: api/NRules.RuleModel.Builders.ExistsBuilder.html#NRules_RuleModel_Builders_ExistsBuilder__ctor
  commentId: M:NRules.RuleModel.Builders.ExistsBuilder.#ctor
  name.vb: New()
  fullName: NRules.RuleModel.Builders.ExistsBuilder.ExistsBuilder()
  fullName.vb: NRules.RuleModel.Builders.ExistsBuilder.New()
  nameWithType: ExistsBuilder.ExistsBuilder()
  nameWithType.vb: ExistsBuilder.New()
- uid: NRules.RuleModel.Builders.ExistsBuilder.#ctor*
  name: ExistsBuilder
  href: api/NRules.RuleModel.Builders.ExistsBuilder.html#NRules_RuleModel_Builders_ExistsBuilder__ctor_
  commentId: Overload:NRules.RuleModel.Builders.ExistsBuilder.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleModel.Builders.ExistsBuilder.ExistsBuilder
  fullName.vb: NRules.RuleModel.Builders.ExistsBuilder.New
  nameWithType: ExistsBuilder.ExistsBuilder
  nameWithType.vb: ExistsBuilder.New
- uid: NRules.RuleModel.Builders.ExistsBuilder.Group(NRules.RuleModel.Builders.GroupBuilder)
  name: Group(GroupBuilder)
  href: api/NRules.RuleModel.Builders.ExistsBuilder.html#NRules_RuleModel_Builders_ExistsBuilder_Group_NRules_RuleModel_Builders_GroupBuilder_
  commentId: M:NRules.RuleModel.Builders.ExistsBuilder.Group(NRules.RuleModel.Builders.GroupBuilder)
  fullName: NRules.RuleModel.Builders.ExistsBuilder.Group(NRules.RuleModel.Builders.GroupBuilder)
  nameWithType: ExistsBuilder.Group(GroupBuilder)
- uid: NRules.RuleModel.Builders.ExistsBuilder.Group(NRules.RuleModel.Builders.GroupType)
  name: Group(GroupType)
  href: api/NRules.RuleModel.Builders.ExistsBuilder.html#NRules_RuleModel_Builders_ExistsBuilder_Group_NRules_RuleModel_Builders_GroupType_
  commentId: M:NRules.RuleModel.Builders.ExistsBuilder.Group(NRules.RuleModel.Builders.GroupType)
  fullName: NRules.RuleModel.Builders.ExistsBuilder.Group(NRules.RuleModel.Builders.GroupType)
  nameWithType: ExistsBuilder.Group(GroupType)
- uid: NRules.RuleModel.Builders.ExistsBuilder.Group(NRules.RuleModel.GroupElement)
  name: Group(GroupElement)
  href: api/NRules.RuleModel.Builders.ExistsBuilder.html#NRules_RuleModel_Builders_ExistsBuilder_Group_NRules_RuleModel_GroupElement_
  commentId: M:NRules.RuleModel.Builders.ExistsBuilder.Group(NRules.RuleModel.GroupElement)
  fullName: NRules.RuleModel.Builders.ExistsBuilder.Group(NRules.RuleModel.GroupElement)
  nameWithType: ExistsBuilder.Group(GroupElement)
- uid: NRules.RuleModel.Builders.ExistsBuilder.Group*
  name: Group
  href: api/NRules.RuleModel.Builders.ExistsBuilder.html#NRules_RuleModel_Builders_ExistsBuilder_Group_
  commentId: Overload:NRules.RuleModel.Builders.ExistsBuilder.Group
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.ExistsBuilder.Group
  nameWithType: ExistsBuilder.Group
- uid: NRules.RuleModel.Builders.ExistsBuilder.Pattern(NRules.RuleModel.Builders.PatternBuilder)
  name: Pattern(PatternBuilder)
  href: api/NRules.RuleModel.Builders.ExistsBuilder.html#NRules_RuleModel_Builders_ExistsBuilder_Pattern_NRules_RuleModel_Builders_PatternBuilder_
  commentId: M:NRules.RuleModel.Builders.ExistsBuilder.Pattern(NRules.RuleModel.Builders.PatternBuilder)
  fullName: NRules.RuleModel.Builders.ExistsBuilder.Pattern(NRules.RuleModel.Builders.PatternBuilder)
  nameWithType: ExistsBuilder.Pattern(PatternBuilder)
- uid: NRules.RuleModel.Builders.ExistsBuilder.Pattern(NRules.RuleModel.Declaration)
  name: Pattern(Declaration)
  href: api/NRules.RuleModel.Builders.ExistsBuilder.html#NRules_RuleModel_Builders_ExistsBuilder_Pattern_NRules_RuleModel_Declaration_
  commentId: M:NRules.RuleModel.Builders.ExistsBuilder.Pattern(NRules.RuleModel.Declaration)
  fullName: NRules.RuleModel.Builders.ExistsBuilder.Pattern(NRules.RuleModel.Declaration)
  nameWithType: ExistsBuilder.Pattern(Declaration)
- uid: NRules.RuleModel.Builders.ExistsBuilder.Pattern(NRules.RuleModel.PatternElement)
  name: Pattern(PatternElement)
  href: api/NRules.RuleModel.Builders.ExistsBuilder.html#NRules_RuleModel_Builders_ExistsBuilder_Pattern_NRules_RuleModel_PatternElement_
  commentId: M:NRules.RuleModel.Builders.ExistsBuilder.Pattern(NRules.RuleModel.PatternElement)
  fullName: NRules.RuleModel.Builders.ExistsBuilder.Pattern(NRules.RuleModel.PatternElement)
  nameWithType: ExistsBuilder.Pattern(PatternElement)
- uid: NRules.RuleModel.Builders.ExistsBuilder.Pattern(System.Type,System.String)
  name: Pattern(Type, string)
  href: api/NRules.RuleModel.Builders.ExistsBuilder.html#NRules_RuleModel_Builders_ExistsBuilder_Pattern_System_Type_System_String_
  commentId: M:NRules.RuleModel.Builders.ExistsBuilder.Pattern(System.Type,System.String)
  name.vb: Pattern(Type, String)
  fullName: NRules.RuleModel.Builders.ExistsBuilder.Pattern(System.Type, string)
  fullName.vb: NRules.RuleModel.Builders.ExistsBuilder.Pattern(System.Type, String)
  nameWithType: ExistsBuilder.Pattern(Type, string)
  nameWithType.vb: ExistsBuilder.Pattern(Type, String)
- uid: NRules.RuleModel.Builders.ExistsBuilder.Pattern*
  name: Pattern
  href: api/NRules.RuleModel.Builders.ExistsBuilder.html#NRules_RuleModel_Builders_ExistsBuilder_Pattern_
  commentId: Overload:NRules.RuleModel.Builders.ExistsBuilder.Pattern
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.ExistsBuilder.Pattern
  nameWithType: ExistsBuilder.Pattern
- uid: NRules.RuleModel.Builders.FilterGroupBuilder
  name: FilterGroupBuilder
  href: api/NRules.RuleModel.Builders.FilterGroupBuilder.html
  commentId: T:NRules.RuleModel.Builders.FilterGroupBuilder
  fullName: NRules.RuleModel.Builders.FilterGroupBuilder
  nameWithType: FilterGroupBuilder
- uid: NRules.RuleModel.Builders.FilterGroupBuilder.#ctor
  name: FilterGroupBuilder()
  href: api/NRules.RuleModel.Builders.FilterGroupBuilder.html#NRules_RuleModel_Builders_FilterGroupBuilder__ctor
  commentId: M:NRules.RuleModel.Builders.FilterGroupBuilder.#ctor
  name.vb: New()
  fullName: NRules.RuleModel.Builders.FilterGroupBuilder.FilterGroupBuilder()
  fullName.vb: NRules.RuleModel.Builders.FilterGroupBuilder.New()
  nameWithType: FilterGroupBuilder.FilterGroupBuilder()
  nameWithType.vb: FilterGroupBuilder.New()
- uid: NRules.RuleModel.Builders.FilterGroupBuilder.#ctor*
  name: FilterGroupBuilder
  href: api/NRules.RuleModel.Builders.FilterGroupBuilder.html#NRules_RuleModel_Builders_FilterGroupBuilder__ctor_
  commentId: Overload:NRules.RuleModel.Builders.FilterGroupBuilder.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleModel.Builders.FilterGroupBuilder.FilterGroupBuilder
  fullName.vb: NRules.RuleModel.Builders.FilterGroupBuilder.New
  nameWithType: FilterGroupBuilder.FilterGroupBuilder
  nameWithType.vb: FilterGroupBuilder.New
- uid: NRules.RuleModel.Builders.FilterGroupBuilder.Filter(NRules.RuleModel.FilterElement)
  name: Filter(FilterElement)
  href: api/NRules.RuleModel.Builders.FilterGroupBuilder.html#NRules_RuleModel_Builders_FilterGroupBuilder_Filter_NRules_RuleModel_FilterElement_
  commentId: M:NRules.RuleModel.Builders.FilterGroupBuilder.Filter(NRules.RuleModel.FilterElement)
  fullName: NRules.RuleModel.Builders.FilterGroupBuilder.Filter(NRules.RuleModel.FilterElement)
  nameWithType: FilterGroupBuilder.Filter(FilterElement)
- uid: NRules.RuleModel.Builders.FilterGroupBuilder.Filter(NRules.RuleModel.FilterType,System.Linq.Expressions.LambdaExpression)
  name: Filter(FilterType, LambdaExpression)
  href: api/NRules.RuleModel.Builders.FilterGroupBuilder.html#NRules_RuleModel_Builders_FilterGroupBuilder_Filter_NRules_RuleModel_FilterType_System_Linq_Expressions_LambdaExpression_
  commentId: M:NRules.RuleModel.Builders.FilterGroupBuilder.Filter(NRules.RuleModel.FilterType,System.Linq.Expressions.LambdaExpression)
  fullName: NRules.RuleModel.Builders.FilterGroupBuilder.Filter(NRules.RuleModel.FilterType, System.Linq.Expressions.LambdaExpression)
  nameWithType: FilterGroupBuilder.Filter(FilterType, LambdaExpression)
- uid: NRules.RuleModel.Builders.FilterGroupBuilder.Filter*
  name: Filter
  href: api/NRules.RuleModel.Builders.FilterGroupBuilder.html#NRules_RuleModel_Builders_FilterGroupBuilder_Filter_
  commentId: Overload:NRules.RuleModel.Builders.FilterGroupBuilder.Filter
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.FilterGroupBuilder.Filter
  nameWithType: FilterGroupBuilder.Filter
- uid: NRules.RuleModel.Builders.ForAllBuilder
  name: ForAllBuilder
  href: api/NRules.RuleModel.Builders.ForAllBuilder.html
  commentId: T:NRules.RuleModel.Builders.ForAllBuilder
  fullName: NRules.RuleModel.Builders.ForAllBuilder
  nameWithType: ForAllBuilder
- uid: NRules.RuleModel.Builders.ForAllBuilder.#ctor
  name: ForAllBuilder()
  href: api/NRules.RuleModel.Builders.ForAllBuilder.html#NRules_RuleModel_Builders_ForAllBuilder__ctor
  commentId: M:NRules.RuleModel.Builders.ForAllBuilder.#ctor
  name.vb: New()
  fullName: NRules.RuleModel.Builders.ForAllBuilder.ForAllBuilder()
  fullName.vb: NRules.RuleModel.Builders.ForAllBuilder.New()
  nameWithType: ForAllBuilder.ForAllBuilder()
  nameWithType.vb: ForAllBuilder.New()
- uid: NRules.RuleModel.Builders.ForAllBuilder.#ctor*
  name: ForAllBuilder
  href: api/NRules.RuleModel.Builders.ForAllBuilder.html#NRules_RuleModel_Builders_ForAllBuilder__ctor_
  commentId: Overload:NRules.RuleModel.Builders.ForAllBuilder.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleModel.Builders.ForAllBuilder.ForAllBuilder
  fullName.vb: NRules.RuleModel.Builders.ForAllBuilder.New
  nameWithType: ForAllBuilder.ForAllBuilder
  nameWithType.vb: ForAllBuilder.New
- uid: NRules.RuleModel.Builders.ForAllBuilder.BasePattern(NRules.RuleModel.Builders.PatternBuilder)
  name: BasePattern(PatternBuilder)
  href: api/NRules.RuleModel.Builders.ForAllBuilder.html#NRules_RuleModel_Builders_ForAllBuilder_BasePattern_NRules_RuleModel_Builders_PatternBuilder_
  commentId: M:NRules.RuleModel.Builders.ForAllBuilder.BasePattern(NRules.RuleModel.Builders.PatternBuilder)
  fullName: NRules.RuleModel.Builders.ForAllBuilder.BasePattern(NRules.RuleModel.Builders.PatternBuilder)
  nameWithType: ForAllBuilder.BasePattern(PatternBuilder)
- uid: NRules.RuleModel.Builders.ForAllBuilder.BasePattern(NRules.RuleModel.PatternElement)
  name: BasePattern(PatternElement)
  href: api/NRules.RuleModel.Builders.ForAllBuilder.html#NRules_RuleModel_Builders_ForAllBuilder_BasePattern_NRules_RuleModel_PatternElement_
  commentId: M:NRules.RuleModel.Builders.ForAllBuilder.BasePattern(NRules.RuleModel.PatternElement)
  fullName: NRules.RuleModel.Builders.ForAllBuilder.BasePattern(NRules.RuleModel.PatternElement)
  nameWithType: ForAllBuilder.BasePattern(PatternElement)
- uid: NRules.RuleModel.Builders.ForAllBuilder.BasePattern(System.Type)
  name: BasePattern(Type)
  href: api/NRules.RuleModel.Builders.ForAllBuilder.html#NRules_RuleModel_Builders_ForAllBuilder_BasePattern_System_Type_
  commentId: M:NRules.RuleModel.Builders.ForAllBuilder.BasePattern(System.Type)
  fullName: NRules.RuleModel.Builders.ForAllBuilder.BasePattern(System.Type)
  nameWithType: ForAllBuilder.BasePattern(Type)
- uid: NRules.RuleModel.Builders.ForAllBuilder.BasePattern*
  name: BasePattern
  href: api/NRules.RuleModel.Builders.ForAllBuilder.html#NRules_RuleModel_Builders_ForAllBuilder_BasePattern_
  commentId: Overload:NRules.RuleModel.Builders.ForAllBuilder.BasePattern
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.ForAllBuilder.BasePattern
  nameWithType: ForAllBuilder.BasePattern
- uid: NRules.RuleModel.Builders.ForAllBuilder.Pattern(NRules.RuleModel.Builders.PatternBuilder)
  name: Pattern(PatternBuilder)
  href: api/NRules.RuleModel.Builders.ForAllBuilder.html#NRules_RuleModel_Builders_ForAllBuilder_Pattern_NRules_RuleModel_Builders_PatternBuilder_
  commentId: M:NRules.RuleModel.Builders.ForAllBuilder.Pattern(NRules.RuleModel.Builders.PatternBuilder)
  fullName: NRules.RuleModel.Builders.ForAllBuilder.Pattern(NRules.RuleModel.Builders.PatternBuilder)
  nameWithType: ForAllBuilder.Pattern(PatternBuilder)
- uid: NRules.RuleModel.Builders.ForAllBuilder.Pattern(NRules.RuleModel.PatternElement)
  name: Pattern(PatternElement)
  href: api/NRules.RuleModel.Builders.ForAllBuilder.html#NRules_RuleModel_Builders_ForAllBuilder_Pattern_NRules_RuleModel_PatternElement_
  commentId: M:NRules.RuleModel.Builders.ForAllBuilder.Pattern(NRules.RuleModel.PatternElement)
  fullName: NRules.RuleModel.Builders.ForAllBuilder.Pattern(NRules.RuleModel.PatternElement)
  nameWithType: ForAllBuilder.Pattern(PatternElement)
- uid: NRules.RuleModel.Builders.ForAllBuilder.Pattern(System.Type)
  name: Pattern(Type)
  href: api/NRules.RuleModel.Builders.ForAllBuilder.html#NRules_RuleModel_Builders_ForAllBuilder_Pattern_System_Type_
  commentId: M:NRules.RuleModel.Builders.ForAllBuilder.Pattern(System.Type)
  fullName: NRules.RuleModel.Builders.ForAllBuilder.Pattern(System.Type)
  nameWithType: ForAllBuilder.Pattern(Type)
- uid: NRules.RuleModel.Builders.ForAllBuilder.Pattern*
  name: Pattern
  href: api/NRules.RuleModel.Builders.ForAllBuilder.html#NRules_RuleModel_Builders_ForAllBuilder_Pattern_
  commentId: Overload:NRules.RuleModel.Builders.ForAllBuilder.Pattern
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.ForAllBuilder.Pattern
  nameWithType: ForAllBuilder.Pattern
- uid: NRules.RuleModel.Builders.GroupBuilder
  name: GroupBuilder
  href: api/NRules.RuleModel.Builders.GroupBuilder.html
  commentId: T:NRules.RuleModel.Builders.GroupBuilder
  fullName: NRules.RuleModel.Builders.GroupBuilder
  nameWithType: GroupBuilder
- uid: NRules.RuleModel.Builders.GroupBuilder.#ctor
  name: GroupBuilder()
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder__ctor
  commentId: M:NRules.RuleModel.Builders.GroupBuilder.#ctor
  name.vb: New()
  fullName: NRules.RuleModel.Builders.GroupBuilder.GroupBuilder()
  fullName.vb: NRules.RuleModel.Builders.GroupBuilder.New()
  nameWithType: GroupBuilder.GroupBuilder()
  nameWithType.vb: GroupBuilder.New()
- uid: NRules.RuleModel.Builders.GroupBuilder.#ctor*
  name: GroupBuilder
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder__ctor_
  commentId: Overload:NRules.RuleModel.Builders.GroupBuilder.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleModel.Builders.GroupBuilder.GroupBuilder
  fullName.vb: NRules.RuleModel.Builders.GroupBuilder.New
  nameWithType: GroupBuilder.GroupBuilder
  nameWithType.vb: GroupBuilder.New
- uid: NRules.RuleModel.Builders.GroupBuilder.Exists
  name: Exists()
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_Exists
  commentId: M:NRules.RuleModel.Builders.GroupBuilder.Exists
  fullName: NRules.RuleModel.Builders.GroupBuilder.Exists()
  nameWithType: GroupBuilder.Exists()
- uid: NRules.RuleModel.Builders.GroupBuilder.Exists(NRules.RuleModel.Builders.ExistsBuilder)
  name: Exists(ExistsBuilder)
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_Exists_NRules_RuleModel_Builders_ExistsBuilder_
  commentId: M:NRules.RuleModel.Builders.GroupBuilder.Exists(NRules.RuleModel.Builders.ExistsBuilder)
  fullName: NRules.RuleModel.Builders.GroupBuilder.Exists(NRules.RuleModel.Builders.ExistsBuilder)
  nameWithType: GroupBuilder.Exists(ExistsBuilder)
- uid: NRules.RuleModel.Builders.GroupBuilder.Exists(NRules.RuleModel.ExistsElement)
  name: Exists(ExistsElement)
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_Exists_NRules_RuleModel_ExistsElement_
  commentId: M:NRules.RuleModel.Builders.GroupBuilder.Exists(NRules.RuleModel.ExistsElement)
  fullName: NRules.RuleModel.Builders.GroupBuilder.Exists(NRules.RuleModel.ExistsElement)
  nameWithType: GroupBuilder.Exists(ExistsElement)
- uid: NRules.RuleModel.Builders.GroupBuilder.Exists*
  name: Exists
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_Exists_
  commentId: Overload:NRules.RuleModel.Builders.GroupBuilder.Exists
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.GroupBuilder.Exists
  nameWithType: GroupBuilder.Exists
- uid: NRules.RuleModel.Builders.GroupBuilder.ForAll
  name: ForAll()
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_ForAll
  commentId: M:NRules.RuleModel.Builders.GroupBuilder.ForAll
  fullName: NRules.RuleModel.Builders.GroupBuilder.ForAll()
  nameWithType: GroupBuilder.ForAll()
- uid: NRules.RuleModel.Builders.GroupBuilder.ForAll(NRules.RuleModel.Builders.ForAllBuilder)
  name: ForAll(ForAllBuilder)
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_ForAll_NRules_RuleModel_Builders_ForAllBuilder_
  commentId: M:NRules.RuleModel.Builders.GroupBuilder.ForAll(NRules.RuleModel.Builders.ForAllBuilder)
  fullName: NRules.RuleModel.Builders.GroupBuilder.ForAll(NRules.RuleModel.Builders.ForAllBuilder)
  nameWithType: GroupBuilder.ForAll(ForAllBuilder)
- uid: NRules.RuleModel.Builders.GroupBuilder.ForAll(NRules.RuleModel.ForAllElement)
  name: ForAll(ForAllElement)
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_ForAll_NRules_RuleModel_ForAllElement_
  commentId: M:NRules.RuleModel.Builders.GroupBuilder.ForAll(NRules.RuleModel.ForAllElement)
  fullName: NRules.RuleModel.Builders.GroupBuilder.ForAll(NRules.RuleModel.ForAllElement)
  nameWithType: GroupBuilder.ForAll(ForAllElement)
- uid: NRules.RuleModel.Builders.GroupBuilder.ForAll*
  name: ForAll
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_ForAll_
  commentId: Overload:NRules.RuleModel.Builders.GroupBuilder.ForAll
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.GroupBuilder.ForAll
  nameWithType: GroupBuilder.ForAll
- uid: NRules.RuleModel.Builders.GroupBuilder.Group(NRules.RuleModel.Builders.GroupBuilder)
  name: Group(GroupBuilder)
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_Group_NRules_RuleModel_Builders_GroupBuilder_
  commentId: M:NRules.RuleModel.Builders.GroupBuilder.Group(NRules.RuleModel.Builders.GroupBuilder)
  fullName: NRules.RuleModel.Builders.GroupBuilder.Group(NRules.RuleModel.Builders.GroupBuilder)
  nameWithType: GroupBuilder.Group(GroupBuilder)
- uid: NRules.RuleModel.Builders.GroupBuilder.Group(NRules.RuleModel.Builders.GroupType)
  name: Group(GroupType)
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_Group_NRules_RuleModel_Builders_GroupType_
  commentId: M:NRules.RuleModel.Builders.GroupBuilder.Group(NRules.RuleModel.Builders.GroupType)
  fullName: NRules.RuleModel.Builders.GroupBuilder.Group(NRules.RuleModel.Builders.GroupType)
  nameWithType: GroupBuilder.Group(GroupType)
- uid: NRules.RuleModel.Builders.GroupBuilder.Group(NRules.RuleModel.GroupElement)
  name: Group(GroupElement)
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_Group_NRules_RuleModel_GroupElement_
  commentId: M:NRules.RuleModel.Builders.GroupBuilder.Group(NRules.RuleModel.GroupElement)
  fullName: NRules.RuleModel.Builders.GroupBuilder.Group(NRules.RuleModel.GroupElement)
  nameWithType: GroupBuilder.Group(GroupElement)
- uid: NRules.RuleModel.Builders.GroupBuilder.Group*
  name: Group
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_Group_
  commentId: Overload:NRules.RuleModel.Builders.GroupBuilder.Group
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.GroupBuilder.Group
  nameWithType: GroupBuilder.Group
- uid: NRules.RuleModel.Builders.GroupBuilder.GroupType(NRules.RuleModel.Builders.GroupType)
  name: GroupType(GroupType)
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_GroupType_NRules_RuleModel_Builders_GroupType_
  commentId: M:NRules.RuleModel.Builders.GroupBuilder.GroupType(NRules.RuleModel.Builders.GroupType)
  fullName: NRules.RuleModel.Builders.GroupBuilder.GroupType(NRules.RuleModel.Builders.GroupType)
  nameWithType: GroupBuilder.GroupType(GroupType)
- uid: NRules.RuleModel.Builders.GroupBuilder.GroupType*
  name: GroupType
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_GroupType_
  commentId: Overload:NRules.RuleModel.Builders.GroupBuilder.GroupType
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.GroupBuilder.GroupType
  nameWithType: GroupBuilder.GroupType
- uid: NRules.RuleModel.Builders.GroupBuilder.Not
  name: Not()
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_Not
  commentId: M:NRules.RuleModel.Builders.GroupBuilder.Not
  fullName: NRules.RuleModel.Builders.GroupBuilder.Not()
  nameWithType: GroupBuilder.Not()
- uid: NRules.RuleModel.Builders.GroupBuilder.Not(NRules.RuleModel.Builders.NotBuilder)
  name: Not(NotBuilder)
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_Not_NRules_RuleModel_Builders_NotBuilder_
  commentId: M:NRules.RuleModel.Builders.GroupBuilder.Not(NRules.RuleModel.Builders.NotBuilder)
  fullName: NRules.RuleModel.Builders.GroupBuilder.Not(NRules.RuleModel.Builders.NotBuilder)
  nameWithType: GroupBuilder.Not(NotBuilder)
- uid: NRules.RuleModel.Builders.GroupBuilder.Not(NRules.RuleModel.NotElement)
  name: Not(NotElement)
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_Not_NRules_RuleModel_NotElement_
  commentId: M:NRules.RuleModel.Builders.GroupBuilder.Not(NRules.RuleModel.NotElement)
  fullName: NRules.RuleModel.Builders.GroupBuilder.Not(NRules.RuleModel.NotElement)
  nameWithType: GroupBuilder.Not(NotElement)
- uid: NRules.RuleModel.Builders.GroupBuilder.Not*
  name: Not
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_Not_
  commentId: Overload:NRules.RuleModel.Builders.GroupBuilder.Not
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.GroupBuilder.Not
  nameWithType: GroupBuilder.Not
- uid: NRules.RuleModel.Builders.GroupBuilder.Pattern(NRules.RuleModel.Builders.PatternBuilder)
  name: Pattern(PatternBuilder)
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_Pattern_NRules_RuleModel_Builders_PatternBuilder_
  commentId: M:NRules.RuleModel.Builders.GroupBuilder.Pattern(NRules.RuleModel.Builders.PatternBuilder)
  fullName: NRules.RuleModel.Builders.GroupBuilder.Pattern(NRules.RuleModel.Builders.PatternBuilder)
  nameWithType: GroupBuilder.Pattern(PatternBuilder)
- uid: NRules.RuleModel.Builders.GroupBuilder.Pattern(NRules.RuleModel.Declaration)
  name: Pattern(Declaration)
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_Pattern_NRules_RuleModel_Declaration_
  commentId: M:NRules.RuleModel.Builders.GroupBuilder.Pattern(NRules.RuleModel.Declaration)
  fullName: NRules.RuleModel.Builders.GroupBuilder.Pattern(NRules.RuleModel.Declaration)
  nameWithType: GroupBuilder.Pattern(Declaration)
- uid: NRules.RuleModel.Builders.GroupBuilder.Pattern(NRules.RuleModel.PatternElement)
  name: Pattern(PatternElement)
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_Pattern_NRules_RuleModel_PatternElement_
  commentId: M:NRules.RuleModel.Builders.GroupBuilder.Pattern(NRules.RuleModel.PatternElement)
  fullName: NRules.RuleModel.Builders.GroupBuilder.Pattern(NRules.RuleModel.PatternElement)
  nameWithType: GroupBuilder.Pattern(PatternElement)
- uid: NRules.RuleModel.Builders.GroupBuilder.Pattern(System.Type,System.String)
  name: Pattern(Type, string)
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_Pattern_System_Type_System_String_
  commentId: M:NRules.RuleModel.Builders.GroupBuilder.Pattern(System.Type,System.String)
  name.vb: Pattern(Type, String)
  fullName: NRules.RuleModel.Builders.GroupBuilder.Pattern(System.Type, string)
  fullName.vb: NRules.RuleModel.Builders.GroupBuilder.Pattern(System.Type, String)
  nameWithType: GroupBuilder.Pattern(Type, string)
  nameWithType.vb: GroupBuilder.Pattern(Type, String)
- uid: NRules.RuleModel.Builders.GroupBuilder.Pattern*
  name: Pattern
  href: api/NRules.RuleModel.Builders.GroupBuilder.html#NRules_RuleModel_Builders_GroupBuilder_Pattern_
  commentId: Overload:NRules.RuleModel.Builders.GroupBuilder.Pattern
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.GroupBuilder.Pattern
  nameWithType: GroupBuilder.Pattern
- uid: NRules.RuleModel.Builders.GroupType
  name: GroupType
  href: api/NRules.RuleModel.Builders.GroupType.html
  commentId: T:NRules.RuleModel.Builders.GroupType
  fullName: NRules.RuleModel.Builders.GroupType
  nameWithType: GroupType
- uid: NRules.RuleModel.Builders.GroupType.And
  name: And
  href: api/NRules.RuleModel.Builders.GroupType.html#NRules_RuleModel_Builders_GroupType_And
  commentId: F:NRules.RuleModel.Builders.GroupType.And
  fullName: NRules.RuleModel.Builders.GroupType.And
  nameWithType: GroupType.And
- uid: NRules.RuleModel.Builders.GroupType.Or
  name: Or
  href: api/NRules.RuleModel.Builders.GroupType.html#NRules_RuleModel_Builders_GroupType_Or
  commentId: F:NRules.RuleModel.Builders.GroupType.Or
  fullName: NRules.RuleModel.Builders.GroupType.Or
  nameWithType: GroupType.Or
- uid: NRules.RuleModel.Builders.NotBuilder
  name: NotBuilder
  href: api/NRules.RuleModel.Builders.NotBuilder.html
  commentId: T:NRules.RuleModel.Builders.NotBuilder
  fullName: NRules.RuleModel.Builders.NotBuilder
  nameWithType: NotBuilder
- uid: NRules.RuleModel.Builders.NotBuilder.#ctor
  name: NotBuilder()
  href: api/NRules.RuleModel.Builders.NotBuilder.html#NRules_RuleModel_Builders_NotBuilder__ctor
  commentId: M:NRules.RuleModel.Builders.NotBuilder.#ctor
  name.vb: New()
  fullName: NRules.RuleModel.Builders.NotBuilder.NotBuilder()
  fullName.vb: NRules.RuleModel.Builders.NotBuilder.New()
  nameWithType: NotBuilder.NotBuilder()
  nameWithType.vb: NotBuilder.New()
- uid: NRules.RuleModel.Builders.NotBuilder.#ctor*
  name: NotBuilder
  href: api/NRules.RuleModel.Builders.NotBuilder.html#NRules_RuleModel_Builders_NotBuilder__ctor_
  commentId: Overload:NRules.RuleModel.Builders.NotBuilder.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleModel.Builders.NotBuilder.NotBuilder
  fullName.vb: NRules.RuleModel.Builders.NotBuilder.New
  nameWithType: NotBuilder.NotBuilder
  nameWithType.vb: NotBuilder.New
- uid: NRules.RuleModel.Builders.NotBuilder.Group(NRules.RuleModel.Builders.GroupBuilder)
  name: Group(GroupBuilder)
  href: api/NRules.RuleModel.Builders.NotBuilder.html#NRules_RuleModel_Builders_NotBuilder_Group_NRules_RuleModel_Builders_GroupBuilder_
  commentId: M:NRules.RuleModel.Builders.NotBuilder.Group(NRules.RuleModel.Builders.GroupBuilder)
  fullName: NRules.RuleModel.Builders.NotBuilder.Group(NRules.RuleModel.Builders.GroupBuilder)
  nameWithType: NotBuilder.Group(GroupBuilder)
- uid: NRules.RuleModel.Builders.NotBuilder.Group(NRules.RuleModel.Builders.GroupType)
  name: Group(GroupType)
  href: api/NRules.RuleModel.Builders.NotBuilder.html#NRules_RuleModel_Builders_NotBuilder_Group_NRules_RuleModel_Builders_GroupType_
  commentId: M:NRules.RuleModel.Builders.NotBuilder.Group(NRules.RuleModel.Builders.GroupType)
  fullName: NRules.RuleModel.Builders.NotBuilder.Group(NRules.RuleModel.Builders.GroupType)
  nameWithType: NotBuilder.Group(GroupType)
- uid: NRules.RuleModel.Builders.NotBuilder.Group(NRules.RuleModel.GroupElement)
  name: Group(GroupElement)
  href: api/NRules.RuleModel.Builders.NotBuilder.html#NRules_RuleModel_Builders_NotBuilder_Group_NRules_RuleModel_GroupElement_
  commentId: M:NRules.RuleModel.Builders.NotBuilder.Group(NRules.RuleModel.GroupElement)
  fullName: NRules.RuleModel.Builders.NotBuilder.Group(NRules.RuleModel.GroupElement)
  nameWithType: NotBuilder.Group(GroupElement)
- uid: NRules.RuleModel.Builders.NotBuilder.Group*
  name: Group
  href: api/NRules.RuleModel.Builders.NotBuilder.html#NRules_RuleModel_Builders_NotBuilder_Group_
  commentId: Overload:NRules.RuleModel.Builders.NotBuilder.Group
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.NotBuilder.Group
  nameWithType: NotBuilder.Group
- uid: NRules.RuleModel.Builders.NotBuilder.Pattern(NRules.RuleModel.Builders.PatternBuilder)
  name: Pattern(PatternBuilder)
  href: api/NRules.RuleModel.Builders.NotBuilder.html#NRules_RuleModel_Builders_NotBuilder_Pattern_NRules_RuleModel_Builders_PatternBuilder_
  commentId: M:NRules.RuleModel.Builders.NotBuilder.Pattern(NRules.RuleModel.Builders.PatternBuilder)
  fullName: NRules.RuleModel.Builders.NotBuilder.Pattern(NRules.RuleModel.Builders.PatternBuilder)
  nameWithType: NotBuilder.Pattern(PatternBuilder)
- uid: NRules.RuleModel.Builders.NotBuilder.Pattern(NRules.RuleModel.Declaration)
  name: Pattern(Declaration)
  href: api/NRules.RuleModel.Builders.NotBuilder.html#NRules_RuleModel_Builders_NotBuilder_Pattern_NRules_RuleModel_Declaration_
  commentId: M:NRules.RuleModel.Builders.NotBuilder.Pattern(NRules.RuleModel.Declaration)
  fullName: NRules.RuleModel.Builders.NotBuilder.Pattern(NRules.RuleModel.Declaration)
  nameWithType: NotBuilder.Pattern(Declaration)
- uid: NRules.RuleModel.Builders.NotBuilder.Pattern(NRules.RuleModel.PatternElement)
  name: Pattern(PatternElement)
  href: api/NRules.RuleModel.Builders.NotBuilder.html#NRules_RuleModel_Builders_NotBuilder_Pattern_NRules_RuleModel_PatternElement_
  commentId: M:NRules.RuleModel.Builders.NotBuilder.Pattern(NRules.RuleModel.PatternElement)
  fullName: NRules.RuleModel.Builders.NotBuilder.Pattern(NRules.RuleModel.PatternElement)
  nameWithType: NotBuilder.Pattern(PatternElement)
- uid: NRules.RuleModel.Builders.NotBuilder.Pattern(System.Type,System.String)
  name: Pattern(Type, string)
  href: api/NRules.RuleModel.Builders.NotBuilder.html#NRules_RuleModel_Builders_NotBuilder_Pattern_System_Type_System_String_
  commentId: M:NRules.RuleModel.Builders.NotBuilder.Pattern(System.Type,System.String)
  name.vb: Pattern(Type, String)
  fullName: NRules.RuleModel.Builders.NotBuilder.Pattern(System.Type, string)
  fullName.vb: NRules.RuleModel.Builders.NotBuilder.Pattern(System.Type, String)
  nameWithType: NotBuilder.Pattern(Type, string)
  nameWithType.vb: NotBuilder.Pattern(Type, String)
- uid: NRules.RuleModel.Builders.NotBuilder.Pattern*
  name: Pattern
  href: api/NRules.RuleModel.Builders.NotBuilder.html#NRules_RuleModel_Builders_NotBuilder_Pattern_
  commentId: Overload:NRules.RuleModel.Builders.NotBuilder.Pattern
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.NotBuilder.Pattern
  nameWithType: NotBuilder.Pattern
- uid: NRules.RuleModel.Builders.PatternBuilder
  name: PatternBuilder
  href: api/NRules.RuleModel.Builders.PatternBuilder.html
  commentId: T:NRules.RuleModel.Builders.PatternBuilder
  fullName: NRules.RuleModel.Builders.PatternBuilder
  nameWithType: PatternBuilder
- uid: NRules.RuleModel.Builders.PatternBuilder.#ctor(NRules.RuleModel.Declaration)
  name: PatternBuilder(Declaration)
  href: api/NRules.RuleModel.Builders.PatternBuilder.html#NRules_RuleModel_Builders_PatternBuilder__ctor_NRules_RuleModel_Declaration_
  commentId: M:NRules.RuleModel.Builders.PatternBuilder.#ctor(NRules.RuleModel.Declaration)
  name.vb: New(Declaration)
  fullName: NRules.RuleModel.Builders.PatternBuilder.PatternBuilder(NRules.RuleModel.Declaration)
  fullName.vb: NRules.RuleModel.Builders.PatternBuilder.New(NRules.RuleModel.Declaration)
  nameWithType: PatternBuilder.PatternBuilder(Declaration)
  nameWithType.vb: PatternBuilder.New(Declaration)
- uid: NRules.RuleModel.Builders.PatternBuilder.#ctor(System.Type,System.String)
  name: PatternBuilder(Type, string)
  href: api/NRules.RuleModel.Builders.PatternBuilder.html#NRules_RuleModel_Builders_PatternBuilder__ctor_System_Type_System_String_
  commentId: M:NRules.RuleModel.Builders.PatternBuilder.#ctor(System.Type,System.String)
  name.vb: New(Type, String)
  fullName: NRules.RuleModel.Builders.PatternBuilder.PatternBuilder(System.Type, string)
  fullName.vb: NRules.RuleModel.Builders.PatternBuilder.New(System.Type, String)
  nameWithType: PatternBuilder.PatternBuilder(Type, string)
  nameWithType.vb: PatternBuilder.New(Type, String)
- uid: NRules.RuleModel.Builders.PatternBuilder.#ctor*
  name: PatternBuilder
  href: api/NRules.RuleModel.Builders.PatternBuilder.html#NRules_RuleModel_Builders_PatternBuilder__ctor_
  commentId: Overload:NRules.RuleModel.Builders.PatternBuilder.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleModel.Builders.PatternBuilder.PatternBuilder
  fullName.vb: NRules.RuleModel.Builders.PatternBuilder.New
  nameWithType: PatternBuilder.PatternBuilder
  nameWithType.vb: PatternBuilder.New
- uid: NRules.RuleModel.Builders.PatternBuilder.Aggregate
  name: Aggregate()
  href: api/NRules.RuleModel.Builders.PatternBuilder.html#NRules_RuleModel_Builders_PatternBuilder_Aggregate
  commentId: M:NRules.RuleModel.Builders.PatternBuilder.Aggregate
  fullName: NRules.RuleModel.Builders.PatternBuilder.Aggregate()
  nameWithType: PatternBuilder.Aggregate()
- uid: NRules.RuleModel.Builders.PatternBuilder.Aggregate(NRules.RuleModel.AggregateElement)
  name: Aggregate(AggregateElement)
  href: api/NRules.RuleModel.Builders.PatternBuilder.html#NRules_RuleModel_Builders_PatternBuilder_Aggregate_NRules_RuleModel_AggregateElement_
  commentId: M:NRules.RuleModel.Builders.PatternBuilder.Aggregate(NRules.RuleModel.AggregateElement)
  fullName: NRules.RuleModel.Builders.PatternBuilder.Aggregate(NRules.RuleModel.AggregateElement)
  nameWithType: PatternBuilder.Aggregate(AggregateElement)
- uid: NRules.RuleModel.Builders.PatternBuilder.Aggregate(NRules.RuleModel.Builders.AggregateBuilder)
  name: Aggregate(AggregateBuilder)
  href: api/NRules.RuleModel.Builders.PatternBuilder.html#NRules_RuleModel_Builders_PatternBuilder_Aggregate_NRules_RuleModel_Builders_AggregateBuilder_
  commentId: M:NRules.RuleModel.Builders.PatternBuilder.Aggregate(NRules.RuleModel.Builders.AggregateBuilder)
  fullName: NRules.RuleModel.Builders.PatternBuilder.Aggregate(NRules.RuleModel.Builders.AggregateBuilder)
  nameWithType: PatternBuilder.Aggregate(AggregateBuilder)
- uid: NRules.RuleModel.Builders.PatternBuilder.Aggregate*
  name: Aggregate
  href: api/NRules.RuleModel.Builders.PatternBuilder.html#NRules_RuleModel_Builders_PatternBuilder_Aggregate_
  commentId: Overload:NRules.RuleModel.Builders.PatternBuilder.Aggregate
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.PatternBuilder.Aggregate
  nameWithType: PatternBuilder.Aggregate
- uid: NRules.RuleModel.Builders.PatternBuilder.Binding
  name: Binding()
  href: api/NRules.RuleModel.Builders.PatternBuilder.html#NRules_RuleModel_Builders_PatternBuilder_Binding
  commentId: M:NRules.RuleModel.Builders.PatternBuilder.Binding
  fullName: NRules.RuleModel.Builders.PatternBuilder.Binding()
  nameWithType: PatternBuilder.Binding()
- uid: NRules.RuleModel.Builders.PatternBuilder.Binding(NRules.RuleModel.BindingElement)
  name: Binding(BindingElement)
  href: api/NRules.RuleModel.Builders.PatternBuilder.html#NRules_RuleModel_Builders_PatternBuilder_Binding_NRules_RuleModel_BindingElement_
  commentId: M:NRules.RuleModel.Builders.PatternBuilder.Binding(NRules.RuleModel.BindingElement)
  fullName: NRules.RuleModel.Builders.PatternBuilder.Binding(NRules.RuleModel.BindingElement)
  nameWithType: PatternBuilder.Binding(BindingElement)
- uid: NRules.RuleModel.Builders.PatternBuilder.Binding(NRules.RuleModel.Builders.BindingBuilder)
  name: Binding(BindingBuilder)
  href: api/NRules.RuleModel.Builders.PatternBuilder.html#NRules_RuleModel_Builders_PatternBuilder_Binding_NRules_RuleModel_Builders_BindingBuilder_
  commentId: M:NRules.RuleModel.Builders.PatternBuilder.Binding(NRules.RuleModel.Builders.BindingBuilder)
  fullName: NRules.RuleModel.Builders.PatternBuilder.Binding(NRules.RuleModel.Builders.BindingBuilder)
  nameWithType: PatternBuilder.Binding(BindingBuilder)
- uid: NRules.RuleModel.Builders.PatternBuilder.Binding*
  name: Binding
  href: api/NRules.RuleModel.Builders.PatternBuilder.html#NRules_RuleModel_Builders_PatternBuilder_Binding_
  commentId: Overload:NRules.RuleModel.Builders.PatternBuilder.Binding
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.PatternBuilder.Binding
  nameWithType: PatternBuilder.Binding
- uid: NRules.RuleModel.Builders.PatternBuilder.Condition(System.Linq.Expressions.LambdaExpression)
  name: Condition(LambdaExpression)
  href: api/NRules.RuleModel.Builders.PatternBuilder.html#NRules_RuleModel_Builders_PatternBuilder_Condition_System_Linq_Expressions_LambdaExpression_
  commentId: M:NRules.RuleModel.Builders.PatternBuilder.Condition(System.Linq.Expressions.LambdaExpression)
  fullName: NRules.RuleModel.Builders.PatternBuilder.Condition(System.Linq.Expressions.LambdaExpression)
  nameWithType: PatternBuilder.Condition(LambdaExpression)
- uid: NRules.RuleModel.Builders.PatternBuilder.Condition*
  name: Condition
  href: api/NRules.RuleModel.Builders.PatternBuilder.html#NRules_RuleModel_Builders_PatternBuilder_Condition_
  commentId: Overload:NRules.RuleModel.Builders.PatternBuilder.Condition
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.PatternBuilder.Condition
  nameWithType: PatternBuilder.Condition
- uid: NRules.RuleModel.Builders.PatternBuilder.Declaration
  name: Declaration
  href: api/NRules.RuleModel.Builders.PatternBuilder.html#NRules_RuleModel_Builders_PatternBuilder_Declaration
  commentId: P:NRules.RuleModel.Builders.PatternBuilder.Declaration
  fullName: NRules.RuleModel.Builders.PatternBuilder.Declaration
  nameWithType: PatternBuilder.Declaration
- uid: NRules.RuleModel.Builders.PatternBuilder.Declaration*
  name: Declaration
  href: api/NRules.RuleModel.Builders.PatternBuilder.html#NRules_RuleModel_Builders_PatternBuilder_Declaration_
  commentId: Overload:NRules.RuleModel.Builders.PatternBuilder.Declaration
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.PatternBuilder.Declaration
  nameWithType: PatternBuilder.Declaration
- uid: NRules.RuleModel.Builders.RuleBuilder
  name: RuleBuilder
  href: api/NRules.RuleModel.Builders.RuleBuilder.html
  commentId: T:NRules.RuleModel.Builders.RuleBuilder
  fullName: NRules.RuleModel.Builders.RuleBuilder
  nameWithType: RuleBuilder
- uid: NRules.RuleModel.Builders.RuleBuilder.#ctor
  name: RuleBuilder()
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder__ctor
  commentId: M:NRules.RuleModel.Builders.RuleBuilder.#ctor
  name.vb: New()
  fullName: NRules.RuleModel.Builders.RuleBuilder.RuleBuilder()
  fullName.vb: NRules.RuleModel.Builders.RuleBuilder.New()
  nameWithType: RuleBuilder.RuleBuilder()
  nameWithType.vb: RuleBuilder.New()
- uid: NRules.RuleModel.Builders.RuleBuilder.#ctor*
  name: RuleBuilder
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder__ctor_
  commentId: Overload:NRules.RuleModel.Builders.RuleBuilder.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleModel.Builders.RuleBuilder.RuleBuilder
  fullName.vb: NRules.RuleModel.Builders.RuleBuilder.New
  nameWithType: RuleBuilder.RuleBuilder
  nameWithType.vb: RuleBuilder.New
- uid: NRules.RuleModel.Builders.RuleBuilder.Build
  name: Build()
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Build
  commentId: M:NRules.RuleModel.Builders.RuleBuilder.Build
  fullName: NRules.RuleModel.Builders.RuleBuilder.Build()
  nameWithType: RuleBuilder.Build()
- uid: NRules.RuleModel.Builders.RuleBuilder.Build*
  name: Build
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Build_
  commentId: Overload:NRules.RuleModel.Builders.RuleBuilder.Build
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleBuilder.Build
  nameWithType: RuleBuilder.Build
- uid: NRules.RuleModel.Builders.RuleBuilder.Dependencies
  name: Dependencies()
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Dependencies
  commentId: M:NRules.RuleModel.Builders.RuleBuilder.Dependencies
  fullName: NRules.RuleModel.Builders.RuleBuilder.Dependencies()
  nameWithType: RuleBuilder.Dependencies()
- uid: NRules.RuleModel.Builders.RuleBuilder.Dependencies(NRules.RuleModel.Builders.DependencyGroupBuilder)
  name: Dependencies(DependencyGroupBuilder)
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Dependencies_NRules_RuleModel_Builders_DependencyGroupBuilder_
  commentId: M:NRules.RuleModel.Builders.RuleBuilder.Dependencies(NRules.RuleModel.Builders.DependencyGroupBuilder)
  fullName: NRules.RuleModel.Builders.RuleBuilder.Dependencies(NRules.RuleModel.Builders.DependencyGroupBuilder)
  nameWithType: RuleBuilder.Dependencies(DependencyGroupBuilder)
- uid: NRules.RuleModel.Builders.RuleBuilder.Dependencies*
  name: Dependencies
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Dependencies_
  commentId: Overload:NRules.RuleModel.Builders.RuleBuilder.Dependencies
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleBuilder.Dependencies
  nameWithType: RuleBuilder.Dependencies
- uid: NRules.RuleModel.Builders.RuleBuilder.Description(System.String)
  name: Description(string)
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Description_System_String_
  commentId: M:NRules.RuleModel.Builders.RuleBuilder.Description(System.String)
  name.vb: Description(String)
  fullName: NRules.RuleModel.Builders.RuleBuilder.Description(string)
  fullName.vb: NRules.RuleModel.Builders.RuleBuilder.Description(String)
  nameWithType: RuleBuilder.Description(string)
  nameWithType.vb: RuleBuilder.Description(String)
- uid: NRules.RuleModel.Builders.RuleBuilder.Description*
  name: Description
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Description_
  commentId: Overload:NRules.RuleModel.Builders.RuleBuilder.Description
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleBuilder.Description
  nameWithType: RuleBuilder.Description
- uid: NRules.RuleModel.Builders.RuleBuilder.Filters
  name: Filters()
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Filters
  commentId: M:NRules.RuleModel.Builders.RuleBuilder.Filters
  fullName: NRules.RuleModel.Builders.RuleBuilder.Filters()
  nameWithType: RuleBuilder.Filters()
- uid: NRules.RuleModel.Builders.RuleBuilder.Filters(NRules.RuleModel.Builders.FilterGroupBuilder)
  name: Filters(FilterGroupBuilder)
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Filters_NRules_RuleModel_Builders_FilterGroupBuilder_
  commentId: M:NRules.RuleModel.Builders.RuleBuilder.Filters(NRules.RuleModel.Builders.FilterGroupBuilder)
  fullName: NRules.RuleModel.Builders.RuleBuilder.Filters(NRules.RuleModel.Builders.FilterGroupBuilder)
  nameWithType: RuleBuilder.Filters(FilterGroupBuilder)
- uid: NRules.RuleModel.Builders.RuleBuilder.Filters*
  name: Filters
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Filters_
  commentId: Overload:NRules.RuleModel.Builders.RuleBuilder.Filters
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleBuilder.Filters
  nameWithType: RuleBuilder.Filters
- uid: NRules.RuleModel.Builders.RuleBuilder.LeftHandSide
  name: LeftHandSide()
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_LeftHandSide
  commentId: M:NRules.RuleModel.Builders.RuleBuilder.LeftHandSide
  fullName: NRules.RuleModel.Builders.RuleBuilder.LeftHandSide()
  nameWithType: RuleBuilder.LeftHandSide()
- uid: NRules.RuleModel.Builders.RuleBuilder.LeftHandSide(NRules.RuleModel.Builders.GroupBuilder)
  name: LeftHandSide(GroupBuilder)
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_LeftHandSide_NRules_RuleModel_Builders_GroupBuilder_
  commentId: M:NRules.RuleModel.Builders.RuleBuilder.LeftHandSide(NRules.RuleModel.Builders.GroupBuilder)
  fullName: NRules.RuleModel.Builders.RuleBuilder.LeftHandSide(NRules.RuleModel.Builders.GroupBuilder)
  nameWithType: RuleBuilder.LeftHandSide(GroupBuilder)
- uid: NRules.RuleModel.Builders.RuleBuilder.LeftHandSide*
  name: LeftHandSide
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_LeftHandSide_
  commentId: Overload:NRules.RuleModel.Builders.RuleBuilder.LeftHandSide
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleBuilder.LeftHandSide
  nameWithType: RuleBuilder.LeftHandSide
- uid: NRules.RuleModel.Builders.RuleBuilder.Name(System.String)
  name: Name(string)
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Name_System_String_
  commentId: M:NRules.RuleModel.Builders.RuleBuilder.Name(System.String)
  name.vb: Name(String)
  fullName: NRules.RuleModel.Builders.RuleBuilder.Name(string)
  fullName.vb: NRules.RuleModel.Builders.RuleBuilder.Name(String)
  nameWithType: RuleBuilder.Name(string)
  nameWithType.vb: RuleBuilder.Name(String)
- uid: NRules.RuleModel.Builders.RuleBuilder.Name*
  name: Name
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Name_
  commentId: Overload:NRules.RuleModel.Builders.RuleBuilder.Name
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleBuilder.Name
  nameWithType: RuleBuilder.Name
- uid: NRules.RuleModel.Builders.RuleBuilder.Priority(System.Int32)
  name: Priority(int)
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Priority_System_Int32_
  commentId: M:NRules.RuleModel.Builders.RuleBuilder.Priority(System.Int32)
  name.vb: Priority(Integer)
  fullName: NRules.RuleModel.Builders.RuleBuilder.Priority(int)
  fullName.vb: NRules.RuleModel.Builders.RuleBuilder.Priority(Integer)
  nameWithType: RuleBuilder.Priority(int)
  nameWithType.vb: RuleBuilder.Priority(Integer)
- uid: NRules.RuleModel.Builders.RuleBuilder.Priority*
  name: Priority
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Priority_
  commentId: Overload:NRules.RuleModel.Builders.RuleBuilder.Priority
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleBuilder.Priority
  nameWithType: RuleBuilder.Priority
- uid: NRules.RuleModel.Builders.RuleBuilder.Properties(System.Collections.Generic.IEnumerable{NRules.RuleModel.RuleProperty})
  name: Properties(IEnumerable<RuleProperty>)
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Properties_System_Collections_Generic_IEnumerable_NRules_RuleModel_RuleProperty__
  commentId: M:NRules.RuleModel.Builders.RuleBuilder.Properties(System.Collections.Generic.IEnumerable{NRules.RuleModel.RuleProperty})
  name.vb: Properties(IEnumerable(Of RuleProperty))
  fullName: NRules.RuleModel.Builders.RuleBuilder.Properties(System.Collections.Generic.IEnumerable<NRules.RuleModel.RuleProperty>)
  fullName.vb: NRules.RuleModel.Builders.RuleBuilder.Properties(System.Collections.Generic.IEnumerable(Of NRules.RuleModel.RuleProperty))
  nameWithType: RuleBuilder.Properties(IEnumerable<RuleProperty>)
  nameWithType.vb: RuleBuilder.Properties(IEnumerable(Of RuleProperty))
- uid: NRules.RuleModel.Builders.RuleBuilder.Properties*
  name: Properties
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Properties_
  commentId: Overload:NRules.RuleModel.Builders.RuleBuilder.Properties
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleBuilder.Properties
  nameWithType: RuleBuilder.Properties
- uid: NRules.RuleModel.Builders.RuleBuilder.Property(System.String,System.Object)
  name: Property(string, object)
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Property_System_String_System_Object_
  commentId: M:NRules.RuleModel.Builders.RuleBuilder.Property(System.String,System.Object)
  name.vb: Property(String, Object)
  fullName: NRules.RuleModel.Builders.RuleBuilder.Property(string, object)
  fullName.vb: NRules.RuleModel.Builders.RuleBuilder.Property(String, Object)
  nameWithType: RuleBuilder.Property(string, object)
  nameWithType.vb: RuleBuilder.Property(String, Object)
- uid: NRules.RuleModel.Builders.RuleBuilder.Property*
  name: Property
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Property_
  commentId: Overload:NRules.RuleModel.Builders.RuleBuilder.Property
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleBuilder.Property
  nameWithType: RuleBuilder.Property
- uid: NRules.RuleModel.Builders.RuleBuilder.Repeatability(NRules.RuleModel.RuleRepeatability)
  name: Repeatability(RuleRepeatability)
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Repeatability_NRules_RuleModel_RuleRepeatability_
  commentId: M:NRules.RuleModel.Builders.RuleBuilder.Repeatability(NRules.RuleModel.RuleRepeatability)
  fullName: NRules.RuleModel.Builders.RuleBuilder.Repeatability(NRules.RuleModel.RuleRepeatability)
  nameWithType: RuleBuilder.Repeatability(RuleRepeatability)
- uid: NRules.RuleModel.Builders.RuleBuilder.Repeatability*
  name: Repeatability
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Repeatability_
  commentId: Overload:NRules.RuleModel.Builders.RuleBuilder.Repeatability
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleBuilder.Repeatability
  nameWithType: RuleBuilder.Repeatability
- uid: NRules.RuleModel.Builders.RuleBuilder.RightHandSide
  name: RightHandSide()
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_RightHandSide
  commentId: M:NRules.RuleModel.Builders.RuleBuilder.RightHandSide
  fullName: NRules.RuleModel.Builders.RuleBuilder.RightHandSide()
  nameWithType: RuleBuilder.RightHandSide()
- uid: NRules.RuleModel.Builders.RuleBuilder.RightHandSide(NRules.RuleModel.Builders.ActionGroupBuilder)
  name: RightHandSide(ActionGroupBuilder)
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_RightHandSide_NRules_RuleModel_Builders_ActionGroupBuilder_
  commentId: M:NRules.RuleModel.Builders.RuleBuilder.RightHandSide(NRules.RuleModel.Builders.ActionGroupBuilder)
  fullName: NRules.RuleModel.Builders.RuleBuilder.RightHandSide(NRules.RuleModel.Builders.ActionGroupBuilder)
  nameWithType: RuleBuilder.RightHandSide(ActionGroupBuilder)
- uid: NRules.RuleModel.Builders.RuleBuilder.RightHandSide*
  name: RightHandSide
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_RightHandSide_
  commentId: Overload:NRules.RuleModel.Builders.RuleBuilder.RightHandSide
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleBuilder.RightHandSide
  nameWithType: RuleBuilder.RightHandSide
- uid: NRules.RuleModel.Builders.RuleBuilder.Tag(System.String)
  name: Tag(string)
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Tag_System_String_
  commentId: M:NRules.RuleModel.Builders.RuleBuilder.Tag(System.String)
  name.vb: Tag(String)
  fullName: NRules.RuleModel.Builders.RuleBuilder.Tag(string)
  fullName.vb: NRules.RuleModel.Builders.RuleBuilder.Tag(String)
  nameWithType: RuleBuilder.Tag(string)
  nameWithType.vb: RuleBuilder.Tag(String)
- uid: NRules.RuleModel.Builders.RuleBuilder.Tag*
  name: Tag
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Tag_
  commentId: Overload:NRules.RuleModel.Builders.RuleBuilder.Tag
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleBuilder.Tag
  nameWithType: RuleBuilder.Tag
- uid: NRules.RuleModel.Builders.RuleBuilder.Tags(System.Collections.Generic.IEnumerable{System.String})
  name: Tags(IEnumerable<string>)
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Tags_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:NRules.RuleModel.Builders.RuleBuilder.Tags(System.Collections.Generic.IEnumerable{System.String})
  name.vb: Tags(IEnumerable(Of String))
  fullName: NRules.RuleModel.Builders.RuleBuilder.Tags(System.Collections.Generic.IEnumerable<string>)
  fullName.vb: NRules.RuleModel.Builders.RuleBuilder.Tags(System.Collections.Generic.IEnumerable(Of String))
  nameWithType: RuleBuilder.Tags(IEnumerable<string>)
  nameWithType.vb: RuleBuilder.Tags(IEnumerable(Of String))
- uid: NRules.RuleModel.Builders.RuleBuilder.Tags*
  name: Tags
  href: api/NRules.RuleModel.Builders.RuleBuilder.html#NRules_RuleModel_Builders_RuleBuilder_Tags_
  commentId: Overload:NRules.RuleModel.Builders.RuleBuilder.Tags
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleBuilder.Tags
  nameWithType: RuleBuilder.Tags
- uid: NRules.RuleModel.Builders.RuleElementBuilder
  name: RuleElementBuilder
  href: api/NRules.RuleModel.Builders.RuleElementBuilder.html
  commentId: T:NRules.RuleModel.Builders.RuleElementBuilder
  fullName: NRules.RuleModel.Builders.RuleElementBuilder
  nameWithType: RuleElementBuilder
- uid: NRules.RuleModel.Builders.RuleElementBuilder.DeclarationName(System.String)
  name: DeclarationName(string)
  href: api/NRules.RuleModel.Builders.RuleElementBuilder.html#NRules_RuleModel_Builders_RuleElementBuilder_DeclarationName_System_String_
  commentId: M:NRules.RuleModel.Builders.RuleElementBuilder.DeclarationName(System.String)
  name.vb: DeclarationName(String)
  fullName: NRules.RuleModel.Builders.RuleElementBuilder.DeclarationName(string)
  fullName.vb: NRules.RuleModel.Builders.RuleElementBuilder.DeclarationName(String)
  nameWithType: RuleElementBuilder.DeclarationName(string)
  nameWithType.vb: RuleElementBuilder.DeclarationName(String)
- uid: NRules.RuleModel.Builders.RuleElementBuilder.DeclarationName*
  name: DeclarationName
  href: api/NRules.RuleModel.Builders.RuleElementBuilder.html#NRules_RuleModel_Builders_RuleElementBuilder_DeclarationName_
  commentId: Overload:NRules.RuleModel.Builders.RuleElementBuilder.DeclarationName
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleElementBuilder.DeclarationName
  nameWithType: RuleElementBuilder.DeclarationName
- uid: NRules.RuleModel.Builders.RuleTransformation
  name: RuleTransformation
  href: api/NRules.RuleModel.Builders.RuleTransformation.html
  commentId: T:NRules.RuleModel.Builders.RuleTransformation
  fullName: NRules.RuleModel.Builders.RuleTransformation
  nameWithType: RuleTransformation
- uid: NRules.RuleModel.Builders.RuleTransformation.Context
  name: RuleTransformation.Context
  href: api/NRules.RuleModel.Builders.RuleTransformation.Context.html
  commentId: T:NRules.RuleModel.Builders.RuleTransformation.Context
  fullName: NRules.RuleModel.Builders.RuleTransformation.Context
  nameWithType: RuleTransformation.Context
- uid: NRules.RuleModel.Builders.RuleTransformation.Transform(NRules.RuleModel.IRuleDefinition)
  name: Transform(IRuleDefinition)
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_Transform_NRules_RuleModel_IRuleDefinition_
  commentId: M:NRules.RuleModel.Builders.RuleTransformation.Transform(NRules.RuleModel.IRuleDefinition)
  fullName: NRules.RuleModel.Builders.RuleTransformation.Transform(NRules.RuleModel.IRuleDefinition)
  nameWithType: RuleTransformation.Transform(IRuleDefinition)
- uid: NRules.RuleModel.Builders.RuleTransformation.Transform*
  name: Transform
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_Transform_
  commentId: Overload:NRules.RuleModel.Builders.RuleTransformation.Transform
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleTransformation.Transform
  nameWithType: RuleTransformation.Transform
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitAction(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.ActionElement)
  name: VisitAction(Context, ActionElement)
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitAction_NRules_RuleModel_Builders_RuleTransformation_Context_NRules_RuleModel_ActionElement_
  commentId: M:NRules.RuleModel.Builders.RuleTransformation.VisitAction(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.ActionElement)
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitAction(NRules.RuleModel.Builders.RuleTransformation.Context, NRules.RuleModel.ActionElement)
  nameWithType: RuleTransformation.VisitAction(RuleTransformation.Context, ActionElement)
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitAction*
  name: VisitAction
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitAction_
  commentId: Overload:NRules.RuleModel.Builders.RuleTransformation.VisitAction
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitAction
  nameWithType: RuleTransformation.VisitAction
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitActionGroup(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.ActionGroupElement)
  name: VisitActionGroup(Context, ActionGroupElement)
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitActionGroup_NRules_RuleModel_Builders_RuleTransformation_Context_NRules_RuleModel_ActionGroupElement_
  commentId: M:NRules.RuleModel.Builders.RuleTransformation.VisitActionGroup(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.ActionGroupElement)
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitActionGroup(NRules.RuleModel.Builders.RuleTransformation.Context, NRules.RuleModel.ActionGroupElement)
  nameWithType: RuleTransformation.VisitActionGroup(RuleTransformation.Context, ActionGroupElement)
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitActionGroup*
  name: VisitActionGroup
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitActionGroup_
  commentId: Overload:NRules.RuleModel.Builders.RuleTransformation.VisitActionGroup
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitActionGroup
  nameWithType: RuleTransformation.VisitActionGroup
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitAggregate(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.AggregateElement)
  name: VisitAggregate(Context, AggregateElement)
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitAggregate_NRules_RuleModel_Builders_RuleTransformation_Context_NRules_RuleModel_AggregateElement_
  commentId: M:NRules.RuleModel.Builders.RuleTransformation.VisitAggregate(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.AggregateElement)
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitAggregate(NRules.RuleModel.Builders.RuleTransformation.Context, NRules.RuleModel.AggregateElement)
  nameWithType: RuleTransformation.VisitAggregate(RuleTransformation.Context, AggregateElement)
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitAggregate*
  name: VisitAggregate
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitAggregate_
  commentId: Overload:NRules.RuleModel.Builders.RuleTransformation.VisitAggregate
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitAggregate
  nameWithType: RuleTransformation.VisitAggregate
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitAnd(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.AndElement)
  name: VisitAnd(Context, AndElement)
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitAnd_NRules_RuleModel_Builders_RuleTransformation_Context_NRules_RuleModel_AndElement_
  commentId: M:NRules.RuleModel.Builders.RuleTransformation.VisitAnd(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.AndElement)
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitAnd(NRules.RuleModel.Builders.RuleTransformation.Context, NRules.RuleModel.AndElement)
  nameWithType: RuleTransformation.VisitAnd(RuleTransformation.Context, AndElement)
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitAnd*
  name: VisitAnd
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitAnd_
  commentId: Overload:NRules.RuleModel.Builders.RuleTransformation.VisitAnd
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitAnd
  nameWithType: RuleTransformation.VisitAnd
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitBinding(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.BindingElement)
  name: VisitBinding(Context, BindingElement)
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitBinding_NRules_RuleModel_Builders_RuleTransformation_Context_NRules_RuleModel_BindingElement_
  commentId: M:NRules.RuleModel.Builders.RuleTransformation.VisitBinding(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.BindingElement)
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitBinding(NRules.RuleModel.Builders.RuleTransformation.Context, NRules.RuleModel.BindingElement)
  nameWithType: RuleTransformation.VisitBinding(RuleTransformation.Context, BindingElement)
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitBinding*
  name: VisitBinding
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitBinding_
  commentId: Overload:NRules.RuleModel.Builders.RuleTransformation.VisitBinding
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitBinding
  nameWithType: RuleTransformation.VisitBinding
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitExists(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.ExistsElement)
  name: VisitExists(Context, ExistsElement)
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitExists_NRules_RuleModel_Builders_RuleTransformation_Context_NRules_RuleModel_ExistsElement_
  commentId: M:NRules.RuleModel.Builders.RuleTransformation.VisitExists(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.ExistsElement)
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitExists(NRules.RuleModel.Builders.RuleTransformation.Context, NRules.RuleModel.ExistsElement)
  nameWithType: RuleTransformation.VisitExists(RuleTransformation.Context, ExistsElement)
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitExists*
  name: VisitExists
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitExists_
  commentId: Overload:NRules.RuleModel.Builders.RuleTransformation.VisitExists
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitExists
  nameWithType: RuleTransformation.VisitExists
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitForAll(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.ForAllElement)
  name: VisitForAll(Context, ForAllElement)
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitForAll_NRules_RuleModel_Builders_RuleTransformation_Context_NRules_RuleModel_ForAllElement_
  commentId: M:NRules.RuleModel.Builders.RuleTransformation.VisitForAll(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.ForAllElement)
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitForAll(NRules.RuleModel.Builders.RuleTransformation.Context, NRules.RuleModel.ForAllElement)
  nameWithType: RuleTransformation.VisitForAll(RuleTransformation.Context, ForAllElement)
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitForAll*
  name: VisitForAll
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitForAll_
  commentId: Overload:NRules.RuleModel.Builders.RuleTransformation.VisitForAll
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitForAll
  nameWithType: RuleTransformation.VisitForAll
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitNot(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.NotElement)
  name: VisitNot(Context, NotElement)
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitNot_NRules_RuleModel_Builders_RuleTransformation_Context_NRules_RuleModel_NotElement_
  commentId: M:NRules.RuleModel.Builders.RuleTransformation.VisitNot(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.NotElement)
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitNot(NRules.RuleModel.Builders.RuleTransformation.Context, NRules.RuleModel.NotElement)
  nameWithType: RuleTransformation.VisitNot(RuleTransformation.Context, NotElement)
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitNot*
  name: VisitNot
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitNot_
  commentId: Overload:NRules.RuleModel.Builders.RuleTransformation.VisitNot
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitNot
  nameWithType: RuleTransformation.VisitNot
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitOr(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.OrElement)
  name: VisitOr(Context, OrElement)
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitOr_NRules_RuleModel_Builders_RuleTransformation_Context_NRules_RuleModel_OrElement_
  commentId: M:NRules.RuleModel.Builders.RuleTransformation.VisitOr(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.OrElement)
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitOr(NRules.RuleModel.Builders.RuleTransformation.Context, NRules.RuleModel.OrElement)
  nameWithType: RuleTransformation.VisitOr(RuleTransformation.Context, OrElement)
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitOr*
  name: VisitOr
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitOr_
  commentId: Overload:NRules.RuleModel.Builders.RuleTransformation.VisitOr
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitOr
  nameWithType: RuleTransformation.VisitOr
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitPattern(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.PatternElement)
  name: VisitPattern(Context, PatternElement)
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitPattern_NRules_RuleModel_Builders_RuleTransformation_Context_NRules_RuleModel_PatternElement_
  commentId: M:NRules.RuleModel.Builders.RuleTransformation.VisitPattern(NRules.RuleModel.Builders.RuleTransformation.Context,NRules.RuleModel.PatternElement)
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitPattern(NRules.RuleModel.Builders.RuleTransformation.Context, NRules.RuleModel.PatternElement)
  nameWithType: RuleTransformation.VisitPattern(RuleTransformation.Context, PatternElement)
- uid: NRules.RuleModel.Builders.RuleTransformation.VisitPattern*
  name: VisitPattern
  href: api/NRules.RuleModel.Builders.RuleTransformation.html#NRules_RuleModel_Builders_RuleTransformation_VisitPattern_
  commentId: Overload:NRules.RuleModel.Builders.RuleTransformation.VisitPattern
  isSpec: "True"
  fullName: NRules.RuleModel.Builders.RuleTransformation.VisitPattern
  nameWithType: RuleTransformation.VisitPattern
- uid: NRules.RuleModel.Declaration
  name: Declaration
  href: api/NRules.RuleModel.Declaration.html
  commentId: T:NRules.RuleModel.Declaration
  fullName: NRules.RuleModel.Declaration
  nameWithType: Declaration
- uid: NRules.RuleModel.Declaration.Equals(NRules.RuleModel.Declaration)
  name: Equals(Declaration)
  href: api/NRules.RuleModel.Declaration.html#NRules_RuleModel_Declaration_Equals_NRules_RuleModel_Declaration_
  commentId: M:NRules.RuleModel.Declaration.Equals(NRules.RuleModel.Declaration)
  fullName: NRules.RuleModel.Declaration.Equals(NRules.RuleModel.Declaration)
  nameWithType: Declaration.Equals(Declaration)
- uid: NRules.RuleModel.Declaration.Equals(System.Object)
  name: Equals(object)
  href: api/NRules.RuleModel.Declaration.html#NRules_RuleModel_Declaration_Equals_System_Object_
  commentId: M:NRules.RuleModel.Declaration.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: NRules.RuleModel.Declaration.Equals(object)
  fullName.vb: NRules.RuleModel.Declaration.Equals(Object)
  nameWithType: Declaration.Equals(object)
  nameWithType.vb: Declaration.Equals(Object)
- uid: NRules.RuleModel.Declaration.Equals*
  name: Equals
  href: api/NRules.RuleModel.Declaration.html#NRules_RuleModel_Declaration_Equals_
  commentId: Overload:NRules.RuleModel.Declaration.Equals
  isSpec: "True"
  fullName: NRules.RuleModel.Declaration.Equals
  nameWithType: Declaration.Equals
- uid: NRules.RuleModel.Declaration.GetHashCode
  name: GetHashCode()
  href: api/NRules.RuleModel.Declaration.html#NRules_RuleModel_Declaration_GetHashCode
  commentId: M:NRules.RuleModel.Declaration.GetHashCode
  fullName: NRules.RuleModel.Declaration.GetHashCode()
  nameWithType: Declaration.GetHashCode()
- uid: NRules.RuleModel.Declaration.GetHashCode*
  name: GetHashCode
  href: api/NRules.RuleModel.Declaration.html#NRules_RuleModel_Declaration_GetHashCode_
  commentId: Overload:NRules.RuleModel.Declaration.GetHashCode
  isSpec: "True"
  fullName: NRules.RuleModel.Declaration.GetHashCode
  nameWithType: Declaration.GetHashCode
- uid: NRules.RuleModel.Declaration.Name
  name: Name
  href: api/NRules.RuleModel.Declaration.html#NRules_RuleModel_Declaration_Name
  commentId: P:NRules.RuleModel.Declaration.Name
  fullName: NRules.RuleModel.Declaration.Name
  nameWithType: Declaration.Name
- uid: NRules.RuleModel.Declaration.Name*
  name: Name
  href: api/NRules.RuleModel.Declaration.html#NRules_RuleModel_Declaration_Name_
  commentId: Overload:NRules.RuleModel.Declaration.Name
  isSpec: "True"
  fullName: NRules.RuleModel.Declaration.Name
  nameWithType: Declaration.Name
- uid: NRules.RuleModel.Declaration.Target
  name: Target
  href: api/NRules.RuleModel.Declaration.html#NRules_RuleModel_Declaration_Target
  commentId: P:NRules.RuleModel.Declaration.Target
  fullName: NRules.RuleModel.Declaration.Target
  nameWithType: Declaration.Target
- uid: NRules.RuleModel.Declaration.Target*
  name: Target
  href: api/NRules.RuleModel.Declaration.html#NRules_RuleModel_Declaration_Target_
  commentId: Overload:NRules.RuleModel.Declaration.Target
  isSpec: "True"
  fullName: NRules.RuleModel.Declaration.Target
  nameWithType: Declaration.Target
- uid: NRules.RuleModel.Declaration.Type
  name: Type
  href: api/NRules.RuleModel.Declaration.html#NRules_RuleModel_Declaration_Type
  commentId: P:NRules.RuleModel.Declaration.Type
  fullName: NRules.RuleModel.Declaration.Type
  nameWithType: Declaration.Type
- uid: NRules.RuleModel.Declaration.Type*
  name: Type
  href: api/NRules.RuleModel.Declaration.html#NRules_RuleModel_Declaration_Type_
  commentId: Overload:NRules.RuleModel.Declaration.Type
  isSpec: "True"
  fullName: NRules.RuleModel.Declaration.Type
  nameWithType: Declaration.Type
- uid: NRules.RuleModel.DeclarationExtensions
  name: DeclarationExtensions
  href: api/NRules.RuleModel.DeclarationExtensions.html
  commentId: T:NRules.RuleModel.DeclarationExtensions
  fullName: NRules.RuleModel.DeclarationExtensions
  nameWithType: DeclarationExtensions
- uid: NRules.RuleModel.DeclarationExtensions.ToDeclaration(System.Linq.Expressions.ParameterExpression)
  name: ToDeclaration(ParameterExpression)
  href: api/NRules.RuleModel.DeclarationExtensions.html#NRules_RuleModel_DeclarationExtensions_ToDeclaration_System_Linq_Expressions_ParameterExpression_
  commentId: M:NRules.RuleModel.DeclarationExtensions.ToDeclaration(System.Linq.Expressions.ParameterExpression)
  fullName: NRules.RuleModel.DeclarationExtensions.ToDeclaration(System.Linq.Expressions.ParameterExpression)
  nameWithType: DeclarationExtensions.ToDeclaration(ParameterExpression)
- uid: NRules.RuleModel.DeclarationExtensions.ToDeclaration*
  name: ToDeclaration
  href: api/NRules.RuleModel.DeclarationExtensions.html#NRules_RuleModel_DeclarationExtensions_ToDeclaration_
  commentId: Overload:NRules.RuleModel.DeclarationExtensions.ToDeclaration
  isSpec: "True"
  fullName: NRules.RuleModel.DeclarationExtensions.ToDeclaration
  nameWithType: DeclarationExtensions.ToDeclaration
- uid: NRules.RuleModel.DeclarationExtensions.ToParameterExpression(NRules.RuleModel.Declaration)
  name: ToParameterExpression(Declaration)
  href: api/NRules.RuleModel.DeclarationExtensions.html#NRules_RuleModel_DeclarationExtensions_ToParameterExpression_NRules_RuleModel_Declaration_
  commentId: M:NRules.RuleModel.DeclarationExtensions.ToParameterExpression(NRules.RuleModel.Declaration)
  fullName: NRules.RuleModel.DeclarationExtensions.ToParameterExpression(NRules.RuleModel.Declaration)
  nameWithType: DeclarationExtensions.ToParameterExpression(Declaration)
- uid: NRules.RuleModel.DeclarationExtensions.ToParameterExpression*
  name: ToParameterExpression
  href: api/NRules.RuleModel.DeclarationExtensions.html#NRules_RuleModel_DeclarationExtensions_ToParameterExpression_
  commentId: Overload:NRules.RuleModel.DeclarationExtensions.ToParameterExpression
  isSpec: "True"
  fullName: NRules.RuleModel.DeclarationExtensions.ToParameterExpression
  nameWithType: DeclarationExtensions.ToParameterExpression
- uid: NRules.RuleModel.DependencyElement
  name: DependencyElement
  href: api/NRules.RuleModel.DependencyElement.html
  commentId: T:NRules.RuleModel.DependencyElement
  fullName: NRules.RuleModel.DependencyElement
  nameWithType: DependencyElement
- uid: NRules.RuleModel.DependencyElement.Declaration
  name: Declaration
  href: api/NRules.RuleModel.DependencyElement.html#NRules_RuleModel_DependencyElement_Declaration
  commentId: P:NRules.RuleModel.DependencyElement.Declaration
  fullName: NRules.RuleModel.DependencyElement.Declaration
  nameWithType: DependencyElement.Declaration
- uid: NRules.RuleModel.DependencyElement.Declaration*
  name: Declaration
  href: api/NRules.RuleModel.DependencyElement.html#NRules_RuleModel_DependencyElement_Declaration_
  commentId: Overload:NRules.RuleModel.DependencyElement.Declaration
  isSpec: "True"
  fullName: NRules.RuleModel.DependencyElement.Declaration
  nameWithType: DependencyElement.Declaration
- uid: NRules.RuleModel.DependencyElement.ElementType
  name: ElementType
  href: api/NRules.RuleModel.DependencyElement.html#NRules_RuleModel_DependencyElement_ElementType
  commentId: P:NRules.RuleModel.DependencyElement.ElementType
  fullName: NRules.RuleModel.DependencyElement.ElementType
  nameWithType: DependencyElement.ElementType
- uid: NRules.RuleModel.DependencyElement.ElementType*
  name: ElementType
  href: api/NRules.RuleModel.DependencyElement.html#NRules_RuleModel_DependencyElement_ElementType_
  commentId: Overload:NRules.RuleModel.DependencyElement.ElementType
  isSpec: "True"
  fullName: NRules.RuleModel.DependencyElement.ElementType
  nameWithType: DependencyElement.ElementType
- uid: NRules.RuleModel.DependencyElement.ServiceType
  name: ServiceType
  href: api/NRules.RuleModel.DependencyElement.html#NRules_RuleModel_DependencyElement_ServiceType
  commentId: P:NRules.RuleModel.DependencyElement.ServiceType
  fullName: NRules.RuleModel.DependencyElement.ServiceType
  nameWithType: DependencyElement.ServiceType
- uid: NRules.RuleModel.DependencyElement.ServiceType*
  name: ServiceType
  href: api/NRules.RuleModel.DependencyElement.html#NRules_RuleModel_DependencyElement_ServiceType_
  commentId: Overload:NRules.RuleModel.DependencyElement.ServiceType
  isSpec: "True"
  fullName: NRules.RuleModel.DependencyElement.ServiceType
  nameWithType: DependencyElement.ServiceType
- uid: NRules.RuleModel.DependencyGroupElement
  name: DependencyGroupElement
  href: api/NRules.RuleModel.DependencyGroupElement.html
  commentId: T:NRules.RuleModel.DependencyGroupElement
  fullName: NRules.RuleModel.DependencyGroupElement
  nameWithType: DependencyGroupElement
- uid: NRules.RuleModel.DependencyGroupElement.Dependencies
  name: Dependencies
  href: api/NRules.RuleModel.DependencyGroupElement.html#NRules_RuleModel_DependencyGroupElement_Dependencies
  commentId: P:NRules.RuleModel.DependencyGroupElement.Dependencies
  fullName: NRules.RuleModel.DependencyGroupElement.Dependencies
  nameWithType: DependencyGroupElement.Dependencies
- uid: NRules.RuleModel.DependencyGroupElement.Dependencies*
  name: Dependencies
  href: api/NRules.RuleModel.DependencyGroupElement.html#NRules_RuleModel_DependencyGroupElement_Dependencies_
  commentId: Overload:NRules.RuleModel.DependencyGroupElement.Dependencies
  isSpec: "True"
  fullName: NRules.RuleModel.DependencyGroupElement.Dependencies
  nameWithType: DependencyGroupElement.Dependencies
- uid: NRules.RuleModel.DependencyGroupElement.ElementType
  name: ElementType
  href: api/NRules.RuleModel.DependencyGroupElement.html#NRules_RuleModel_DependencyGroupElement_ElementType
  commentId: P:NRules.RuleModel.DependencyGroupElement.ElementType
  fullName: NRules.RuleModel.DependencyGroupElement.ElementType
  nameWithType: DependencyGroupElement.ElementType
- uid: NRules.RuleModel.DependencyGroupElement.ElementType*
  name: ElementType
  href: api/NRules.RuleModel.DependencyGroupElement.html#NRules_RuleModel_DependencyGroupElement_ElementType_
  commentId: Overload:NRules.RuleModel.DependencyGroupElement.ElementType
  isSpec: "True"
  fullName: NRules.RuleModel.DependencyGroupElement.ElementType
  nameWithType: DependencyGroupElement.ElementType
- uid: NRules.RuleModel.ElementType
  name: ElementType
  href: api/NRules.RuleModel.ElementType.html
  commentId: T:NRules.RuleModel.ElementType
  fullName: NRules.RuleModel.ElementType
  nameWithType: ElementType
- uid: NRules.RuleModel.ElementType.Action
  name: Action
  href: api/NRules.RuleModel.ElementType.html#NRules_RuleModel_ElementType_Action
  commentId: F:NRules.RuleModel.ElementType.Action
  fullName: NRules.RuleModel.ElementType.Action
  nameWithType: ElementType.Action
- uid: NRules.RuleModel.ElementType.ActionGroup
  name: ActionGroup
  href: api/NRules.RuleModel.ElementType.html#NRules_RuleModel_ElementType_ActionGroup
  commentId: F:NRules.RuleModel.ElementType.ActionGroup
  fullName: NRules.RuleModel.ElementType.ActionGroup
  nameWithType: ElementType.ActionGroup
- uid: NRules.RuleModel.ElementType.Aggregate
  name: Aggregate
  href: api/NRules.RuleModel.ElementType.html#NRules_RuleModel_ElementType_Aggregate
  commentId: F:NRules.RuleModel.ElementType.Aggregate
  fullName: NRules.RuleModel.ElementType.Aggregate
  nameWithType: ElementType.Aggregate
- uid: NRules.RuleModel.ElementType.And
  name: And
  href: api/NRules.RuleModel.ElementType.html#NRules_RuleModel_ElementType_And
  commentId: F:NRules.RuleModel.ElementType.And
  fullName: NRules.RuleModel.ElementType.And
  nameWithType: ElementType.And
- uid: NRules.RuleModel.ElementType.Binding
  name: Binding
  href: api/NRules.RuleModel.ElementType.html#NRules_RuleModel_ElementType_Binding
  commentId: F:NRules.RuleModel.ElementType.Binding
  fullName: NRules.RuleModel.ElementType.Binding
  nameWithType: ElementType.Binding
- uid: NRules.RuleModel.ElementType.Dependency
  name: Dependency
  href: api/NRules.RuleModel.ElementType.html#NRules_RuleModel_ElementType_Dependency
  commentId: F:NRules.RuleModel.ElementType.Dependency
  fullName: NRules.RuleModel.ElementType.Dependency
  nameWithType: ElementType.Dependency
- uid: NRules.RuleModel.ElementType.DependencyGroup
  name: DependencyGroup
  href: api/NRules.RuleModel.ElementType.html#NRules_RuleModel_ElementType_DependencyGroup
  commentId: F:NRules.RuleModel.ElementType.DependencyGroup
  fullName: NRules.RuleModel.ElementType.DependencyGroup
  nameWithType: ElementType.DependencyGroup
- uid: NRules.RuleModel.ElementType.Exists
  name: Exists
  href: api/NRules.RuleModel.ElementType.html#NRules_RuleModel_ElementType_Exists
  commentId: F:NRules.RuleModel.ElementType.Exists
  fullName: NRules.RuleModel.ElementType.Exists
  nameWithType: ElementType.Exists
- uid: NRules.RuleModel.ElementType.Filter
  name: Filter
  href: api/NRules.RuleModel.ElementType.html#NRules_RuleModel_ElementType_Filter
  commentId: F:NRules.RuleModel.ElementType.Filter
  fullName: NRules.RuleModel.ElementType.Filter
  nameWithType: ElementType.Filter
- uid: NRules.RuleModel.ElementType.FilterGroup
  name: FilterGroup
  href: api/NRules.RuleModel.ElementType.html#NRules_RuleModel_ElementType_FilterGroup
  commentId: F:NRules.RuleModel.ElementType.FilterGroup
  fullName: NRules.RuleModel.ElementType.FilterGroup
  nameWithType: ElementType.FilterGroup
- uid: NRules.RuleModel.ElementType.ForAll
  name: ForAll
  href: api/NRules.RuleModel.ElementType.html#NRules_RuleModel_ElementType_ForAll
  commentId: F:NRules.RuleModel.ElementType.ForAll
  fullName: NRules.RuleModel.ElementType.ForAll
  nameWithType: ElementType.ForAll
- uid: NRules.RuleModel.ElementType.NamedExpression
  name: NamedExpression
  href: api/NRules.RuleModel.ElementType.html#NRules_RuleModel_ElementType_NamedExpression
  commentId: F:NRules.RuleModel.ElementType.NamedExpression
  fullName: NRules.RuleModel.ElementType.NamedExpression
  nameWithType: ElementType.NamedExpression
- uid: NRules.RuleModel.ElementType.Not
  name: Not
  href: api/NRules.RuleModel.ElementType.html#NRules_RuleModel_ElementType_Not
  commentId: F:NRules.RuleModel.ElementType.Not
  fullName: NRules.RuleModel.ElementType.Not
  nameWithType: ElementType.Not
- uid: NRules.RuleModel.ElementType.Or
  name: Or
  href: api/NRules.RuleModel.ElementType.html#NRules_RuleModel_ElementType_Or
  commentId: F:NRules.RuleModel.ElementType.Or
  fullName: NRules.RuleModel.ElementType.Or
  nameWithType: ElementType.Or
- uid: NRules.RuleModel.ElementType.Pattern
  name: Pattern
  href: api/NRules.RuleModel.ElementType.html#NRules_RuleModel_ElementType_Pattern
  commentId: F:NRules.RuleModel.ElementType.Pattern
  fullName: NRules.RuleModel.ElementType.Pattern
  nameWithType: ElementType.Pattern
- uid: NRules.RuleModel.ExistsElement
  name: ExistsElement
  href: api/NRules.RuleModel.ExistsElement.html
  commentId: T:NRules.RuleModel.ExistsElement
  fullName: NRules.RuleModel.ExistsElement
  nameWithType: ExistsElement
- uid: NRules.RuleModel.ExistsElement.ElementType
  name: ElementType
  href: api/NRules.RuleModel.ExistsElement.html#NRules_RuleModel_ExistsElement_ElementType
  commentId: P:NRules.RuleModel.ExistsElement.ElementType
  fullName: NRules.RuleModel.ExistsElement.ElementType
  nameWithType: ExistsElement.ElementType
- uid: NRules.RuleModel.ExistsElement.ElementType*
  name: ElementType
  href: api/NRules.RuleModel.ExistsElement.html#NRules_RuleModel_ExistsElement_ElementType_
  commentId: Overload:NRules.RuleModel.ExistsElement.ElementType
  isSpec: "True"
  fullName: NRules.RuleModel.ExistsElement.ElementType
  nameWithType: ExistsElement.ElementType
- uid: NRules.RuleModel.ExistsElement.Source
  name: Source
  href: api/NRules.RuleModel.ExistsElement.html#NRules_RuleModel_ExistsElement_Source
  commentId: P:NRules.RuleModel.ExistsElement.Source
  fullName: NRules.RuleModel.ExistsElement.Source
  nameWithType: ExistsElement.Source
- uid: NRules.RuleModel.ExistsElement.Source*
  name: Source
  href: api/NRules.RuleModel.ExistsElement.html#NRules_RuleModel_ExistsElement_Source_
  commentId: Overload:NRules.RuleModel.ExistsElement.Source
  isSpec: "True"
  fullName: NRules.RuleModel.ExistsElement.Source
  nameWithType: ExistsElement.Source
- uid: NRules.RuleModel.ExpressionCollection
  name: ExpressionCollection
  href: api/NRules.RuleModel.ExpressionCollection.html
  commentId: T:NRules.RuleModel.ExpressionCollection
  fullName: NRules.RuleModel.ExpressionCollection
  nameWithType: ExpressionCollection
- uid: NRules.RuleModel.ExpressionCollection.Count
  name: Count
  href: api/NRules.RuleModel.ExpressionCollection.html#NRules_RuleModel_ExpressionCollection_Count
  commentId: P:NRules.RuleModel.ExpressionCollection.Count
  fullName: NRules.RuleModel.ExpressionCollection.Count
  nameWithType: ExpressionCollection.Count
- uid: NRules.RuleModel.ExpressionCollection.Count*
  name: Count
  href: api/NRules.RuleModel.ExpressionCollection.html#NRules_RuleModel_ExpressionCollection_Count_
  commentId: Overload:NRules.RuleModel.ExpressionCollection.Count
  isSpec: "True"
  fullName: NRules.RuleModel.ExpressionCollection.Count
  nameWithType: ExpressionCollection.Count
- uid: NRules.RuleModel.ExpressionCollection.Find(System.String)
  name: Find(string)
  href: api/NRules.RuleModel.ExpressionCollection.html#NRules_RuleModel_ExpressionCollection_Find_System_String_
  commentId: M:NRules.RuleModel.ExpressionCollection.Find(System.String)
  name.vb: Find(String)
  fullName: NRules.RuleModel.ExpressionCollection.Find(string)
  fullName.vb: NRules.RuleModel.ExpressionCollection.Find(String)
  nameWithType: ExpressionCollection.Find(string)
  nameWithType.vb: ExpressionCollection.Find(String)
- uid: NRules.RuleModel.ExpressionCollection.Find*
  name: Find
  href: api/NRules.RuleModel.ExpressionCollection.html#NRules_RuleModel_ExpressionCollection_Find_
  commentId: Overload:NRules.RuleModel.ExpressionCollection.Find
  isSpec: "True"
  fullName: NRules.RuleModel.ExpressionCollection.Find
  nameWithType: ExpressionCollection.Find
- uid: NRules.RuleModel.ExpressionCollection.FindSingleOrDefault(System.String)
  name: FindSingleOrDefault(string)
  href: api/NRules.RuleModel.ExpressionCollection.html#NRules_RuleModel_ExpressionCollection_FindSingleOrDefault_System_String_
  commentId: M:NRules.RuleModel.ExpressionCollection.FindSingleOrDefault(System.String)
  name.vb: FindSingleOrDefault(String)
  fullName: NRules.RuleModel.ExpressionCollection.FindSingleOrDefault(string)
  fullName.vb: NRules.RuleModel.ExpressionCollection.FindSingleOrDefault(String)
  nameWithType: ExpressionCollection.FindSingleOrDefault(string)
  nameWithType.vb: ExpressionCollection.FindSingleOrDefault(String)
- uid: NRules.RuleModel.ExpressionCollection.FindSingleOrDefault*
  name: FindSingleOrDefault
  href: api/NRules.RuleModel.ExpressionCollection.html#NRules_RuleModel_ExpressionCollection_FindSingleOrDefault_
  commentId: Overload:NRules.RuleModel.ExpressionCollection.FindSingleOrDefault
  isSpec: "True"
  fullName: NRules.RuleModel.ExpressionCollection.FindSingleOrDefault
  nameWithType: ExpressionCollection.FindSingleOrDefault
- uid: NRules.RuleModel.ExpressionCollection.GetEnumerator
  name: GetEnumerator()
  href: api/NRules.RuleModel.ExpressionCollection.html#NRules_RuleModel_ExpressionCollection_GetEnumerator
  commentId: M:NRules.RuleModel.ExpressionCollection.GetEnumerator
  fullName: NRules.RuleModel.ExpressionCollection.GetEnumerator()
  nameWithType: ExpressionCollection.GetEnumerator()
- uid: NRules.RuleModel.ExpressionCollection.GetEnumerator*
  name: GetEnumerator
  href: api/NRules.RuleModel.ExpressionCollection.html#NRules_RuleModel_ExpressionCollection_GetEnumerator_
  commentId: Overload:NRules.RuleModel.ExpressionCollection.GetEnumerator
  isSpec: "True"
  fullName: NRules.RuleModel.ExpressionCollection.GetEnumerator
  nameWithType: ExpressionCollection.GetEnumerator
- uid: NRules.RuleModel.ExpressionCollection.Item(System.String)
  name: this[string]
  href: api/NRules.RuleModel.ExpressionCollection.html#NRules_RuleModel_ExpressionCollection_Item_System_String_
  commentId: P:NRules.RuleModel.ExpressionCollection.Item(System.String)
  name.vb: this[](String)
  fullName: NRules.RuleModel.ExpressionCollection.this[string]
  fullName.vb: NRules.RuleModel.ExpressionCollection.this[](String)
  nameWithType: ExpressionCollection.this[string]
  nameWithType.vb: ExpressionCollection.this[](String)
- uid: NRules.RuleModel.ExpressionCollection.Item*
  name: this
  href: api/NRules.RuleModel.ExpressionCollection.html#NRules_RuleModel_ExpressionCollection_Item_
  commentId: Overload:NRules.RuleModel.ExpressionCollection.Item
  isSpec: "True"
  name.vb: this[]
  fullName: NRules.RuleModel.ExpressionCollection.this
  fullName.vb: NRules.RuleModel.ExpressionCollection.this[]
  nameWithType: ExpressionCollection.this
  nameWithType.vb: ExpressionCollection.this[]
- uid: NRules.RuleModel.ExpressionElement
  name: ExpressionElement
  href: api/NRules.RuleModel.ExpressionElement.html
  commentId: T:NRules.RuleModel.ExpressionElement
  fullName: NRules.RuleModel.ExpressionElement
  nameWithType: ExpressionElement
- uid: NRules.RuleModel.ExpressionElement.Expression
  name: Expression
  href: api/NRules.RuleModel.ExpressionElement.html#NRules_RuleModel_ExpressionElement_Expression
  commentId: P:NRules.RuleModel.ExpressionElement.Expression
  fullName: NRules.RuleModel.ExpressionElement.Expression
  nameWithType: ExpressionElement.Expression
- uid: NRules.RuleModel.ExpressionElement.Expression*
  name: Expression
  href: api/NRules.RuleModel.ExpressionElement.html#NRules_RuleModel_ExpressionElement_Expression_
  commentId: Overload:NRules.RuleModel.ExpressionElement.Expression
  isSpec: "True"
  fullName: NRules.RuleModel.ExpressionElement.Expression
  nameWithType: ExpressionElement.Expression
- uid: NRules.RuleModel.FactSourceType
  name: FactSourceType
  href: api/NRules.RuleModel.FactSourceType.html
  commentId: T:NRules.RuleModel.FactSourceType
  fullName: NRules.RuleModel.FactSourceType
  nameWithType: FactSourceType
- uid: NRules.RuleModel.FactSourceType.Aggregate
  name: Aggregate
  href: api/NRules.RuleModel.FactSourceType.html#NRules_RuleModel_FactSourceType_Aggregate
  commentId: F:NRules.RuleModel.FactSourceType.Aggregate
  fullName: NRules.RuleModel.FactSourceType.Aggregate
  nameWithType: FactSourceType.Aggregate
- uid: NRules.RuleModel.FactSourceType.Linked
  name: Linked
  href: api/NRules.RuleModel.FactSourceType.html#NRules_RuleModel_FactSourceType_Linked
  commentId: F:NRules.RuleModel.FactSourceType.Linked
  fullName: NRules.RuleModel.FactSourceType.Linked
  nameWithType: FactSourceType.Linked
- uid: NRules.RuleModel.FilterElement
  name: FilterElement
  href: api/NRules.RuleModel.FilterElement.html
  commentId: T:NRules.RuleModel.FilterElement
  fullName: NRules.RuleModel.FilterElement
  nameWithType: FilterElement
- uid: NRules.RuleModel.FilterElement.ElementType
  name: ElementType
  href: api/NRules.RuleModel.FilterElement.html#NRules_RuleModel_FilterElement_ElementType
  commentId: P:NRules.RuleModel.FilterElement.ElementType
  fullName: NRules.RuleModel.FilterElement.ElementType
  nameWithType: FilterElement.ElementType
- uid: NRules.RuleModel.FilterElement.ElementType*
  name: ElementType
  href: api/NRules.RuleModel.FilterElement.html#NRules_RuleModel_FilterElement_ElementType_
  commentId: Overload:NRules.RuleModel.FilterElement.ElementType
  isSpec: "True"
  fullName: NRules.RuleModel.FilterElement.ElementType
  nameWithType: FilterElement.ElementType
- uid: NRules.RuleModel.FilterElement.FilterType
  name: FilterType
  href: api/NRules.RuleModel.FilterElement.html#NRules_RuleModel_FilterElement_FilterType
  commentId: P:NRules.RuleModel.FilterElement.FilterType
  fullName: NRules.RuleModel.FilterElement.FilterType
  nameWithType: FilterElement.FilterType
- uid: NRules.RuleModel.FilterElement.FilterType*
  name: FilterType
  href: api/NRules.RuleModel.FilterElement.html#NRules_RuleModel_FilterElement_FilterType_
  commentId: Overload:NRules.RuleModel.FilterElement.FilterType
  isSpec: "True"
  fullName: NRules.RuleModel.FilterElement.FilterType
  nameWithType: FilterElement.FilterType
- uid: NRules.RuleModel.FilterGroupElement
  name: FilterGroupElement
  href: api/NRules.RuleModel.FilterGroupElement.html
  commentId: T:NRules.RuleModel.FilterGroupElement
  fullName: NRules.RuleModel.FilterGroupElement
  nameWithType: FilterGroupElement
- uid: NRules.RuleModel.FilterGroupElement.ElementType
  name: ElementType
  href: api/NRules.RuleModel.FilterGroupElement.html#NRules_RuleModel_FilterGroupElement_ElementType
  commentId: P:NRules.RuleModel.FilterGroupElement.ElementType
  fullName: NRules.RuleModel.FilterGroupElement.ElementType
  nameWithType: FilterGroupElement.ElementType
- uid: NRules.RuleModel.FilterGroupElement.ElementType*
  name: ElementType
  href: api/NRules.RuleModel.FilterGroupElement.html#NRules_RuleModel_FilterGroupElement_ElementType_
  commentId: Overload:NRules.RuleModel.FilterGroupElement.ElementType
  isSpec: "True"
  fullName: NRules.RuleModel.FilterGroupElement.ElementType
  nameWithType: FilterGroupElement.ElementType
- uid: NRules.RuleModel.FilterGroupElement.Filters
  name: Filters
  href: api/NRules.RuleModel.FilterGroupElement.html#NRules_RuleModel_FilterGroupElement_Filters
  commentId: P:NRules.RuleModel.FilterGroupElement.Filters
  fullName: NRules.RuleModel.FilterGroupElement.Filters
  nameWithType: FilterGroupElement.Filters
- uid: NRules.RuleModel.FilterGroupElement.Filters*
  name: Filters
  href: api/NRules.RuleModel.FilterGroupElement.html#NRules_RuleModel_FilterGroupElement_Filters_
  commentId: Overload:NRules.RuleModel.FilterGroupElement.Filters
  isSpec: "True"
  fullName: NRules.RuleModel.FilterGroupElement.Filters
  nameWithType: FilterGroupElement.Filters
- uid: NRules.RuleModel.FilterType
  name: FilterType
  href: api/NRules.RuleModel.FilterType.html
  commentId: T:NRules.RuleModel.FilterType
  fullName: NRules.RuleModel.FilterType
  nameWithType: FilterType
- uid: NRules.RuleModel.FilterType.KeyChange
  name: KeyChange
  href: api/NRules.RuleModel.FilterType.html#NRules_RuleModel_FilterType_KeyChange
  commentId: F:NRules.RuleModel.FilterType.KeyChange
  fullName: NRules.RuleModel.FilterType.KeyChange
  nameWithType: FilterType.KeyChange
- uid: NRules.RuleModel.FilterType.Predicate
  name: Predicate
  href: api/NRules.RuleModel.FilterType.html#NRules_RuleModel_FilterType_Predicate
  commentId: F:NRules.RuleModel.FilterType.Predicate
  fullName: NRules.RuleModel.FilterType.Predicate
  nameWithType: FilterType.Predicate
- uid: NRules.RuleModel.ForAllElement
  name: ForAllElement
  href: api/NRules.RuleModel.ForAllElement.html
  commentId: T:NRules.RuleModel.ForAllElement
  fullName: NRules.RuleModel.ForAllElement
  nameWithType: ForAllElement
- uid: NRules.RuleModel.ForAllElement.BasePattern
  name: BasePattern
  href: api/NRules.RuleModel.ForAllElement.html#NRules_RuleModel_ForAllElement_BasePattern
  commentId: P:NRules.RuleModel.ForAllElement.BasePattern
  fullName: NRules.RuleModel.ForAllElement.BasePattern
  nameWithType: ForAllElement.BasePattern
- uid: NRules.RuleModel.ForAllElement.BasePattern*
  name: BasePattern
  href: api/NRules.RuleModel.ForAllElement.html#NRules_RuleModel_ForAllElement_BasePattern_
  commentId: Overload:NRules.RuleModel.ForAllElement.BasePattern
  isSpec: "True"
  fullName: NRules.RuleModel.ForAllElement.BasePattern
  nameWithType: ForAllElement.BasePattern
- uid: NRules.RuleModel.ForAllElement.ElementType
  name: ElementType
  href: api/NRules.RuleModel.ForAllElement.html#NRules_RuleModel_ForAllElement_ElementType
  commentId: P:NRules.RuleModel.ForAllElement.ElementType
  fullName: NRules.RuleModel.ForAllElement.ElementType
  nameWithType: ForAllElement.ElementType
- uid: NRules.RuleModel.ForAllElement.ElementType*
  name: ElementType
  href: api/NRules.RuleModel.ForAllElement.html#NRules_RuleModel_ForAllElement_ElementType_
  commentId: Overload:NRules.RuleModel.ForAllElement.ElementType
  isSpec: "True"
  fullName: NRules.RuleModel.ForAllElement.ElementType
  nameWithType: ForAllElement.ElementType
- uid: NRules.RuleModel.ForAllElement.Patterns
  name: Patterns
  href: api/NRules.RuleModel.ForAllElement.html#NRules_RuleModel_ForAllElement_Patterns
  commentId: P:NRules.RuleModel.ForAllElement.Patterns
  fullName: NRules.RuleModel.ForAllElement.Patterns
  nameWithType: ForAllElement.Patterns
- uid: NRules.RuleModel.ForAllElement.Patterns*
  name: Patterns
  href: api/NRules.RuleModel.ForAllElement.html#NRules_RuleModel_ForAllElement_Patterns_
  commentId: Overload:NRules.RuleModel.ForAllElement.Patterns
  isSpec: "True"
  fullName: NRules.RuleModel.ForAllElement.Patterns
  nameWithType: ForAllElement.Patterns
- uid: NRules.RuleModel.GroupElement
  name: GroupElement
  href: api/NRules.RuleModel.GroupElement.html
  commentId: T:NRules.RuleModel.GroupElement
  fullName: NRules.RuleModel.GroupElement
  nameWithType: GroupElement
- uid: NRules.RuleModel.GroupElement.ChildElements
  name: ChildElements
  href: api/NRules.RuleModel.GroupElement.html#NRules_RuleModel_GroupElement_ChildElements
  commentId: P:NRules.RuleModel.GroupElement.ChildElements
  fullName: NRules.RuleModel.GroupElement.ChildElements
  nameWithType: GroupElement.ChildElements
- uid: NRules.RuleModel.GroupElement.ChildElements*
  name: ChildElements
  href: api/NRules.RuleModel.GroupElement.html#NRules_RuleModel_GroupElement_ChildElements_
  commentId: Overload:NRules.RuleModel.GroupElement.ChildElements
  isSpec: "True"
  fullName: NRules.RuleModel.GroupElement.ChildElements
  nameWithType: GroupElement.ChildElements
- uid: NRules.RuleModel.IContext
  name: IContext
  href: api/NRules.RuleModel.IContext.html
  commentId: T:NRules.RuleModel.IContext
  fullName: NRules.RuleModel.IContext
  nameWithType: IContext
- uid: NRules.RuleModel.IContext.CancellationToken
  name: CancellationToken
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_CancellationToken
  commentId: P:NRules.RuleModel.IContext.CancellationToken
  fullName: NRules.RuleModel.IContext.CancellationToken
  nameWithType: IContext.CancellationToken
- uid: NRules.RuleModel.IContext.CancellationToken*
  name: CancellationToken
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_CancellationToken_
  commentId: Overload:NRules.RuleModel.IContext.CancellationToken
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.CancellationToken
  nameWithType: IContext.CancellationToken
- uid: NRules.RuleModel.IContext.GetLinked(System.Object)
  name: GetLinked(object)
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_GetLinked_System_Object_
  commentId: M:NRules.RuleModel.IContext.GetLinked(System.Object)
  name.vb: GetLinked(Object)
  fullName: NRules.RuleModel.IContext.GetLinked(object)
  fullName.vb: NRules.RuleModel.IContext.GetLinked(Object)
  nameWithType: IContext.GetLinked(object)
  nameWithType.vb: IContext.GetLinked(Object)
- uid: NRules.RuleModel.IContext.GetLinked*
  name: GetLinked
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_GetLinked_
  commentId: Overload:NRules.RuleModel.IContext.GetLinked
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.GetLinked
  nameWithType: IContext.GetLinked
- uid: NRules.RuleModel.IContext.GetLinkedKeys
  name: GetLinkedKeys()
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_GetLinkedKeys
  commentId: M:NRules.RuleModel.IContext.GetLinkedKeys
  fullName: NRules.RuleModel.IContext.GetLinkedKeys()
  nameWithType: IContext.GetLinkedKeys()
- uid: NRules.RuleModel.IContext.GetLinkedKeys*
  name: GetLinkedKeys
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_GetLinkedKeys_
  commentId: Overload:NRules.RuleModel.IContext.GetLinkedKeys
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.GetLinkedKeys
  nameWithType: IContext.GetLinkedKeys
- uid: NRules.RuleModel.IContext.Halt
  name: Halt()
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_Halt
  commentId: M:NRules.RuleModel.IContext.Halt
  fullName: NRules.RuleModel.IContext.Halt()
  nameWithType: IContext.Halt()
- uid: NRules.RuleModel.IContext.Halt*
  name: Halt
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_Halt_
  commentId: Overload:NRules.RuleModel.IContext.Halt
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.Halt
  nameWithType: IContext.Halt
- uid: NRules.RuleModel.IContext.Insert(System.Object)
  name: Insert(object)
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_Insert_System_Object_
  commentId: M:NRules.RuleModel.IContext.Insert(System.Object)
  name.vb: Insert(Object)
  fullName: NRules.RuleModel.IContext.Insert(object)
  fullName.vb: NRules.RuleModel.IContext.Insert(Object)
  nameWithType: IContext.Insert(object)
  nameWithType.vb: IContext.Insert(Object)
- uid: NRules.RuleModel.IContext.Insert*
  name: Insert
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_Insert_
  commentId: Overload:NRules.RuleModel.IContext.Insert
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.Insert
  nameWithType: IContext.Insert
- uid: NRules.RuleModel.IContext.InsertAll(System.Collections.Generic.IEnumerable{System.Object})
  name: InsertAll(IEnumerable<object>)
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_InsertAll_System_Collections_Generic_IEnumerable_System_Object__
  commentId: M:NRules.RuleModel.IContext.InsertAll(System.Collections.Generic.IEnumerable{System.Object})
  name.vb: InsertAll(IEnumerable(Of Object))
  fullName: NRules.RuleModel.IContext.InsertAll(System.Collections.Generic.IEnumerable<object>)
  fullName.vb: NRules.RuleModel.IContext.InsertAll(System.Collections.Generic.IEnumerable(Of Object))
  nameWithType: IContext.InsertAll(IEnumerable<object>)
  nameWithType.vb: IContext.InsertAll(IEnumerable(Of Object))
- uid: NRules.RuleModel.IContext.InsertAll*
  name: InsertAll
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_InsertAll_
  commentId: Overload:NRules.RuleModel.IContext.InsertAll
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.InsertAll
  nameWithType: IContext.InsertAll
- uid: NRules.RuleModel.IContext.InsertAllLinked(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  name: InsertAllLinked(IEnumerable<KeyValuePair<object, object>>)
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_InsertAllLinked_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_Object_System_Object___
  commentId: M:NRules.RuleModel.IContext.InsertAllLinked(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  name.vb: InsertAllLinked(IEnumerable(Of KeyValuePair(Of Object, Object)))
  fullName: NRules.RuleModel.IContext.InsertAllLinked(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<object, object>>)
  fullName.vb: NRules.RuleModel.IContext.InsertAllLinked(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of Object, Object)))
  nameWithType: IContext.InsertAllLinked(IEnumerable<KeyValuePair<object, object>>)
  nameWithType.vb: IContext.InsertAllLinked(IEnumerable(Of KeyValuePair(Of Object, Object)))
- uid: NRules.RuleModel.IContext.InsertAllLinked*
  name: InsertAllLinked
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_InsertAllLinked_
  commentId: Overload:NRules.RuleModel.IContext.InsertAllLinked
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.InsertAllLinked
  nameWithType: IContext.InsertAllLinked
- uid: NRules.RuleModel.IContext.InsertLinked(System.Object,System.Object)
  name: InsertLinked(object, object)
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_InsertLinked_System_Object_System_Object_
  commentId: M:NRules.RuleModel.IContext.InsertLinked(System.Object,System.Object)
  name.vb: InsertLinked(Object, Object)
  fullName: NRules.RuleModel.IContext.InsertLinked(object, object)
  fullName.vb: NRules.RuleModel.IContext.InsertLinked(Object, Object)
  nameWithType: IContext.InsertLinked(object, object)
  nameWithType.vb: IContext.InsertLinked(Object, Object)
- uid: NRules.RuleModel.IContext.InsertLinked*
  name: InsertLinked
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_InsertLinked_
  commentId: Overload:NRules.RuleModel.IContext.InsertLinked
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.InsertLinked
  nameWithType: IContext.InsertLinked
- uid: NRules.RuleModel.IContext.Match
  name: Match
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_Match
  commentId: P:NRules.RuleModel.IContext.Match
  fullName: NRules.RuleModel.IContext.Match
  nameWithType: IContext.Match
- uid: NRules.RuleModel.IContext.Match*
  name: Match
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_Match_
  commentId: Overload:NRules.RuleModel.IContext.Match
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.Match
  nameWithType: IContext.Match
- uid: NRules.RuleModel.IContext.Resolve(System.Type)
  name: Resolve(Type)
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_Resolve_System_Type_
  commentId: M:NRules.RuleModel.IContext.Resolve(System.Type)
  fullName: NRules.RuleModel.IContext.Resolve(System.Type)
  nameWithType: IContext.Resolve(Type)
- uid: NRules.RuleModel.IContext.Resolve*
  name: Resolve
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_Resolve_
  commentId: Overload:NRules.RuleModel.IContext.Resolve
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.Resolve
  nameWithType: IContext.Resolve
- uid: NRules.RuleModel.IContext.Retract(System.Object)
  name: Retract(object)
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_Retract_System_Object_
  commentId: M:NRules.RuleModel.IContext.Retract(System.Object)
  name.vb: Retract(Object)
  fullName: NRules.RuleModel.IContext.Retract(object)
  fullName.vb: NRules.RuleModel.IContext.Retract(Object)
  nameWithType: IContext.Retract(object)
  nameWithType.vb: IContext.Retract(Object)
- uid: NRules.RuleModel.IContext.Retract*
  name: Retract
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_Retract_
  commentId: Overload:NRules.RuleModel.IContext.Retract
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.Retract
  nameWithType: IContext.Retract
- uid: NRules.RuleModel.IContext.RetractAll(System.Collections.Generic.IEnumerable{System.Object})
  name: RetractAll(IEnumerable<object>)
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_RetractAll_System_Collections_Generic_IEnumerable_System_Object__
  commentId: M:NRules.RuleModel.IContext.RetractAll(System.Collections.Generic.IEnumerable{System.Object})
  name.vb: RetractAll(IEnumerable(Of Object))
  fullName: NRules.RuleModel.IContext.RetractAll(System.Collections.Generic.IEnumerable<object>)
  fullName.vb: NRules.RuleModel.IContext.RetractAll(System.Collections.Generic.IEnumerable(Of Object))
  nameWithType: IContext.RetractAll(IEnumerable<object>)
  nameWithType.vb: IContext.RetractAll(IEnumerable(Of Object))
- uid: NRules.RuleModel.IContext.RetractAll*
  name: RetractAll
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_RetractAll_
  commentId: Overload:NRules.RuleModel.IContext.RetractAll
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.RetractAll
  nameWithType: IContext.RetractAll
- uid: NRules.RuleModel.IContext.RetractAllLinked(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  name: RetractAllLinked(IEnumerable<KeyValuePair<object, object>>)
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_RetractAllLinked_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_Object_System_Object___
  commentId: M:NRules.RuleModel.IContext.RetractAllLinked(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  name.vb: RetractAllLinked(IEnumerable(Of KeyValuePair(Of Object, Object)))
  fullName: NRules.RuleModel.IContext.RetractAllLinked(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<object, object>>)
  fullName.vb: NRules.RuleModel.IContext.RetractAllLinked(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of Object, Object)))
  nameWithType: IContext.RetractAllLinked(IEnumerable<KeyValuePair<object, object>>)
  nameWithType.vb: IContext.RetractAllLinked(IEnumerable(Of KeyValuePair(Of Object, Object)))
- uid: NRules.RuleModel.IContext.RetractAllLinked*
  name: RetractAllLinked
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_RetractAllLinked_
  commentId: Overload:NRules.RuleModel.IContext.RetractAllLinked
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.RetractAllLinked
  nameWithType: IContext.RetractAllLinked
- uid: NRules.RuleModel.IContext.RetractLinked(System.Object,System.Object)
  name: RetractLinked(object, object)
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_RetractLinked_System_Object_System_Object_
  commentId: M:NRules.RuleModel.IContext.RetractLinked(System.Object,System.Object)
  name.vb: RetractLinked(Object, Object)
  fullName: NRules.RuleModel.IContext.RetractLinked(object, object)
  fullName.vb: NRules.RuleModel.IContext.RetractLinked(Object, Object)
  nameWithType: IContext.RetractLinked(object, object)
  nameWithType.vb: IContext.RetractLinked(Object, Object)
- uid: NRules.RuleModel.IContext.RetractLinked*
  name: RetractLinked
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_RetractLinked_
  commentId: Overload:NRules.RuleModel.IContext.RetractLinked
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.RetractLinked
  nameWithType: IContext.RetractLinked
- uid: NRules.RuleModel.IContext.Rule
  name: Rule
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_Rule
  commentId: P:NRules.RuleModel.IContext.Rule
  fullName: NRules.RuleModel.IContext.Rule
  nameWithType: IContext.Rule
- uid: NRules.RuleModel.IContext.Rule*
  name: Rule
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_Rule_
  commentId: Overload:NRules.RuleModel.IContext.Rule
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.Rule
  nameWithType: IContext.Rule
- uid: NRules.RuleModel.IContext.TryInsert(System.Object)
  name: TryInsert(object)
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_TryInsert_System_Object_
  commentId: M:NRules.RuleModel.IContext.TryInsert(System.Object)
  name.vb: TryInsert(Object)
  fullName: NRules.RuleModel.IContext.TryInsert(object)
  fullName.vb: NRules.RuleModel.IContext.TryInsert(Object)
  nameWithType: IContext.TryInsert(object)
  nameWithType.vb: IContext.TryInsert(Object)
- uid: NRules.RuleModel.IContext.TryInsert*
  name: TryInsert
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_TryInsert_
  commentId: Overload:NRules.RuleModel.IContext.TryInsert
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.TryInsert
  nameWithType: IContext.TryInsert
- uid: NRules.RuleModel.IContext.TryRetract(System.Object)
  name: TryRetract(object)
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_TryRetract_System_Object_
  commentId: M:NRules.RuleModel.IContext.TryRetract(System.Object)
  name.vb: TryRetract(Object)
  fullName: NRules.RuleModel.IContext.TryRetract(object)
  fullName.vb: NRules.RuleModel.IContext.TryRetract(Object)
  nameWithType: IContext.TryRetract(object)
  nameWithType.vb: IContext.TryRetract(Object)
- uid: NRules.RuleModel.IContext.TryRetract*
  name: TryRetract
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_TryRetract_
  commentId: Overload:NRules.RuleModel.IContext.TryRetract
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.TryRetract
  nameWithType: IContext.TryRetract
- uid: NRules.RuleModel.IContext.TryUpdate(System.Object)
  name: TryUpdate(object)
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_TryUpdate_System_Object_
  commentId: M:NRules.RuleModel.IContext.TryUpdate(System.Object)
  name.vb: TryUpdate(Object)
  fullName: NRules.RuleModel.IContext.TryUpdate(object)
  fullName.vb: NRules.RuleModel.IContext.TryUpdate(Object)
  nameWithType: IContext.TryUpdate(object)
  nameWithType.vb: IContext.TryUpdate(Object)
- uid: NRules.RuleModel.IContext.TryUpdate*
  name: TryUpdate
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_TryUpdate_
  commentId: Overload:NRules.RuleModel.IContext.TryUpdate
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.TryUpdate
  nameWithType: IContext.TryUpdate
- uid: NRules.RuleModel.IContext.Update(System.Object)
  name: Update(object)
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_Update_System_Object_
  commentId: M:NRules.RuleModel.IContext.Update(System.Object)
  name.vb: Update(Object)
  fullName: NRules.RuleModel.IContext.Update(object)
  fullName.vb: NRules.RuleModel.IContext.Update(Object)
  nameWithType: IContext.Update(object)
  nameWithType.vb: IContext.Update(Object)
- uid: NRules.RuleModel.IContext.Update*
  name: Update
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_Update_
  commentId: Overload:NRules.RuleModel.IContext.Update
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.Update
  nameWithType: IContext.Update
- uid: NRules.RuleModel.IContext.UpdateAll(System.Collections.Generic.IEnumerable{System.Object})
  name: UpdateAll(IEnumerable<object>)
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_UpdateAll_System_Collections_Generic_IEnumerable_System_Object__
  commentId: M:NRules.RuleModel.IContext.UpdateAll(System.Collections.Generic.IEnumerable{System.Object})
  name.vb: UpdateAll(IEnumerable(Of Object))
  fullName: NRules.RuleModel.IContext.UpdateAll(System.Collections.Generic.IEnumerable<object>)
  fullName.vb: NRules.RuleModel.IContext.UpdateAll(System.Collections.Generic.IEnumerable(Of Object))
  nameWithType: IContext.UpdateAll(IEnumerable<object>)
  nameWithType.vb: IContext.UpdateAll(IEnumerable(Of Object))
- uid: NRules.RuleModel.IContext.UpdateAll*
  name: UpdateAll
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_UpdateAll_
  commentId: Overload:NRules.RuleModel.IContext.UpdateAll
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.UpdateAll
  nameWithType: IContext.UpdateAll
- uid: NRules.RuleModel.IContext.UpdateAllLinked(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  name: UpdateAllLinked(IEnumerable<KeyValuePair<object, object>>)
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_UpdateAllLinked_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_Object_System_Object___
  commentId: M:NRules.RuleModel.IContext.UpdateAllLinked(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  name.vb: UpdateAllLinked(IEnumerable(Of KeyValuePair(Of Object, Object)))
  fullName: NRules.RuleModel.IContext.UpdateAllLinked(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<object, object>>)
  fullName.vb: NRules.RuleModel.IContext.UpdateAllLinked(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of Object, Object)))
  nameWithType: IContext.UpdateAllLinked(IEnumerable<KeyValuePair<object, object>>)
  nameWithType.vb: IContext.UpdateAllLinked(IEnumerable(Of KeyValuePair(Of Object, Object)))
- uid: NRules.RuleModel.IContext.UpdateAllLinked*
  name: UpdateAllLinked
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_UpdateAllLinked_
  commentId: Overload:NRules.RuleModel.IContext.UpdateAllLinked
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.UpdateAllLinked
  nameWithType: IContext.UpdateAllLinked
- uid: NRules.RuleModel.IContext.UpdateLinked(System.Object,System.Object)
  name: UpdateLinked(object, object)
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_UpdateLinked_System_Object_System_Object_
  commentId: M:NRules.RuleModel.IContext.UpdateLinked(System.Object,System.Object)
  name.vb: UpdateLinked(Object, Object)
  fullName: NRules.RuleModel.IContext.UpdateLinked(object, object)
  fullName.vb: NRules.RuleModel.IContext.UpdateLinked(Object, Object)
  nameWithType: IContext.UpdateLinked(object, object)
  nameWithType.vb: IContext.UpdateLinked(Object, Object)
- uid: NRules.RuleModel.IContext.UpdateLinked*
  name: UpdateLinked
  href: api/NRules.RuleModel.IContext.html#NRules_RuleModel_IContext_UpdateLinked_
  commentId: Overload:NRules.RuleModel.IContext.UpdateLinked
  isSpec: "True"
  fullName: NRules.RuleModel.IContext.UpdateLinked
  nameWithType: IContext.UpdateLinked
- uid: NRules.RuleModel.IFact
  name: IFact
  href: api/NRules.RuleModel.IFact.html
  commentId: T:NRules.RuleModel.IFact
  fullName: NRules.RuleModel.IFact
  nameWithType: IFact
- uid: NRules.RuleModel.IFact.Source
  name: Source
  href: api/NRules.RuleModel.IFact.html#NRules_RuleModel_IFact_Source
  commentId: P:NRules.RuleModel.IFact.Source
  fullName: NRules.RuleModel.IFact.Source
  nameWithType: IFact.Source
- uid: NRules.RuleModel.IFact.Source*
  name: Source
  href: api/NRules.RuleModel.IFact.html#NRules_RuleModel_IFact_Source_
  commentId: Overload:NRules.RuleModel.IFact.Source
  isSpec: "True"
  fullName: NRules.RuleModel.IFact.Source
  nameWithType: IFact.Source
- uid: NRules.RuleModel.IFact.Type
  name: Type
  href: api/NRules.RuleModel.IFact.html#NRules_RuleModel_IFact_Type
  commentId: P:NRules.RuleModel.IFact.Type
  fullName: NRules.RuleModel.IFact.Type
  nameWithType: IFact.Type
- uid: NRules.RuleModel.IFact.Type*
  name: Type
  href: api/NRules.RuleModel.IFact.html#NRules_RuleModel_IFact_Type_
  commentId: Overload:NRules.RuleModel.IFact.Type
  isSpec: "True"
  fullName: NRules.RuleModel.IFact.Type
  nameWithType: IFact.Type
- uid: NRules.RuleModel.IFact.Value
  name: Value
  href: api/NRules.RuleModel.IFact.html#NRules_RuleModel_IFact_Value
  commentId: P:NRules.RuleModel.IFact.Value
  fullName: NRules.RuleModel.IFact.Value
  nameWithType: IFact.Value
- uid: NRules.RuleModel.IFact.Value*
  name: Value
  href: api/NRules.RuleModel.IFact.html#NRules_RuleModel_IFact_Value_
  commentId: Overload:NRules.RuleModel.IFact.Value
  isSpec: "True"
  fullName: NRules.RuleModel.IFact.Value
  nameWithType: IFact.Value
- uid: NRules.RuleModel.IFactMatch
  name: IFactMatch
  href: api/NRules.RuleModel.IFactMatch.html
  commentId: T:NRules.RuleModel.IFactMatch
  fullName: NRules.RuleModel.IFactMatch
  nameWithType: IFactMatch
- uid: NRules.RuleModel.IFactMatch.Declaration
  name: Declaration
  href: api/NRules.RuleModel.IFactMatch.html#NRules_RuleModel_IFactMatch_Declaration
  commentId: P:NRules.RuleModel.IFactMatch.Declaration
  fullName: NRules.RuleModel.IFactMatch.Declaration
  nameWithType: IFactMatch.Declaration
- uid: NRules.RuleModel.IFactMatch.Declaration*
  name: Declaration
  href: api/NRules.RuleModel.IFactMatch.html#NRules_RuleModel_IFactMatch_Declaration_
  commentId: Overload:NRules.RuleModel.IFactMatch.Declaration
  isSpec: "True"
  fullName: NRules.RuleModel.IFactMatch.Declaration
  nameWithType: IFactMatch.Declaration
- uid: NRules.RuleModel.IFactSource
  name: IFactSource
  href: api/NRules.RuleModel.IFactSource.html
  commentId: T:NRules.RuleModel.IFactSource
  fullName: NRules.RuleModel.IFactSource
  nameWithType: IFactSource
- uid: NRules.RuleModel.IFactSource.Facts
  name: Facts
  href: api/NRules.RuleModel.IFactSource.html#NRules_RuleModel_IFactSource_Facts
  commentId: P:NRules.RuleModel.IFactSource.Facts
  fullName: NRules.RuleModel.IFactSource.Facts
  nameWithType: IFactSource.Facts
- uid: NRules.RuleModel.IFactSource.Facts*
  name: Facts
  href: api/NRules.RuleModel.IFactSource.html#NRules_RuleModel_IFactSource_Facts_
  commentId: Overload:NRules.RuleModel.IFactSource.Facts
  isSpec: "True"
  fullName: NRules.RuleModel.IFactSource.Facts
  nameWithType: IFactSource.Facts
- uid: NRules.RuleModel.IFactSource.SourceType
  name: SourceType
  href: api/NRules.RuleModel.IFactSource.html#NRules_RuleModel_IFactSource_SourceType
  commentId: P:NRules.RuleModel.IFactSource.SourceType
  fullName: NRules.RuleModel.IFactSource.SourceType
  nameWithType: IFactSource.SourceType
- uid: NRules.RuleModel.IFactSource.SourceType*
  name: SourceType
  href: api/NRules.RuleModel.IFactSource.html#NRules_RuleModel_IFactSource_SourceType_
  commentId: Overload:NRules.RuleModel.IFactSource.SourceType
  isSpec: "True"
  fullName: NRules.RuleModel.IFactSource.SourceType
  nameWithType: IFactSource.SourceType
- uid: NRules.RuleModel.IKeyedLookup`2
  name: IKeyedLookup<TKey, TElement>
  href: api/NRules.RuleModel.IKeyedLookup-2.html
  commentId: T:NRules.RuleModel.IKeyedLookup`2
  name.vb: IKeyedLookup(Of TKey, TElement)
  fullName: NRules.RuleModel.IKeyedLookup<TKey, TElement>
  fullName.vb: NRules.RuleModel.IKeyedLookup(Of TKey, TElement)
  nameWithType: IKeyedLookup<TKey, TElement>
  nameWithType.vb: IKeyedLookup(Of TKey, TElement)
- uid: NRules.RuleModel.IKeyedLookup`2.Keys
  name: Keys
  href: api/NRules.RuleModel.IKeyedLookup-2.html#NRules_RuleModel_IKeyedLookup_2_Keys
  commentId: P:NRules.RuleModel.IKeyedLookup`2.Keys
  fullName: NRules.RuleModel.IKeyedLookup<TKey, TElement>.Keys
  fullName.vb: NRules.RuleModel.IKeyedLookup(Of TKey, TElement).Keys
  nameWithType: IKeyedLookup<TKey, TElement>.Keys
  nameWithType.vb: IKeyedLookup(Of TKey, TElement).Keys
- uid: NRules.RuleModel.IKeyedLookup`2.Keys*
  name: Keys
  href: api/NRules.RuleModel.IKeyedLookup-2.html#NRules_RuleModel_IKeyedLookup_2_Keys_
  commentId: Overload:NRules.RuleModel.IKeyedLookup`2.Keys
  isSpec: "True"
  fullName: NRules.RuleModel.IKeyedLookup<TKey, TElement>.Keys
  fullName.vb: NRules.RuleModel.IKeyedLookup(Of TKey, TElement).Keys
  nameWithType: IKeyedLookup<TKey, TElement>.Keys
  nameWithType.vb: IKeyedLookup(Of TKey, TElement).Keys
- uid: NRules.RuleModel.IMatch
  name: IMatch
  href: api/NRules.RuleModel.IMatch.html
  commentId: T:NRules.RuleModel.IMatch
  fullName: NRules.RuleModel.IMatch
  nameWithType: IMatch
- uid: NRules.RuleModel.IMatch.Facts
  name: Facts
  href: api/NRules.RuleModel.IMatch.html#NRules_RuleModel_IMatch_Facts
  commentId: P:NRules.RuleModel.IMatch.Facts
  fullName: NRules.RuleModel.IMatch.Facts
  nameWithType: IMatch.Facts
- uid: NRules.RuleModel.IMatch.Facts*
  name: Facts
  href: api/NRules.RuleModel.IMatch.html#NRules_RuleModel_IMatch_Facts_
  commentId: Overload:NRules.RuleModel.IMatch.Facts
  isSpec: "True"
  fullName: NRules.RuleModel.IMatch.Facts
  nameWithType: IMatch.Facts
- uid: NRules.RuleModel.IMatch.Rule
  name: Rule
  href: api/NRules.RuleModel.IMatch.html#NRules_RuleModel_IMatch_Rule
  commentId: P:NRules.RuleModel.IMatch.Rule
  fullName: NRules.RuleModel.IMatch.Rule
  nameWithType: IMatch.Rule
- uid: NRules.RuleModel.IMatch.Rule*
  name: Rule
  href: api/NRules.RuleModel.IMatch.html#NRules_RuleModel_IMatch_Rule_
  commentId: Overload:NRules.RuleModel.IMatch.Rule
  isSpec: "True"
  fullName: NRules.RuleModel.IMatch.Rule
  nameWithType: IMatch.Rule
- uid: NRules.RuleModel.IMatch.Trigger
  name: Trigger
  href: api/NRules.RuleModel.IMatch.html#NRules_RuleModel_IMatch_Trigger
  commentId: P:NRules.RuleModel.IMatch.Trigger
  fullName: NRules.RuleModel.IMatch.Trigger
  nameWithType: IMatch.Trigger
- uid: NRules.RuleModel.IMatch.Trigger*
  name: Trigger
  href: api/NRules.RuleModel.IMatch.html#NRules_RuleModel_IMatch_Trigger_
  commentId: Overload:NRules.RuleModel.IMatch.Trigger
  isSpec: "True"
  fullName: NRules.RuleModel.IMatch.Trigger
  nameWithType: IMatch.Trigger
- uid: NRules.RuleModel.IRuleDefinition
  name: IRuleDefinition
  href: api/NRules.RuleModel.IRuleDefinition.html
  commentId: T:NRules.RuleModel.IRuleDefinition
  fullName: NRules.RuleModel.IRuleDefinition
  nameWithType: IRuleDefinition
- uid: NRules.RuleModel.IRuleDefinition.DependencyGroup
  name: DependencyGroup
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_DependencyGroup
  commentId: P:NRules.RuleModel.IRuleDefinition.DependencyGroup
  fullName: NRules.RuleModel.IRuleDefinition.DependencyGroup
  nameWithType: IRuleDefinition.DependencyGroup
- uid: NRules.RuleModel.IRuleDefinition.DependencyGroup*
  name: DependencyGroup
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_DependencyGroup_
  commentId: Overload:NRules.RuleModel.IRuleDefinition.DependencyGroup
  isSpec: "True"
  fullName: NRules.RuleModel.IRuleDefinition.DependencyGroup
  nameWithType: IRuleDefinition.DependencyGroup
- uid: NRules.RuleModel.IRuleDefinition.Description
  name: Description
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_Description
  commentId: P:NRules.RuleModel.IRuleDefinition.Description
  fullName: NRules.RuleModel.IRuleDefinition.Description
  nameWithType: IRuleDefinition.Description
- uid: NRules.RuleModel.IRuleDefinition.Description*
  name: Description
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_Description_
  commentId: Overload:NRules.RuleModel.IRuleDefinition.Description
  isSpec: "True"
  fullName: NRules.RuleModel.IRuleDefinition.Description
  nameWithType: IRuleDefinition.Description
- uid: NRules.RuleModel.IRuleDefinition.FilterGroup
  name: FilterGroup
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_FilterGroup
  commentId: P:NRules.RuleModel.IRuleDefinition.FilterGroup
  fullName: NRules.RuleModel.IRuleDefinition.FilterGroup
  nameWithType: IRuleDefinition.FilterGroup
- uid: NRules.RuleModel.IRuleDefinition.FilterGroup*
  name: FilterGroup
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_FilterGroup_
  commentId: Overload:NRules.RuleModel.IRuleDefinition.FilterGroup
  isSpec: "True"
  fullName: NRules.RuleModel.IRuleDefinition.FilterGroup
  nameWithType: IRuleDefinition.FilterGroup
- uid: NRules.RuleModel.IRuleDefinition.LeftHandSide
  name: LeftHandSide
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_LeftHandSide
  commentId: P:NRules.RuleModel.IRuleDefinition.LeftHandSide
  fullName: NRules.RuleModel.IRuleDefinition.LeftHandSide
  nameWithType: IRuleDefinition.LeftHandSide
- uid: NRules.RuleModel.IRuleDefinition.LeftHandSide*
  name: LeftHandSide
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_LeftHandSide_
  commentId: Overload:NRules.RuleModel.IRuleDefinition.LeftHandSide
  isSpec: "True"
  fullName: NRules.RuleModel.IRuleDefinition.LeftHandSide
  nameWithType: IRuleDefinition.LeftHandSide
- uid: NRules.RuleModel.IRuleDefinition.Name
  name: Name
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_Name
  commentId: P:NRules.RuleModel.IRuleDefinition.Name
  fullName: NRules.RuleModel.IRuleDefinition.Name
  nameWithType: IRuleDefinition.Name
- uid: NRules.RuleModel.IRuleDefinition.Name*
  name: Name
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_Name_
  commentId: Overload:NRules.RuleModel.IRuleDefinition.Name
  isSpec: "True"
  fullName: NRules.RuleModel.IRuleDefinition.Name
  nameWithType: IRuleDefinition.Name
- uid: NRules.RuleModel.IRuleDefinition.Priority
  name: Priority
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_Priority
  commentId: P:NRules.RuleModel.IRuleDefinition.Priority
  fullName: NRules.RuleModel.IRuleDefinition.Priority
  nameWithType: IRuleDefinition.Priority
- uid: NRules.RuleModel.IRuleDefinition.Priority*
  name: Priority
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_Priority_
  commentId: Overload:NRules.RuleModel.IRuleDefinition.Priority
  isSpec: "True"
  fullName: NRules.RuleModel.IRuleDefinition.Priority
  nameWithType: IRuleDefinition.Priority
- uid: NRules.RuleModel.IRuleDefinition.Properties
  name: Properties
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_Properties
  commentId: P:NRules.RuleModel.IRuleDefinition.Properties
  fullName: NRules.RuleModel.IRuleDefinition.Properties
  nameWithType: IRuleDefinition.Properties
- uid: NRules.RuleModel.IRuleDefinition.Properties*
  name: Properties
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_Properties_
  commentId: Overload:NRules.RuleModel.IRuleDefinition.Properties
  isSpec: "True"
  fullName: NRules.RuleModel.IRuleDefinition.Properties
  nameWithType: IRuleDefinition.Properties
- uid: NRules.RuleModel.IRuleDefinition.Repeatability
  name: Repeatability
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_Repeatability
  commentId: P:NRules.RuleModel.IRuleDefinition.Repeatability
  fullName: NRules.RuleModel.IRuleDefinition.Repeatability
  nameWithType: IRuleDefinition.Repeatability
- uid: NRules.RuleModel.IRuleDefinition.Repeatability*
  name: Repeatability
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_Repeatability_
  commentId: Overload:NRules.RuleModel.IRuleDefinition.Repeatability
  isSpec: "True"
  fullName: NRules.RuleModel.IRuleDefinition.Repeatability
  nameWithType: IRuleDefinition.Repeatability
- uid: NRules.RuleModel.IRuleDefinition.RightHandSide
  name: RightHandSide
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_RightHandSide
  commentId: P:NRules.RuleModel.IRuleDefinition.RightHandSide
  fullName: NRules.RuleModel.IRuleDefinition.RightHandSide
  nameWithType: IRuleDefinition.RightHandSide
- uid: NRules.RuleModel.IRuleDefinition.RightHandSide*
  name: RightHandSide
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_RightHandSide_
  commentId: Overload:NRules.RuleModel.IRuleDefinition.RightHandSide
  isSpec: "True"
  fullName: NRules.RuleModel.IRuleDefinition.RightHandSide
  nameWithType: IRuleDefinition.RightHandSide
- uid: NRules.RuleModel.IRuleDefinition.Tags
  name: Tags
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_Tags
  commentId: P:NRules.RuleModel.IRuleDefinition.Tags
  fullName: NRules.RuleModel.IRuleDefinition.Tags
  nameWithType: IRuleDefinition.Tags
- uid: NRules.RuleModel.IRuleDefinition.Tags*
  name: Tags
  href: api/NRules.RuleModel.IRuleDefinition.html#NRules_RuleModel_IRuleDefinition_Tags_
  commentId: Overload:NRules.RuleModel.IRuleDefinition.Tags
  isSpec: "True"
  fullName: NRules.RuleModel.IRuleDefinition.Tags
  nameWithType: IRuleDefinition.Tags
- uid: NRules.RuleModel.IRuleRepository
  name: IRuleRepository
  href: api/NRules.RuleModel.IRuleRepository.html
  commentId: T:NRules.RuleModel.IRuleRepository
  fullName: NRules.RuleModel.IRuleRepository
  nameWithType: IRuleRepository
- uid: NRules.RuleModel.IRuleRepository.GetRuleSets
  name: GetRuleSets()
  href: api/NRules.RuleModel.IRuleRepository.html#NRules_RuleModel_IRuleRepository_GetRuleSets
  commentId: M:NRules.RuleModel.IRuleRepository.GetRuleSets
  fullName: NRules.RuleModel.IRuleRepository.GetRuleSets()
  nameWithType: IRuleRepository.GetRuleSets()
- uid: NRules.RuleModel.IRuleRepository.GetRuleSets*
  name: GetRuleSets
  href: api/NRules.RuleModel.IRuleRepository.html#NRules_RuleModel_IRuleRepository_GetRuleSets_
  commentId: Overload:NRules.RuleModel.IRuleRepository.GetRuleSets
  isSpec: "True"
  fullName: NRules.RuleModel.IRuleRepository.GetRuleSets
  nameWithType: IRuleRepository.GetRuleSets
- uid: NRules.RuleModel.IRuleSet
  name: IRuleSet
  href: api/NRules.RuleModel.IRuleSet.html
  commentId: T:NRules.RuleModel.IRuleSet
  fullName: NRules.RuleModel.IRuleSet
  nameWithType: IRuleSet
- uid: NRules.RuleModel.IRuleSet.Add(System.Collections.Generic.IEnumerable{NRules.RuleModel.IRuleDefinition})
  name: Add(IEnumerable<IRuleDefinition>)
  href: api/NRules.RuleModel.IRuleSet.html#NRules_RuleModel_IRuleSet_Add_System_Collections_Generic_IEnumerable_NRules_RuleModel_IRuleDefinition__
  commentId: M:NRules.RuleModel.IRuleSet.Add(System.Collections.Generic.IEnumerable{NRules.RuleModel.IRuleDefinition})
  name.vb: Add(IEnumerable(Of IRuleDefinition))
  fullName: NRules.RuleModel.IRuleSet.Add(System.Collections.Generic.IEnumerable<NRules.RuleModel.IRuleDefinition>)
  fullName.vb: NRules.RuleModel.IRuleSet.Add(System.Collections.Generic.IEnumerable(Of NRules.RuleModel.IRuleDefinition))
  nameWithType: IRuleSet.Add(IEnumerable<IRuleDefinition>)
  nameWithType.vb: IRuleSet.Add(IEnumerable(Of IRuleDefinition))
- uid: NRules.RuleModel.IRuleSet.Add*
  name: Add
  href: api/NRules.RuleModel.IRuleSet.html#NRules_RuleModel_IRuleSet_Add_
  commentId: Overload:NRules.RuleModel.IRuleSet.Add
  isSpec: "True"
  fullName: NRules.RuleModel.IRuleSet.Add
  nameWithType: IRuleSet.Add
- uid: NRules.RuleModel.IRuleSet.Name
  name: Name
  href: api/NRules.RuleModel.IRuleSet.html#NRules_RuleModel_IRuleSet_Name
  commentId: P:NRules.RuleModel.IRuleSet.Name
  fullName: NRules.RuleModel.IRuleSet.Name
  nameWithType: IRuleSet.Name
- uid: NRules.RuleModel.IRuleSet.Name*
  name: Name
  href: api/NRules.RuleModel.IRuleSet.html#NRules_RuleModel_IRuleSet_Name_
  commentId: Overload:NRules.RuleModel.IRuleSet.Name
  isSpec: "True"
  fullName: NRules.RuleModel.IRuleSet.Name
  nameWithType: IRuleSet.Name
- uid: NRules.RuleModel.IRuleSet.Rules
  name: Rules
  href: api/NRules.RuleModel.IRuleSet.html#NRules_RuleModel_IRuleSet_Rules
  commentId: P:NRules.RuleModel.IRuleSet.Rules
  fullName: NRules.RuleModel.IRuleSet.Rules
  nameWithType: IRuleSet.Rules
- uid: NRules.RuleModel.IRuleSet.Rules*
  name: Rules
  href: api/NRules.RuleModel.IRuleSet.html#NRules_RuleModel_IRuleSet_Rules_
  commentId: Overload:NRules.RuleModel.IRuleSet.Rules
  isSpec: "True"
  fullName: NRules.RuleModel.IRuleSet.Rules
  nameWithType: IRuleSet.Rules
- uid: NRules.RuleModel.ITuple
  name: ITuple
  href: api/NRules.RuleModel.ITuple.html
  commentId: T:NRules.RuleModel.ITuple
  fullName: NRules.RuleModel.ITuple
  nameWithType: ITuple
- uid: NRules.RuleModel.ITuple.Count
  name: Count
  href: api/NRules.RuleModel.ITuple.html#NRules_RuleModel_ITuple_Count
  commentId: P:NRules.RuleModel.ITuple.Count
  fullName: NRules.RuleModel.ITuple.Count
  nameWithType: ITuple.Count
- uid: NRules.RuleModel.ITuple.Count*
  name: Count
  href: api/NRules.RuleModel.ITuple.html#NRules_RuleModel_ITuple_Count_
  commentId: Overload:NRules.RuleModel.ITuple.Count
  isSpec: "True"
  fullName: NRules.RuleModel.ITuple.Count
  nameWithType: ITuple.Count
- uid: NRules.RuleModel.ITuple.Facts
  name: Facts
  href: api/NRules.RuleModel.ITuple.html#NRules_RuleModel_ITuple_Facts
  commentId: P:NRules.RuleModel.ITuple.Facts
  fullName: NRules.RuleModel.ITuple.Facts
  nameWithType: ITuple.Facts
- uid: NRules.RuleModel.ITuple.Facts*
  name: Facts
  href: api/NRules.RuleModel.ITuple.html#NRules_RuleModel_ITuple_Facts_
  commentId: Overload:NRules.RuleModel.ITuple.Facts
  isSpec: "True"
  fullName: NRules.RuleModel.ITuple.Facts
  nameWithType: ITuple.Facts
- uid: NRules.RuleModel.MatchTrigger
  name: MatchTrigger
  href: api/NRules.RuleModel.MatchTrigger.html
  commentId: T:NRules.RuleModel.MatchTrigger
  fullName: NRules.RuleModel.MatchTrigger
  nameWithType: MatchTrigger
- uid: NRules.RuleModel.MatchTrigger.Created
  name: Created
  href: api/NRules.RuleModel.MatchTrigger.html#NRules_RuleModel_MatchTrigger_Created
  commentId: F:NRules.RuleModel.MatchTrigger.Created
  fullName: NRules.RuleModel.MatchTrigger.Created
  nameWithType: MatchTrigger.Created
- uid: NRules.RuleModel.MatchTrigger.None
  name: None
  href: api/NRules.RuleModel.MatchTrigger.html#NRules_RuleModel_MatchTrigger_None
  commentId: F:NRules.RuleModel.MatchTrigger.None
  fullName: NRules.RuleModel.MatchTrigger.None
  nameWithType: MatchTrigger.None
- uid: NRules.RuleModel.MatchTrigger.Removed
  name: Removed
  href: api/NRules.RuleModel.MatchTrigger.html#NRules_RuleModel_MatchTrigger_Removed
  commentId: F:NRules.RuleModel.MatchTrigger.Removed
  fullName: NRules.RuleModel.MatchTrigger.Removed
  nameWithType: MatchTrigger.Removed
- uid: NRules.RuleModel.MatchTrigger.Updated
  name: Updated
  href: api/NRules.RuleModel.MatchTrigger.html#NRules_RuleModel_MatchTrigger_Updated
  commentId: F:NRules.RuleModel.MatchTrigger.Updated
  fullName: NRules.RuleModel.MatchTrigger.Updated
  nameWithType: MatchTrigger.Updated
- uid: NRules.RuleModel.NamedExpressionElement
  name: NamedExpressionElement
  href: api/NRules.RuleModel.NamedExpressionElement.html
  commentId: T:NRules.RuleModel.NamedExpressionElement
  fullName: NRules.RuleModel.NamedExpressionElement
  nameWithType: NamedExpressionElement
- uid: NRules.RuleModel.NamedExpressionElement.ElementType
  name: ElementType
  href: api/NRules.RuleModel.NamedExpressionElement.html#NRules_RuleModel_NamedExpressionElement_ElementType
  commentId: P:NRules.RuleModel.NamedExpressionElement.ElementType
  fullName: NRules.RuleModel.NamedExpressionElement.ElementType
  nameWithType: NamedExpressionElement.ElementType
- uid: NRules.RuleModel.NamedExpressionElement.ElementType*
  name: ElementType
  href: api/NRules.RuleModel.NamedExpressionElement.html#NRules_RuleModel_NamedExpressionElement_ElementType_
  commentId: Overload:NRules.RuleModel.NamedExpressionElement.ElementType
  isSpec: "True"
  fullName: NRules.RuleModel.NamedExpressionElement.ElementType
  nameWithType: NamedExpressionElement.ElementType
- uid: NRules.RuleModel.NamedExpressionElement.Name
  name: Name
  href: api/NRules.RuleModel.NamedExpressionElement.html#NRules_RuleModel_NamedExpressionElement_Name
  commentId: P:NRules.RuleModel.NamedExpressionElement.Name
  fullName: NRules.RuleModel.NamedExpressionElement.Name
  nameWithType: NamedExpressionElement.Name
- uid: NRules.RuleModel.NamedExpressionElement.Name*
  name: Name
  href: api/NRules.RuleModel.NamedExpressionElement.html#NRules_RuleModel_NamedExpressionElement_Name_
  commentId: Overload:NRules.RuleModel.NamedExpressionElement.Name
  isSpec: "True"
  fullName: NRules.RuleModel.NamedExpressionElement.Name
  nameWithType: NamedExpressionElement.Name
- uid: NRules.RuleModel.NotElement
  name: NotElement
  href: api/NRules.RuleModel.NotElement.html
  commentId: T:NRules.RuleModel.NotElement
  fullName: NRules.RuleModel.NotElement
  nameWithType: NotElement
- uid: NRules.RuleModel.NotElement.ElementType
  name: ElementType
  href: api/NRules.RuleModel.NotElement.html#NRules_RuleModel_NotElement_ElementType
  commentId: P:NRules.RuleModel.NotElement.ElementType
  fullName: NRules.RuleModel.NotElement.ElementType
  nameWithType: NotElement.ElementType
- uid: NRules.RuleModel.NotElement.ElementType*
  name: ElementType
  href: api/NRules.RuleModel.NotElement.html#NRules_RuleModel_NotElement_ElementType_
  commentId: Overload:NRules.RuleModel.NotElement.ElementType
  isSpec: "True"
  fullName: NRules.RuleModel.NotElement.ElementType
  nameWithType: NotElement.ElementType
- uid: NRules.RuleModel.NotElement.Source
  name: Source
  href: api/NRules.RuleModel.NotElement.html#NRules_RuleModel_NotElement_Source
  commentId: P:NRules.RuleModel.NotElement.Source
  fullName: NRules.RuleModel.NotElement.Source
  nameWithType: NotElement.Source
- uid: NRules.RuleModel.NotElement.Source*
  name: Source
  href: api/NRules.RuleModel.NotElement.html#NRules_RuleModel_NotElement_Source_
  commentId: Overload:NRules.RuleModel.NotElement.Source
  isSpec: "True"
  fullName: NRules.RuleModel.NotElement.Source
  nameWithType: NotElement.Source
- uid: NRules.RuleModel.OrElement
  name: OrElement
  href: api/NRules.RuleModel.OrElement.html
  commentId: T:NRules.RuleModel.OrElement
  fullName: NRules.RuleModel.OrElement
  nameWithType: OrElement
- uid: NRules.RuleModel.OrElement.ElementType
  name: ElementType
  href: api/NRules.RuleModel.OrElement.html#NRules_RuleModel_OrElement_ElementType
  commentId: P:NRules.RuleModel.OrElement.ElementType
  fullName: NRules.RuleModel.OrElement.ElementType
  nameWithType: OrElement.ElementType
- uid: NRules.RuleModel.OrElement.ElementType*
  name: ElementType
  href: api/NRules.RuleModel.OrElement.html#NRules_RuleModel_OrElement_ElementType_
  commentId: Overload:NRules.RuleModel.OrElement.ElementType
  isSpec: "True"
  fullName: NRules.RuleModel.OrElement.ElementType
  nameWithType: OrElement.ElementType
- uid: NRules.RuleModel.PatternElement
  name: PatternElement
  href: api/NRules.RuleModel.PatternElement.html
  commentId: T:NRules.RuleModel.PatternElement
  fullName: NRules.RuleModel.PatternElement
  nameWithType: PatternElement
- uid: NRules.RuleModel.PatternElement.ConditionName
  name: ConditionName
  href: api/NRules.RuleModel.PatternElement.html#NRules_RuleModel_PatternElement_ConditionName
  commentId: F:NRules.RuleModel.PatternElement.ConditionName
  fullName: NRules.RuleModel.PatternElement.ConditionName
  nameWithType: PatternElement.ConditionName
- uid: NRules.RuleModel.PatternElement.Declaration
  name: Declaration
  href: api/NRules.RuleModel.PatternElement.html#NRules_RuleModel_PatternElement_Declaration
  commentId: P:NRules.RuleModel.PatternElement.Declaration
  fullName: NRules.RuleModel.PatternElement.Declaration
  nameWithType: PatternElement.Declaration
- uid: NRules.RuleModel.PatternElement.Declaration*
  name: Declaration
  href: api/NRules.RuleModel.PatternElement.html#NRules_RuleModel_PatternElement_Declaration_
  commentId: Overload:NRules.RuleModel.PatternElement.Declaration
  isSpec: "True"
  fullName: NRules.RuleModel.PatternElement.Declaration
  nameWithType: PatternElement.Declaration
- uid: NRules.RuleModel.PatternElement.ElementType
  name: ElementType
  href: api/NRules.RuleModel.PatternElement.html#NRules_RuleModel_PatternElement_ElementType
  commentId: P:NRules.RuleModel.PatternElement.ElementType
  fullName: NRules.RuleModel.PatternElement.ElementType
  nameWithType: PatternElement.ElementType
- uid: NRules.RuleModel.PatternElement.ElementType*
  name: ElementType
  href: api/NRules.RuleModel.PatternElement.html#NRules_RuleModel_PatternElement_ElementType_
  commentId: Overload:NRules.RuleModel.PatternElement.ElementType
  isSpec: "True"
  fullName: NRules.RuleModel.PatternElement.ElementType
  nameWithType: PatternElement.ElementType
- uid: NRules.RuleModel.PatternElement.Expressions
  name: Expressions
  href: api/NRules.RuleModel.PatternElement.html#NRules_RuleModel_PatternElement_Expressions
  commentId: P:NRules.RuleModel.PatternElement.Expressions
  fullName: NRules.RuleModel.PatternElement.Expressions
  nameWithType: PatternElement.Expressions
- uid: NRules.RuleModel.PatternElement.Expressions*
  name: Expressions
  href: api/NRules.RuleModel.PatternElement.html#NRules_RuleModel_PatternElement_Expressions_
  commentId: Overload:NRules.RuleModel.PatternElement.Expressions
  isSpec: "True"
  fullName: NRules.RuleModel.PatternElement.Expressions
  nameWithType: PatternElement.Expressions
- uid: NRules.RuleModel.PatternElement.Source
  name: Source
  href: api/NRules.RuleModel.PatternElement.html#NRules_RuleModel_PatternElement_Source
  commentId: P:NRules.RuleModel.PatternElement.Source
  fullName: NRules.RuleModel.PatternElement.Source
  nameWithType: PatternElement.Source
- uid: NRules.RuleModel.PatternElement.Source*
  name: Source
  href: api/NRules.RuleModel.PatternElement.html#NRules_RuleModel_PatternElement_Source_
  commentId: Overload:NRules.RuleModel.PatternElement.Source
  isSpec: "True"
  fullName: NRules.RuleModel.PatternElement.Source
  nameWithType: PatternElement.Source
- uid: NRules.RuleModel.PatternElement.ValueType
  name: ValueType
  href: api/NRules.RuleModel.PatternElement.html#NRules_RuleModel_PatternElement_ValueType
  commentId: P:NRules.RuleModel.PatternElement.ValueType
  fullName: NRules.RuleModel.PatternElement.ValueType
  nameWithType: PatternElement.ValueType
- uid: NRules.RuleModel.PatternElement.ValueType*
  name: ValueType
  href: api/NRules.RuleModel.PatternElement.html#NRules_RuleModel_PatternElement_ValueType_
  commentId: Overload:NRules.RuleModel.PatternElement.ValueType
  isSpec: "True"
  fullName: NRules.RuleModel.PatternElement.ValueType
  nameWithType: PatternElement.ValueType
- uid: NRules.RuleModel.PropertyMap
  name: PropertyMap
  href: api/NRules.RuleModel.PropertyMap.html
  commentId: T:NRules.RuleModel.PropertyMap
  fullName: NRules.RuleModel.PropertyMap
  nameWithType: PropertyMap
- uid: NRules.RuleModel.PropertyMap.#ctor(System.Collections.Generic.IEnumerable{NRules.RuleModel.RuleProperty})
  name: PropertyMap(IEnumerable<RuleProperty>)
  href: api/NRules.RuleModel.PropertyMap.html#NRules_RuleModel_PropertyMap__ctor_System_Collections_Generic_IEnumerable_NRules_RuleModel_RuleProperty__
  commentId: M:NRules.RuleModel.PropertyMap.#ctor(System.Collections.Generic.IEnumerable{NRules.RuleModel.RuleProperty})
  name.vb: New(IEnumerable(Of RuleProperty))
  fullName: NRules.RuleModel.PropertyMap.PropertyMap(System.Collections.Generic.IEnumerable<NRules.RuleModel.RuleProperty>)
  fullName.vb: NRules.RuleModel.PropertyMap.New(System.Collections.Generic.IEnumerable(Of NRules.RuleModel.RuleProperty))
  nameWithType: PropertyMap.PropertyMap(IEnumerable<RuleProperty>)
  nameWithType.vb: PropertyMap.New(IEnumerable(Of RuleProperty))
- uid: NRules.RuleModel.PropertyMap.#ctor*
  name: PropertyMap
  href: api/NRules.RuleModel.PropertyMap.html#NRules_RuleModel_PropertyMap__ctor_
  commentId: Overload:NRules.RuleModel.PropertyMap.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleModel.PropertyMap.PropertyMap
  fullName.vb: NRules.RuleModel.PropertyMap.New
  nameWithType: PropertyMap.PropertyMap
  nameWithType.vb: PropertyMap.New
- uid: NRules.RuleModel.PropertyMap.Count
  name: Count
  href: api/NRules.RuleModel.PropertyMap.html#NRules_RuleModel_PropertyMap_Count
  commentId: P:NRules.RuleModel.PropertyMap.Count
  fullName: NRules.RuleModel.PropertyMap.Count
  nameWithType: PropertyMap.Count
- uid: NRules.RuleModel.PropertyMap.Count*
  name: Count
  href: api/NRules.RuleModel.PropertyMap.html#NRules_RuleModel_PropertyMap_Count_
  commentId: Overload:NRules.RuleModel.PropertyMap.Count
  isSpec: "True"
  fullName: NRules.RuleModel.PropertyMap.Count
  nameWithType: PropertyMap.Count
- uid: NRules.RuleModel.PropertyMap.GetEnumerator
  name: GetEnumerator()
  href: api/NRules.RuleModel.PropertyMap.html#NRules_RuleModel_PropertyMap_GetEnumerator
  commentId: M:NRules.RuleModel.PropertyMap.GetEnumerator
  fullName: NRules.RuleModel.PropertyMap.GetEnumerator()
  nameWithType: PropertyMap.GetEnumerator()
- uid: NRules.RuleModel.PropertyMap.GetEnumerator*
  name: GetEnumerator
  href: api/NRules.RuleModel.PropertyMap.html#NRules_RuleModel_PropertyMap_GetEnumerator_
  commentId: Overload:NRules.RuleModel.PropertyMap.GetEnumerator
  isSpec: "True"
  fullName: NRules.RuleModel.PropertyMap.GetEnumerator
  nameWithType: PropertyMap.GetEnumerator
- uid: NRules.RuleModel.PropertyMap.Item(System.String)
  name: this[string]
  href: api/NRules.RuleModel.PropertyMap.html#NRules_RuleModel_PropertyMap_Item_System_String_
  commentId: P:NRules.RuleModel.PropertyMap.Item(System.String)
  name.vb: this[](String)
  fullName: NRules.RuleModel.PropertyMap.this[string]
  fullName.vb: NRules.RuleModel.PropertyMap.this[](String)
  nameWithType: PropertyMap.this[string]
  nameWithType.vb: PropertyMap.this[](String)
- uid: NRules.RuleModel.PropertyMap.Item*
  name: this
  href: api/NRules.RuleModel.PropertyMap.html#NRules_RuleModel_PropertyMap_Item_
  commentId: Overload:NRules.RuleModel.PropertyMap.Item
  isSpec: "True"
  name.vb: this[]
  fullName: NRules.RuleModel.PropertyMap.this
  fullName.vb: NRules.RuleModel.PropertyMap.this[]
  nameWithType: PropertyMap.this
  nameWithType.vb: PropertyMap.this[]
- uid: NRules.RuleModel.PropertyMap.TryGetProperty(System.String,NRules.RuleModel.RuleProperty@)
  name: TryGetProperty(string, out RuleProperty)
  href: api/NRules.RuleModel.PropertyMap.html#NRules_RuleModel_PropertyMap_TryGetProperty_System_String_NRules_RuleModel_RuleProperty__
  commentId: M:NRules.RuleModel.PropertyMap.TryGetProperty(System.String,NRules.RuleModel.RuleProperty@)
  name.vb: TryGetProperty(String, RuleProperty)
  fullName: NRules.RuleModel.PropertyMap.TryGetProperty(string, out NRules.RuleModel.RuleProperty)
  fullName.vb: NRules.RuleModel.PropertyMap.TryGetProperty(String, NRules.RuleModel.RuleProperty)
  nameWithType: PropertyMap.TryGetProperty(string, out RuleProperty)
  nameWithType.vb: PropertyMap.TryGetProperty(String, RuleProperty)
- uid: NRules.RuleModel.PropertyMap.TryGetProperty*
  name: TryGetProperty
  href: api/NRules.RuleModel.PropertyMap.html#NRules_RuleModel_PropertyMap_TryGetProperty_
  commentId: Overload:NRules.RuleModel.PropertyMap.TryGetProperty
  isSpec: "True"
  fullName: NRules.RuleModel.PropertyMap.TryGetProperty
  nameWithType: PropertyMap.TryGetProperty
- uid: NRules.RuleModel.RuleElement
  name: RuleElement
  href: api/NRules.RuleModel.RuleElement.html
  commentId: T:NRules.RuleModel.RuleElement
  fullName: NRules.RuleModel.RuleElement
  nameWithType: RuleElement
- uid: NRules.RuleModel.RuleElement.ElementType
  name: ElementType
  href: api/NRules.RuleModel.RuleElement.html#NRules_RuleModel_RuleElement_ElementType
  commentId: P:NRules.RuleModel.RuleElement.ElementType
  fullName: NRules.RuleModel.RuleElement.ElementType
  nameWithType: RuleElement.ElementType
- uid: NRules.RuleModel.RuleElement.ElementType*
  name: ElementType
  href: api/NRules.RuleModel.RuleElement.html#NRules_RuleModel_RuleElement_ElementType_
  commentId: Overload:NRules.RuleModel.RuleElement.ElementType
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElement.ElementType
  nameWithType: RuleElement.ElementType
- uid: NRules.RuleModel.RuleElement.Exports
  name: Exports
  href: api/NRules.RuleModel.RuleElement.html#NRules_RuleModel_RuleElement_Exports
  commentId: P:NRules.RuleModel.RuleElement.Exports
  fullName: NRules.RuleModel.RuleElement.Exports
  nameWithType: RuleElement.Exports
- uid: NRules.RuleModel.RuleElement.Exports*
  name: Exports
  href: api/NRules.RuleModel.RuleElement.html#NRules_RuleModel_RuleElement_Exports_
  commentId: Overload:NRules.RuleModel.RuleElement.Exports
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElement.Exports
  nameWithType: RuleElement.Exports
- uid: NRules.RuleModel.RuleElement.Imports
  name: Imports
  href: api/NRules.RuleModel.RuleElement.html#NRules_RuleModel_RuleElement_Imports
  commentId: P:NRules.RuleModel.RuleElement.Imports
  fullName: NRules.RuleModel.RuleElement.Imports
  nameWithType: RuleElement.Imports
- uid: NRules.RuleModel.RuleElement.Imports*
  name: Imports
  href: api/NRules.RuleModel.RuleElement.html#NRules_RuleModel_RuleElement_Imports_
  commentId: Overload:NRules.RuleModel.RuleElement.Imports
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElement.Imports
  nameWithType: RuleElement.Imports
- uid: NRules.RuleModel.RuleElementExtensions
  name: RuleElementExtensions
  href: api/NRules.RuleModel.RuleElementExtensions.html
  commentId: T:NRules.RuleModel.RuleElementExtensions
  fullName: NRules.RuleModel.RuleElementExtensions
  nameWithType: RuleElementExtensions
- uid: NRules.RuleModel.RuleElementExtensions.Match(NRules.RuleModel.GroupElement,System.Action{NRules.RuleModel.AndElement},System.Action{NRules.RuleModel.OrElement})
  name: Match(GroupElement, Action<AndElement>, Action<OrElement>)
  href: api/NRules.RuleModel.RuleElementExtensions.html#NRules_RuleModel_RuleElementExtensions_Match_NRules_RuleModel_GroupElement_System_Action_NRules_RuleModel_AndElement__System_Action_NRules_RuleModel_OrElement__
  commentId: M:NRules.RuleModel.RuleElementExtensions.Match(NRules.RuleModel.GroupElement,System.Action{NRules.RuleModel.AndElement},System.Action{NRules.RuleModel.OrElement})
  name.vb: Match(GroupElement, Action(Of AndElement), Action(Of OrElement))
  fullName: NRules.RuleModel.RuleElementExtensions.Match(NRules.RuleModel.GroupElement, System.Action<NRules.RuleModel.AndElement>, System.Action<NRules.RuleModel.OrElement>)
  fullName.vb: NRules.RuleModel.RuleElementExtensions.Match(NRules.RuleModel.GroupElement, System.Action(Of NRules.RuleModel.AndElement), System.Action(Of NRules.RuleModel.OrElement))
  nameWithType: RuleElementExtensions.Match(GroupElement, Action<AndElement>, Action<OrElement>)
  nameWithType.vb: RuleElementExtensions.Match(GroupElement, Action(Of AndElement), Action(Of OrElement))
- uid: NRules.RuleModel.RuleElementExtensions.Match(NRules.RuleModel.RuleElement,System.Action{NRules.RuleModel.PatternElement},System.Action{NRules.RuleModel.AggregateElement},System.Action{NRules.RuleModel.GroupElement},System.Action{NRules.RuleModel.ExistsElement},System.Action{NRules.RuleModel.NotElement},System.Action{NRules.RuleModel.ForAllElement})
  name: Match(RuleElement, Action<PatternElement>, Action<AggregateElement>, Action<GroupElement>, Action<ExistsElement>, Action<NotElement>, Action<ForAllElement>)
  href: api/NRules.RuleModel.RuleElementExtensions.html#NRules_RuleModel_RuleElementExtensions_Match_NRules_RuleModel_RuleElement_System_Action_NRules_RuleModel_PatternElement__System_Action_NRules_RuleModel_AggregateElement__System_Action_NRules_RuleModel_GroupElement__System_Action_NRules_RuleModel_ExistsElement__System_Action_NRules_RuleModel_NotElement__System_Action_NRules_RuleModel_ForAllElement__
  commentId: M:NRules.RuleModel.RuleElementExtensions.Match(NRules.RuleModel.RuleElement,System.Action{NRules.RuleModel.PatternElement},System.Action{NRules.RuleModel.AggregateElement},System.Action{NRules.RuleModel.GroupElement},System.Action{NRules.RuleModel.ExistsElement},System.Action{NRules.RuleModel.NotElement},System.Action{NRules.RuleModel.ForAllElement})
  name.vb: Match(RuleElement, Action(Of PatternElement), Action(Of AggregateElement), Action(Of GroupElement), Action(Of ExistsElement), Action(Of NotElement), Action(Of ForAllElement))
  fullName: NRules.RuleModel.RuleElementExtensions.Match(NRules.RuleModel.RuleElement, System.Action<NRules.RuleModel.PatternElement>, System.Action<NRules.RuleModel.AggregateElement>, System.Action<NRules.RuleModel.GroupElement>, System.Action<NRules.RuleModel.ExistsElement>, System.Action<NRules.RuleModel.NotElement>, System.Action<NRules.RuleModel.ForAllElement>)
  fullName.vb: NRules.RuleModel.RuleElementExtensions.Match(NRules.RuleModel.RuleElement, System.Action(Of NRules.RuleModel.PatternElement), System.Action(Of NRules.RuleModel.AggregateElement), System.Action(Of NRules.RuleModel.GroupElement), System.Action(Of NRules.RuleModel.ExistsElement), System.Action(Of NRules.RuleModel.NotElement), System.Action(Of NRules.RuleModel.ForAllElement))
  nameWithType: RuleElementExtensions.Match(RuleElement, Action<PatternElement>, Action<AggregateElement>, Action<GroupElement>, Action<ExistsElement>, Action<NotElement>, Action<ForAllElement>)
  nameWithType.vb: RuleElementExtensions.Match(RuleElement, Action(Of PatternElement), Action(Of AggregateElement), Action(Of GroupElement), Action(Of ExistsElement), Action(Of NotElement), Action(Of ForAllElement))
- uid: NRules.RuleModel.RuleElementExtensions.Match*
  name: Match
  href: api/NRules.RuleModel.RuleElementExtensions.html#NRules_RuleModel_RuleElementExtensions_Match_
  commentId: Overload:NRules.RuleModel.RuleElementExtensions.Match
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElementExtensions.Match
  nameWithType: RuleElementExtensions.Match
- uid: NRules.RuleModel.RuleElementVisitor`1
  name: RuleElementVisitor<TContext>
  href: api/NRules.RuleModel.RuleElementVisitor-1.html
  commentId: T:NRules.RuleModel.RuleElementVisitor`1
  name.vb: RuleElementVisitor(Of TContext)
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext)
  nameWithType: RuleElementVisitor<TContext>
  nameWithType.vb: RuleElementVisitor(Of TContext)
- uid: NRules.RuleModel.RuleElementVisitor`1.Visit(`0,NRules.RuleModel.RuleElement)
  name: Visit(TContext, RuleElement)
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_Visit__0_NRules_RuleModel_RuleElement_
  commentId: M:NRules.RuleModel.RuleElementVisitor`1.Visit(`0,NRules.RuleModel.RuleElement)
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.Visit(TContext, NRules.RuleModel.RuleElement)
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).Visit(TContext, NRules.RuleModel.RuleElement)
  nameWithType: RuleElementVisitor<TContext>.Visit(TContext, RuleElement)
  nameWithType.vb: RuleElementVisitor(Of TContext).Visit(TContext, RuleElement)
- uid: NRules.RuleModel.RuleElementVisitor`1.Visit*
  name: Visit
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_Visit_
  commentId: Overload:NRules.RuleModel.RuleElementVisitor`1.Visit
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.Visit
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).Visit
  nameWithType: RuleElementVisitor<TContext>.Visit
  nameWithType.vb: RuleElementVisitor(Of TContext).Visit
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitAction(`0,NRules.RuleModel.ActionElement)
  name: VisitAction(TContext, ActionElement)
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitAction__0_NRules_RuleModel_ActionElement_
  commentId: M:NRules.RuleModel.RuleElementVisitor`1.VisitAction(`0,NRules.RuleModel.ActionElement)
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitAction(TContext, NRules.RuleModel.ActionElement)
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitAction(TContext, NRules.RuleModel.ActionElement)
  nameWithType: RuleElementVisitor<TContext>.VisitAction(TContext, ActionElement)
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitAction(TContext, ActionElement)
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitAction*
  name: VisitAction
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitAction_
  commentId: Overload:NRules.RuleModel.RuleElementVisitor`1.VisitAction
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitAction
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitAction
  nameWithType: RuleElementVisitor<TContext>.VisitAction
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitAction
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitActionGroup(`0,NRules.RuleModel.ActionGroupElement)
  name: VisitActionGroup(TContext, ActionGroupElement)
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitActionGroup__0_NRules_RuleModel_ActionGroupElement_
  commentId: M:NRules.RuleModel.RuleElementVisitor`1.VisitActionGroup(`0,NRules.RuleModel.ActionGroupElement)
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitActionGroup(TContext, NRules.RuleModel.ActionGroupElement)
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitActionGroup(TContext, NRules.RuleModel.ActionGroupElement)
  nameWithType: RuleElementVisitor<TContext>.VisitActionGroup(TContext, ActionGroupElement)
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitActionGroup(TContext, ActionGroupElement)
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitActionGroup*
  name: VisitActionGroup
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitActionGroup_
  commentId: Overload:NRules.RuleModel.RuleElementVisitor`1.VisitActionGroup
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitActionGroup
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitActionGroup
  nameWithType: RuleElementVisitor<TContext>.VisitActionGroup
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitActionGroup
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitAggregate(`0,NRules.RuleModel.AggregateElement)
  name: VisitAggregate(TContext, AggregateElement)
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitAggregate__0_NRules_RuleModel_AggregateElement_
  commentId: M:NRules.RuleModel.RuleElementVisitor`1.VisitAggregate(`0,NRules.RuleModel.AggregateElement)
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitAggregate(TContext, NRules.RuleModel.AggregateElement)
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitAggregate(TContext, NRules.RuleModel.AggregateElement)
  nameWithType: RuleElementVisitor<TContext>.VisitAggregate(TContext, AggregateElement)
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitAggregate(TContext, AggregateElement)
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitAggregate*
  name: VisitAggregate
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitAggregate_
  commentId: Overload:NRules.RuleModel.RuleElementVisitor`1.VisitAggregate
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitAggregate
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitAggregate
  nameWithType: RuleElementVisitor<TContext>.VisitAggregate
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitAggregate
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitAnd(`0,NRules.RuleModel.AndElement)
  name: VisitAnd(TContext, AndElement)
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitAnd__0_NRules_RuleModel_AndElement_
  commentId: M:NRules.RuleModel.RuleElementVisitor`1.VisitAnd(`0,NRules.RuleModel.AndElement)
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitAnd(TContext, NRules.RuleModel.AndElement)
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitAnd(TContext, NRules.RuleModel.AndElement)
  nameWithType: RuleElementVisitor<TContext>.VisitAnd(TContext, AndElement)
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitAnd(TContext, AndElement)
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitAnd*
  name: VisitAnd
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitAnd_
  commentId: Overload:NRules.RuleModel.RuleElementVisitor`1.VisitAnd
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitAnd
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitAnd
  nameWithType: RuleElementVisitor<TContext>.VisitAnd
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitAnd
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitBinding(`0,NRules.RuleModel.BindingElement)
  name: VisitBinding(TContext, BindingElement)
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitBinding__0_NRules_RuleModel_BindingElement_
  commentId: M:NRules.RuleModel.RuleElementVisitor`1.VisitBinding(`0,NRules.RuleModel.BindingElement)
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitBinding(TContext, NRules.RuleModel.BindingElement)
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitBinding(TContext, NRules.RuleModel.BindingElement)
  nameWithType: RuleElementVisitor<TContext>.VisitBinding(TContext, BindingElement)
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitBinding(TContext, BindingElement)
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitBinding*
  name: VisitBinding
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitBinding_
  commentId: Overload:NRules.RuleModel.RuleElementVisitor`1.VisitBinding
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitBinding
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitBinding
  nameWithType: RuleElementVisitor<TContext>.VisitBinding
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitBinding
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitDependency(`0,NRules.RuleModel.DependencyElement)
  name: VisitDependency(TContext, DependencyElement)
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitDependency__0_NRules_RuleModel_DependencyElement_
  commentId: M:NRules.RuleModel.RuleElementVisitor`1.VisitDependency(`0,NRules.RuleModel.DependencyElement)
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitDependency(TContext, NRules.RuleModel.DependencyElement)
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitDependency(TContext, NRules.RuleModel.DependencyElement)
  nameWithType: RuleElementVisitor<TContext>.VisitDependency(TContext, DependencyElement)
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitDependency(TContext, DependencyElement)
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitDependency*
  name: VisitDependency
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitDependency_
  commentId: Overload:NRules.RuleModel.RuleElementVisitor`1.VisitDependency
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitDependency
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitDependency
  nameWithType: RuleElementVisitor<TContext>.VisitDependency
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitDependency
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitDependencyGroup(`0,NRules.RuleModel.DependencyGroupElement)
  name: VisitDependencyGroup(TContext, DependencyGroupElement)
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitDependencyGroup__0_NRules_RuleModel_DependencyGroupElement_
  commentId: M:NRules.RuleModel.RuleElementVisitor`1.VisitDependencyGroup(`0,NRules.RuleModel.DependencyGroupElement)
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitDependencyGroup(TContext, NRules.RuleModel.DependencyGroupElement)
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitDependencyGroup(TContext, NRules.RuleModel.DependencyGroupElement)
  nameWithType: RuleElementVisitor<TContext>.VisitDependencyGroup(TContext, DependencyGroupElement)
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitDependencyGroup(TContext, DependencyGroupElement)
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitDependencyGroup*
  name: VisitDependencyGroup
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitDependencyGroup_
  commentId: Overload:NRules.RuleModel.RuleElementVisitor`1.VisitDependencyGroup
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitDependencyGroup
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitDependencyGroup
  nameWithType: RuleElementVisitor<TContext>.VisitDependencyGroup
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitDependencyGroup
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitExists(`0,NRules.RuleModel.ExistsElement)
  name: VisitExists(TContext, ExistsElement)
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitExists__0_NRules_RuleModel_ExistsElement_
  commentId: M:NRules.RuleModel.RuleElementVisitor`1.VisitExists(`0,NRules.RuleModel.ExistsElement)
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitExists(TContext, NRules.RuleModel.ExistsElement)
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitExists(TContext, NRules.RuleModel.ExistsElement)
  nameWithType: RuleElementVisitor<TContext>.VisitExists(TContext, ExistsElement)
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitExists(TContext, ExistsElement)
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitExists*
  name: VisitExists
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitExists_
  commentId: Overload:NRules.RuleModel.RuleElementVisitor`1.VisitExists
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitExists
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitExists
  nameWithType: RuleElementVisitor<TContext>.VisitExists
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitExists
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitFilter(`0,NRules.RuleModel.FilterElement)
  name: VisitFilter(TContext, FilterElement)
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitFilter__0_NRules_RuleModel_FilterElement_
  commentId: M:NRules.RuleModel.RuleElementVisitor`1.VisitFilter(`0,NRules.RuleModel.FilterElement)
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitFilter(TContext, NRules.RuleModel.FilterElement)
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitFilter(TContext, NRules.RuleModel.FilterElement)
  nameWithType: RuleElementVisitor<TContext>.VisitFilter(TContext, FilterElement)
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitFilter(TContext, FilterElement)
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitFilter*
  name: VisitFilter
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitFilter_
  commentId: Overload:NRules.RuleModel.RuleElementVisitor`1.VisitFilter
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitFilter
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitFilter
  nameWithType: RuleElementVisitor<TContext>.VisitFilter
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitFilter
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitFilterGroup(`0,NRules.RuleModel.FilterGroupElement)
  name: VisitFilterGroup(TContext, FilterGroupElement)
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitFilterGroup__0_NRules_RuleModel_FilterGroupElement_
  commentId: M:NRules.RuleModel.RuleElementVisitor`1.VisitFilterGroup(`0,NRules.RuleModel.FilterGroupElement)
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitFilterGroup(TContext, NRules.RuleModel.FilterGroupElement)
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitFilterGroup(TContext, NRules.RuleModel.FilterGroupElement)
  nameWithType: RuleElementVisitor<TContext>.VisitFilterGroup(TContext, FilterGroupElement)
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitFilterGroup(TContext, FilterGroupElement)
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitFilterGroup*
  name: VisitFilterGroup
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitFilterGroup_
  commentId: Overload:NRules.RuleModel.RuleElementVisitor`1.VisitFilterGroup
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitFilterGroup
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitFilterGroup
  nameWithType: RuleElementVisitor<TContext>.VisitFilterGroup
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitFilterGroup
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitForAll(`0,NRules.RuleModel.ForAllElement)
  name: VisitForAll(TContext, ForAllElement)
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitForAll__0_NRules_RuleModel_ForAllElement_
  commentId: M:NRules.RuleModel.RuleElementVisitor`1.VisitForAll(`0,NRules.RuleModel.ForAllElement)
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitForAll(TContext, NRules.RuleModel.ForAllElement)
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitForAll(TContext, NRules.RuleModel.ForAllElement)
  nameWithType: RuleElementVisitor<TContext>.VisitForAll(TContext, ForAllElement)
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitForAll(TContext, ForAllElement)
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitForAll*
  name: VisitForAll
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitForAll_
  commentId: Overload:NRules.RuleModel.RuleElementVisitor`1.VisitForAll
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitForAll
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitForAll
  nameWithType: RuleElementVisitor<TContext>.VisitForAll
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitForAll
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitNamedExpression(`0,NRules.RuleModel.NamedExpressionElement)
  name: VisitNamedExpression(TContext, NamedExpressionElement)
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitNamedExpression__0_NRules_RuleModel_NamedExpressionElement_
  commentId: M:NRules.RuleModel.RuleElementVisitor`1.VisitNamedExpression(`0,NRules.RuleModel.NamedExpressionElement)
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitNamedExpression(TContext, NRules.RuleModel.NamedExpressionElement)
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitNamedExpression(TContext, NRules.RuleModel.NamedExpressionElement)
  nameWithType: RuleElementVisitor<TContext>.VisitNamedExpression(TContext, NamedExpressionElement)
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitNamedExpression(TContext, NamedExpressionElement)
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitNamedExpression*
  name: VisitNamedExpression
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitNamedExpression_
  commentId: Overload:NRules.RuleModel.RuleElementVisitor`1.VisitNamedExpression
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitNamedExpression
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitNamedExpression
  nameWithType: RuleElementVisitor<TContext>.VisitNamedExpression
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitNamedExpression
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitNot(`0,NRules.RuleModel.NotElement)
  name: VisitNot(TContext, NotElement)
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitNot__0_NRules_RuleModel_NotElement_
  commentId: M:NRules.RuleModel.RuleElementVisitor`1.VisitNot(`0,NRules.RuleModel.NotElement)
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitNot(TContext, NRules.RuleModel.NotElement)
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitNot(TContext, NRules.RuleModel.NotElement)
  nameWithType: RuleElementVisitor<TContext>.VisitNot(TContext, NotElement)
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitNot(TContext, NotElement)
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitNot*
  name: VisitNot
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitNot_
  commentId: Overload:NRules.RuleModel.RuleElementVisitor`1.VisitNot
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitNot
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitNot
  nameWithType: RuleElementVisitor<TContext>.VisitNot
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitNot
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitOr(`0,NRules.RuleModel.OrElement)
  name: VisitOr(TContext, OrElement)
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitOr__0_NRules_RuleModel_OrElement_
  commentId: M:NRules.RuleModel.RuleElementVisitor`1.VisitOr(`0,NRules.RuleModel.OrElement)
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitOr(TContext, NRules.RuleModel.OrElement)
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitOr(TContext, NRules.RuleModel.OrElement)
  nameWithType: RuleElementVisitor<TContext>.VisitOr(TContext, OrElement)
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitOr(TContext, OrElement)
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitOr*
  name: VisitOr
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitOr_
  commentId: Overload:NRules.RuleModel.RuleElementVisitor`1.VisitOr
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitOr
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitOr
  nameWithType: RuleElementVisitor<TContext>.VisitOr
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitOr
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitPattern(`0,NRules.RuleModel.PatternElement)
  name: VisitPattern(TContext, PatternElement)
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitPattern__0_NRules_RuleModel_PatternElement_
  commentId: M:NRules.RuleModel.RuleElementVisitor`1.VisitPattern(`0,NRules.RuleModel.PatternElement)
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitPattern(TContext, NRules.RuleModel.PatternElement)
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitPattern(TContext, NRules.RuleModel.PatternElement)
  nameWithType: RuleElementVisitor<TContext>.VisitPattern(TContext, PatternElement)
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitPattern(TContext, PatternElement)
- uid: NRules.RuleModel.RuleElementVisitor`1.VisitPattern*
  name: VisitPattern
  href: api/NRules.RuleModel.RuleElementVisitor-1.html#NRules_RuleModel_RuleElementVisitor_1_VisitPattern_
  commentId: Overload:NRules.RuleModel.RuleElementVisitor`1.VisitPattern
  isSpec: "True"
  fullName: NRules.RuleModel.RuleElementVisitor<TContext>.VisitPattern
  fullName.vb: NRules.RuleModel.RuleElementVisitor(Of TContext).VisitPattern
  nameWithType: RuleElementVisitor<TContext>.VisitPattern
  nameWithType.vb: RuleElementVisitor(Of TContext).VisitPattern
- uid: NRules.RuleModel.RuleProperty
  name: RuleProperty
  href: api/NRules.RuleModel.RuleProperty.html
  commentId: T:NRules.RuleModel.RuleProperty
  fullName: NRules.RuleModel.RuleProperty
  nameWithType: RuleProperty
- uid: NRules.RuleModel.RuleProperty.#ctor(System.String,System.Object)
  name: RuleProperty(string, object)
  href: api/NRules.RuleModel.RuleProperty.html#NRules_RuleModel_RuleProperty__ctor_System_String_System_Object_
  commentId: M:NRules.RuleModel.RuleProperty.#ctor(System.String,System.Object)
  name.vb: New(String, Object)
  fullName: NRules.RuleModel.RuleProperty.RuleProperty(string, object)
  fullName.vb: NRules.RuleModel.RuleProperty.New(String, Object)
  nameWithType: RuleProperty.RuleProperty(string, object)
  nameWithType.vb: RuleProperty.New(String, Object)
- uid: NRules.RuleModel.RuleProperty.#ctor*
  name: RuleProperty
  href: api/NRules.RuleModel.RuleProperty.html#NRules_RuleModel_RuleProperty__ctor_
  commentId: Overload:NRules.RuleModel.RuleProperty.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleModel.RuleProperty.RuleProperty
  fullName.vb: NRules.RuleModel.RuleProperty.New
  nameWithType: RuleProperty.RuleProperty
  nameWithType.vb: RuleProperty.New
- uid: NRules.RuleModel.RuleProperty.Name
  name: Name
  href: api/NRules.RuleModel.RuleProperty.html#NRules_RuleModel_RuleProperty_Name
  commentId: P:NRules.RuleModel.RuleProperty.Name
  fullName: NRules.RuleModel.RuleProperty.Name
  nameWithType: RuleProperty.Name
- uid: NRules.RuleModel.RuleProperty.Name*
  name: Name
  href: api/NRules.RuleModel.RuleProperty.html#NRules_RuleModel_RuleProperty_Name_
  commentId: Overload:NRules.RuleModel.RuleProperty.Name
  isSpec: "True"
  fullName: NRules.RuleModel.RuleProperty.Name
  nameWithType: RuleProperty.Name
- uid: NRules.RuleModel.RuleProperty.Value
  name: Value
  href: api/NRules.RuleModel.RuleProperty.html#NRules_RuleModel_RuleProperty_Value
  commentId: P:NRules.RuleModel.RuleProperty.Value
  fullName: NRules.RuleModel.RuleProperty.Value
  nameWithType: RuleProperty.Value
- uid: NRules.RuleModel.RuleProperty.Value*
  name: Value
  href: api/NRules.RuleModel.RuleProperty.html#NRules_RuleModel_RuleProperty_Value_
  commentId: Overload:NRules.RuleModel.RuleProperty.Value
  isSpec: "True"
  fullName: NRules.RuleModel.RuleProperty.Value
  nameWithType: RuleProperty.Value
- uid: NRules.RuleModel.RuleRepeatability
  name: RuleRepeatability
  href: api/NRules.RuleModel.RuleRepeatability.html
  commentId: T:NRules.RuleModel.RuleRepeatability
  fullName: NRules.RuleModel.RuleRepeatability
  nameWithType: RuleRepeatability
- uid: NRules.RuleModel.RuleRepeatability.NonRepeatable
  name: NonRepeatable
  href: api/NRules.RuleModel.RuleRepeatability.html#NRules_RuleModel_RuleRepeatability_NonRepeatable
  commentId: F:NRules.RuleModel.RuleRepeatability.NonRepeatable
  fullName: NRules.RuleModel.RuleRepeatability.NonRepeatable
  nameWithType: RuleRepeatability.NonRepeatable
- uid: NRules.RuleModel.RuleRepeatability.Repeatable
  name: Repeatable
  href: api/NRules.RuleModel.RuleRepeatability.html#NRules_RuleModel_RuleRepeatability_Repeatable
  commentId: F:NRules.RuleModel.RuleRepeatability.Repeatable
  fullName: NRules.RuleModel.RuleRepeatability.Repeatable
  nameWithType: RuleRepeatability.Repeatable
- uid: NRules.RuleModel.RuleSet
  name: RuleSet
  href: api/NRules.RuleModel.RuleSet.html
  commentId: T:NRules.RuleModel.RuleSet
  fullName: NRules.RuleModel.RuleSet
  nameWithType: RuleSet
- uid: NRules.RuleModel.RuleSet.#ctor(System.String)
  name: RuleSet(string)
  href: api/NRules.RuleModel.RuleSet.html#NRules_RuleModel_RuleSet__ctor_System_String_
  commentId: M:NRules.RuleModel.RuleSet.#ctor(System.String)
  name.vb: New(String)
  fullName: NRules.RuleModel.RuleSet.RuleSet(string)
  fullName.vb: NRules.RuleModel.RuleSet.New(String)
  nameWithType: RuleSet.RuleSet(string)
  nameWithType.vb: RuleSet.New(String)
- uid: NRules.RuleModel.RuleSet.#ctor*
  name: RuleSet
  href: api/NRules.RuleModel.RuleSet.html#NRules_RuleModel_RuleSet__ctor_
  commentId: Overload:NRules.RuleModel.RuleSet.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleModel.RuleSet.RuleSet
  fullName.vb: NRules.RuleModel.RuleSet.New
  nameWithType: RuleSet.RuleSet
  nameWithType.vb: RuleSet.New
- uid: NRules.RuleModel.RuleSet.Add(System.Collections.Generic.IEnumerable{NRules.RuleModel.IRuleDefinition})
  name: Add(IEnumerable<IRuleDefinition>)
  href: api/NRules.RuleModel.RuleSet.html#NRules_RuleModel_RuleSet_Add_System_Collections_Generic_IEnumerable_NRules_RuleModel_IRuleDefinition__
  commentId: M:NRules.RuleModel.RuleSet.Add(System.Collections.Generic.IEnumerable{NRules.RuleModel.IRuleDefinition})
  name.vb: Add(IEnumerable(Of IRuleDefinition))
  fullName: NRules.RuleModel.RuleSet.Add(System.Collections.Generic.IEnumerable<NRules.RuleModel.IRuleDefinition>)
  fullName.vb: NRules.RuleModel.RuleSet.Add(System.Collections.Generic.IEnumerable(Of NRules.RuleModel.IRuleDefinition))
  nameWithType: RuleSet.Add(IEnumerable<IRuleDefinition>)
  nameWithType.vb: RuleSet.Add(IEnumerable(Of IRuleDefinition))
- uid: NRules.RuleModel.RuleSet.Add*
  name: Add
  href: api/NRules.RuleModel.RuleSet.html#NRules_RuleModel_RuleSet_Add_
  commentId: Overload:NRules.RuleModel.RuleSet.Add
  isSpec: "True"
  fullName: NRules.RuleModel.RuleSet.Add
  nameWithType: RuleSet.Add
- uid: NRules.RuleModel.RuleSet.Name
  name: Name
  href: api/NRules.RuleModel.RuleSet.html#NRules_RuleModel_RuleSet_Name
  commentId: P:NRules.RuleModel.RuleSet.Name
  fullName: NRules.RuleModel.RuleSet.Name
  nameWithType: RuleSet.Name
- uid: NRules.RuleModel.RuleSet.Name*
  name: Name
  href: api/NRules.RuleModel.RuleSet.html#NRules_RuleModel_RuleSet_Name_
  commentId: Overload:NRules.RuleModel.RuleSet.Name
  isSpec: "True"
  fullName: NRules.RuleModel.RuleSet.Name
  nameWithType: RuleSet.Name
- uid: NRules.RuleModel.RuleSet.Rules
  name: Rules
  href: api/NRules.RuleModel.RuleSet.html#NRules_RuleModel_RuleSet_Rules
  commentId: P:NRules.RuleModel.RuleSet.Rules
  fullName: NRules.RuleModel.RuleSet.Rules
  nameWithType: RuleSet.Rules
- uid: NRules.RuleModel.RuleSet.Rules*
  name: Rules
  href: api/NRules.RuleModel.RuleSet.html#NRules_RuleModel_RuleSet_Rules_
  commentId: Overload:NRules.RuleModel.RuleSet.Rules
  isSpec: "True"
  fullName: NRules.RuleModel.RuleSet.Rules
  nameWithType: RuleSet.Rules
- uid: NRules.RuleModel.RuleSetExtensions
  name: RuleSetExtensions
  href: api/NRules.RuleModel.RuleSetExtensions.html
  commentId: T:NRules.RuleModel.RuleSetExtensions
  fullName: NRules.RuleModel.RuleSetExtensions
  nameWithType: RuleSetExtensions
- uid: NRules.RuleModel.RuleSetExtensions.Add(NRules.RuleModel.IRuleSet,NRules.RuleModel.IRuleDefinition)
  name: Add(IRuleSet, IRuleDefinition)
  href: api/NRules.RuleModel.RuleSetExtensions.html#NRules_RuleModel_RuleSetExtensions_Add_NRules_RuleModel_IRuleSet_NRules_RuleModel_IRuleDefinition_
  commentId: M:NRules.RuleModel.RuleSetExtensions.Add(NRules.RuleModel.IRuleSet,NRules.RuleModel.IRuleDefinition)
  fullName: NRules.RuleModel.RuleSetExtensions.Add(NRules.RuleModel.IRuleSet, NRules.RuleModel.IRuleDefinition)
  nameWithType: RuleSetExtensions.Add(IRuleSet, IRuleDefinition)
- uid: NRules.RuleModel.RuleSetExtensions.Add*
  name: Add
  href: api/NRules.RuleModel.RuleSetExtensions.html#NRules_RuleModel_RuleSetExtensions_Add_
  commentId: Overload:NRules.RuleModel.RuleSetExtensions.Add
  isSpec: "True"
  fullName: NRules.RuleModel.RuleSetExtensions.Add
  nameWithType: RuleSetExtensions.Add
- uid: NRules.RuleModel.SortDirection
  name: SortDirection
  href: api/NRules.RuleModel.SortDirection.html
  commentId: T:NRules.RuleModel.SortDirection
  fullName: NRules.RuleModel.SortDirection
  nameWithType: SortDirection
- uid: NRules.RuleModel.SortDirection.Ascending
  name: Ascending
  href: api/NRules.RuleModel.SortDirection.html#NRules_RuleModel_SortDirection_Ascending
  commentId: F:NRules.RuleModel.SortDirection.Ascending
  fullName: NRules.RuleModel.SortDirection.Ascending
  nameWithType: SortDirection.Ascending
- uid: NRules.RuleModel.SortDirection.Descending
  name: Descending
  href: api/NRules.RuleModel.SortDirection.html#NRules_RuleModel_SortDirection_Descending
  commentId: F:NRules.RuleModel.SortDirection.Descending
  fullName: NRules.RuleModel.SortDirection.Descending
  nameWithType: SortDirection.Descending
- uid: NRules.RuleRepositoryExtensions
  name: RuleRepositoryExtensions
  href: api/NRules.RuleRepositoryExtensions.html
  commentId: T:NRules.RuleRepositoryExtensions
  fullName: NRules.RuleRepositoryExtensions
  nameWithType: RuleRepositoryExtensions
- uid: NRules.RuleRepositoryExtensions.Compile(NRules.RuleModel.IRuleRepository)
  name: Compile(IRuleRepository)
  href: api/NRules.RuleRepositoryExtensions.html#NRules_RuleRepositoryExtensions_Compile_NRules_RuleModel_IRuleRepository_
  commentId: M:NRules.RuleRepositoryExtensions.Compile(NRules.RuleModel.IRuleRepository)
  fullName: NRules.RuleRepositoryExtensions.Compile(NRules.RuleModel.IRuleRepository)
  nameWithType: RuleRepositoryExtensions.Compile(IRuleRepository)
- uid: NRules.RuleRepositoryExtensions.Compile(NRules.RuleModel.IRuleRepository,System.Threading.CancellationToken)
  name: Compile(IRuleRepository, CancellationToken)
  href: api/NRules.RuleRepositoryExtensions.html#NRules_RuleRepositoryExtensions_Compile_NRules_RuleModel_IRuleRepository_System_Threading_CancellationToken_
  commentId: M:NRules.RuleRepositoryExtensions.Compile(NRules.RuleModel.IRuleRepository,System.Threading.CancellationToken)
  fullName: NRules.RuleRepositoryExtensions.Compile(NRules.RuleModel.IRuleRepository, System.Threading.CancellationToken)
  nameWithType: RuleRepositoryExtensions.Compile(IRuleRepository, CancellationToken)
- uid: NRules.RuleRepositoryExtensions.Compile*
  name: Compile
  href: api/NRules.RuleRepositoryExtensions.html#NRules_RuleRepositoryExtensions_Compile_
  commentId: Overload:NRules.RuleRepositoryExtensions.Compile
  isSpec: "True"
  fullName: NRules.RuleRepositoryExtensions.Compile
  nameWithType: RuleRepositoryExtensions.Compile
- uid: NRules.RuleRepositoryExtensions.GetRules(NRules.RuleModel.IRuleRepository)
  name: GetRules(IRuleRepository)
  href: api/NRules.RuleRepositoryExtensions.html#NRules_RuleRepositoryExtensions_GetRules_NRules_RuleModel_IRuleRepository_
  commentId: M:NRules.RuleRepositoryExtensions.GetRules(NRules.RuleModel.IRuleRepository)
  fullName: NRules.RuleRepositoryExtensions.GetRules(NRules.RuleModel.IRuleRepository)
  nameWithType: RuleRepositoryExtensions.GetRules(IRuleRepository)
- uid: NRules.RuleRepositoryExtensions.GetRules*
  name: GetRules
  href: api/NRules.RuleRepositoryExtensions.html#NRules_RuleRepositoryExtensions_GetRules_
  commentId: Overload:NRules.RuleRepositoryExtensions.GetRules
  isSpec: "True"
  fullName: NRules.RuleRepositoryExtensions.GetRules
  nameWithType: RuleRepositoryExtensions.GetRules
- uid: NRules.RuleRhsExpressionEvaluationException
  name: RuleRhsExpressionEvaluationException
  href: api/NRules.RuleRhsExpressionEvaluationException.html
  commentId: T:NRules.RuleRhsExpressionEvaluationException
  fullName: NRules.RuleRhsExpressionEvaluationException
  nameWithType: RuleRhsExpressionEvaluationException
- uid: NRules.RuleRhsExpressionEvaluationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: RuleRhsExpressionEvaluationException(SerializationInfo, StreamingContext)
  href: api/NRules.RuleRhsExpressionEvaluationException.html#NRules_RuleRhsExpressionEvaluationException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:NRules.RuleRhsExpressionEvaluationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name.vb: New(SerializationInfo, StreamingContext)
  fullName: NRules.RuleRhsExpressionEvaluationException.RuleRhsExpressionEvaluationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  fullName.vb: NRules.RuleRhsExpressionEvaluationException.New(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: RuleRhsExpressionEvaluationException.RuleRhsExpressionEvaluationException(SerializationInfo, StreamingContext)
  nameWithType.vb: RuleRhsExpressionEvaluationException.New(SerializationInfo, StreamingContext)
- uid: NRules.RuleRhsExpressionEvaluationException.#ctor*
  name: RuleRhsExpressionEvaluationException
  href: api/NRules.RuleRhsExpressionEvaluationException.html#NRules_RuleRhsExpressionEvaluationException__ctor_
  commentId: Overload:NRules.RuleRhsExpressionEvaluationException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.RuleRhsExpressionEvaluationException.RuleRhsExpressionEvaluationException
  fullName.vb: NRules.RuleRhsExpressionEvaluationException.New
  nameWithType: RuleRhsExpressionEvaluationException.RuleRhsExpressionEvaluationException
  nameWithType.vb: RuleRhsExpressionEvaluationException.New
- uid: NRules.RuleRhsExpressionEvaluationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData(SerializationInfo, StreamingContext)
  href: api/NRules.RuleRhsExpressionEvaluationException.html#NRules_RuleRhsExpressionEvaluationException_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:NRules.RuleRhsExpressionEvaluationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: NRules.RuleRhsExpressionEvaluationException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: RuleRhsExpressionEvaluationException.GetObjectData(SerializationInfo, StreamingContext)
- uid: NRules.RuleRhsExpressionEvaluationException.GetObjectData*
  name: GetObjectData
  href: api/NRules.RuleRhsExpressionEvaluationException.html#NRules_RuleRhsExpressionEvaluationException_GetObjectData_
  commentId: Overload:NRules.RuleRhsExpressionEvaluationException.GetObjectData
  isSpec: "True"
  fullName: NRules.RuleRhsExpressionEvaluationException.GetObjectData
  nameWithType: RuleRhsExpressionEvaluationException.GetObjectData
- uid: NRules.RuleRhsExpressionEvaluationException.Message
  name: Message
  href: api/NRules.RuleRhsExpressionEvaluationException.html#NRules_RuleRhsExpressionEvaluationException_Message
  commentId: P:NRules.RuleRhsExpressionEvaluationException.Message
  fullName: NRules.RuleRhsExpressionEvaluationException.Message
  nameWithType: RuleRhsExpressionEvaluationException.Message
- uid: NRules.RuleRhsExpressionEvaluationException.Message*
  name: Message
  href: api/NRules.RuleRhsExpressionEvaluationException.html#NRules_RuleRhsExpressionEvaluationException_Message_
  commentId: Overload:NRules.RuleRhsExpressionEvaluationException.Message
  isSpec: "True"
  fullName: NRules.RuleRhsExpressionEvaluationException.Message
  nameWithType: RuleRhsExpressionEvaluationException.Message
- uid: NRules.RuleRhsExpressionEvaluationException.RuleName
  name: RuleName
  href: api/NRules.RuleRhsExpressionEvaluationException.html#NRules_RuleRhsExpressionEvaluationException_RuleName
  commentId: P:NRules.RuleRhsExpressionEvaluationException.RuleName
  fullName: NRules.RuleRhsExpressionEvaluationException.RuleName
  nameWithType: RuleRhsExpressionEvaluationException.RuleName
- uid: NRules.RuleRhsExpressionEvaluationException.RuleName*
  name: RuleName
  href: api/NRules.RuleRhsExpressionEvaluationException.html#NRules_RuleRhsExpressionEvaluationException_RuleName_
  commentId: Overload:NRules.RuleRhsExpressionEvaluationException.RuleName
  isSpec: "True"
  fullName: NRules.RuleRhsExpressionEvaluationException.RuleName
  nameWithType: RuleRhsExpressionEvaluationException.RuleName
- uid: NRules.Testing
  name: NRules.Testing
  href: api/NRules.Testing.html
  commentId: N:NRules.Testing
  fullName: NRules.Testing
  nameWithType: NRules.Testing
- uid: NRules.Testing.FactConstraint
  name: FactConstraint
  href: api/NRules.Testing.FactConstraint.html
  commentId: T:NRules.Testing.FactConstraint
  fullName: NRules.Testing.FactConstraint
  nameWithType: FactConstraint
- uid: NRules.Testing.FactConstraint`1
  name: FactConstraint<TFact>
  href: api/NRules.Testing.FactConstraint-1.html
  commentId: T:NRules.Testing.FactConstraint`1
  name.vb: FactConstraint(Of TFact)
  fullName: NRules.Testing.FactConstraint<TFact>
  fullName.vb: NRules.Testing.FactConstraint(Of TFact)
  nameWithType: FactConstraint<TFact>
  nameWithType.vb: FactConstraint(Of TFact)
- uid: NRules.Testing.FactConstraint`1.Callback(System.Action{`0})
  name: Callback(Action<TFact>)
  href: api/NRules.Testing.FactConstraint-1.html#NRules_Testing_FactConstraint_1_Callback_System_Action__0__
  commentId: M:NRules.Testing.FactConstraint`1.Callback(System.Action{`0})
  name.vb: Callback(Action(Of TFact))
  fullName: NRules.Testing.FactConstraint<TFact>.Callback(System.Action<TFact>)
  fullName.vb: NRules.Testing.FactConstraint(Of TFact).Callback(System.Action(Of TFact))
  nameWithType: FactConstraint<TFact>.Callback(Action<TFact>)
  nameWithType.vb: FactConstraint(Of TFact).Callback(Action(Of TFact))
- uid: NRules.Testing.FactConstraint`1.Callback*
  name: Callback
  href: api/NRules.Testing.FactConstraint-1.html#NRules_Testing_FactConstraint_1_Callback_
  commentId: Overload:NRules.Testing.FactConstraint`1.Callback
  isSpec: "True"
  fullName: NRules.Testing.FactConstraint<TFact>.Callback
  fullName.vb: NRules.Testing.FactConstraint(Of TFact).Callback
  nameWithType: FactConstraint<TFact>.Callback
  nameWithType.vb: FactConstraint(Of TFact).Callback
- uid: NRules.Testing.IQualifiedRuleFiringVerification
  name: IQualifiedRuleFiringVerification
  href: api/NRules.Testing.IQualifiedRuleFiringVerification.html
  commentId: T:NRules.Testing.IQualifiedRuleFiringVerification
  fullName: NRules.Testing.IQualifiedRuleFiringVerification
  nameWithType: IQualifiedRuleFiringVerification
- uid: NRules.Testing.IQualifiedRuleFiringVerification.Fired(NRules.Testing.Times,NRules.Testing.FactConstraint[])
  name: Fired(Times, params FactConstraint[])
  href: api/NRules.Testing.IQualifiedRuleFiringVerification.html#NRules_Testing_IQualifiedRuleFiringVerification_Fired_NRules_Testing_Times_NRules_Testing_FactConstraint___
  commentId: M:NRules.Testing.IQualifiedRuleFiringVerification.Fired(NRules.Testing.Times,NRules.Testing.FactConstraint[])
  name.vb: Fired(Times, ParamArray FactConstraint())
  fullName: NRules.Testing.IQualifiedRuleFiringVerification.Fired(NRules.Testing.Times, params NRules.Testing.FactConstraint[])
  fullName.vb: NRules.Testing.IQualifiedRuleFiringVerification.Fired(NRules.Testing.Times, ParamArray NRules.Testing.FactConstraint())
  nameWithType: IQualifiedRuleFiringVerification.Fired(Times, params FactConstraint[])
  nameWithType.vb: IQualifiedRuleFiringVerification.Fired(Times, ParamArray FactConstraint())
- uid: NRules.Testing.IQualifiedRuleFiringVerification.Fired*
  name: Fired
  href: api/NRules.Testing.IQualifiedRuleFiringVerification.html#NRules_Testing_IQualifiedRuleFiringVerification_Fired_
  commentId: Overload:NRules.Testing.IQualifiedRuleFiringVerification.Fired
  isSpec: "True"
  fullName: NRules.Testing.IQualifiedRuleFiringVerification.Fired
  nameWithType: IQualifiedRuleFiringVerification.Fired
- uid: NRules.Testing.IRuleAsserter
  name: IRuleAsserter
  href: api/NRules.Testing.IRuleAsserter.html
  commentId: T:NRules.Testing.IRuleAsserter
  fullName: NRules.Testing.IRuleAsserter
  nameWithType: IRuleAsserter
- uid: NRules.Testing.IRuleAsserter.Assert(NRules.Testing.RuleAssertResult)
  name: Assert(RuleAssertResult)
  href: api/NRules.Testing.IRuleAsserter.html#NRules_Testing_IRuleAsserter_Assert_NRules_Testing_RuleAssertResult_
  commentId: M:NRules.Testing.IRuleAsserter.Assert(NRules.Testing.RuleAssertResult)
  fullName: NRules.Testing.IRuleAsserter.Assert(NRules.Testing.RuleAssertResult)
  nameWithType: IRuleAsserter.Assert(RuleAssertResult)
- uid: NRules.Testing.IRuleAsserter.Assert*
  name: Assert
  href: api/NRules.Testing.IRuleAsserter.html#NRules_Testing_IRuleAsserter_Assert_
  commentId: Overload:NRules.Testing.IRuleAsserter.Assert
  isSpec: "True"
  fullName: NRules.Testing.IRuleAsserter.Assert
  nameWithType: IRuleAsserter.Assert
- uid: NRules.Testing.IRuleFiringVerification
  name: IRuleFiringVerification
  href: api/NRules.Testing.IRuleFiringVerification.html
  commentId: T:NRules.Testing.IRuleFiringVerification
  fullName: NRules.Testing.IRuleFiringVerification
  nameWithType: IRuleFiringVerification
- uid: NRules.Testing.IRuleFiringVerification.Fired(NRules.Testing.FactConstraint[])
  name: Fired(params FactConstraint[])
  href: api/NRules.Testing.IRuleFiringVerification.html#NRules_Testing_IRuleFiringVerification_Fired_NRules_Testing_FactConstraint___
  commentId: M:NRules.Testing.IRuleFiringVerification.Fired(NRules.Testing.FactConstraint[])
  name.vb: Fired(ParamArray FactConstraint())
  fullName: NRules.Testing.IRuleFiringVerification.Fired(params NRules.Testing.FactConstraint[])
  fullName.vb: NRules.Testing.IRuleFiringVerification.Fired(ParamArray NRules.Testing.FactConstraint())
  nameWithType: IRuleFiringVerification.Fired(params FactConstraint[])
  nameWithType.vb: IRuleFiringVerification.Fired(ParamArray FactConstraint())
- uid: NRules.Testing.IRuleFiringVerification.Fired*
  name: Fired
  href: api/NRules.Testing.IRuleFiringVerification.html#NRules_Testing_IRuleFiringVerification_Fired_
  commentId: Overload:NRules.Testing.IRuleFiringVerification.Fired
  isSpec: "True"
  fullName: NRules.Testing.IRuleFiringVerification.Fired
  nameWithType: IRuleFiringVerification.Fired
- uid: NRules.Testing.IRuleInvocationRecorder
  name: IRuleInvocationRecorder
  href: api/NRules.Testing.IRuleInvocationRecorder.html
  commentId: T:NRules.Testing.IRuleInvocationRecorder
  fullName: NRules.Testing.IRuleInvocationRecorder
  nameWithType: IRuleInvocationRecorder
- uid: NRules.Testing.IRuleInvocationRecorder.Clear
  name: Clear()
  href: api/NRules.Testing.IRuleInvocationRecorder.html#NRules_Testing_IRuleInvocationRecorder_Clear
  commentId: M:NRules.Testing.IRuleInvocationRecorder.Clear
  fullName: NRules.Testing.IRuleInvocationRecorder.Clear()
  nameWithType: IRuleInvocationRecorder.Clear()
- uid: NRules.Testing.IRuleInvocationRecorder.Clear*
  name: Clear
  href: api/NRules.Testing.IRuleInvocationRecorder.html#NRules_Testing_IRuleInvocationRecorder_Clear_
  commentId: Overload:NRules.Testing.IRuleInvocationRecorder.Clear
  isSpec: "True"
  fullName: NRules.Testing.IRuleInvocationRecorder.Clear
  nameWithType: IRuleInvocationRecorder.Clear
- uid: NRules.Testing.IRuleInvocationRecorder.GetInvocations
  name: GetInvocations()
  href: api/NRules.Testing.IRuleInvocationRecorder.html#NRules_Testing_IRuleInvocationRecorder_GetInvocations
  commentId: M:NRules.Testing.IRuleInvocationRecorder.GetInvocations
  fullName: NRules.Testing.IRuleInvocationRecorder.GetInvocations()
  nameWithType: IRuleInvocationRecorder.GetInvocations()
- uid: NRules.Testing.IRuleInvocationRecorder.GetInvocations*
  name: GetInvocations
  href: api/NRules.Testing.IRuleInvocationRecorder.html#NRules_Testing_IRuleInvocationRecorder_GetInvocations_
  commentId: Overload:NRules.Testing.IRuleInvocationRecorder.GetInvocations
  isSpec: "True"
  fullName: NRules.Testing.IRuleInvocationRecorder.GetInvocations
  nameWithType: IRuleInvocationRecorder.GetInvocations
- uid: NRules.Testing.IRuleInvocationRecorder.Pause
  name: Pause()
  href: api/NRules.Testing.IRuleInvocationRecorder.html#NRules_Testing_IRuleInvocationRecorder_Pause
  commentId: M:NRules.Testing.IRuleInvocationRecorder.Pause
  fullName: NRules.Testing.IRuleInvocationRecorder.Pause()
  nameWithType: IRuleInvocationRecorder.Pause()
- uid: NRules.Testing.IRuleInvocationRecorder.Pause*
  name: Pause
  href: api/NRules.Testing.IRuleInvocationRecorder.html#NRules_Testing_IRuleInvocationRecorder_Pause_
  commentId: Overload:NRules.Testing.IRuleInvocationRecorder.Pause
  isSpec: "True"
  fullName: NRules.Testing.IRuleInvocationRecorder.Pause
  nameWithType: IRuleInvocationRecorder.Pause
- uid: NRules.Testing.IRuleInvocationRecorder.Resume
  name: Resume()
  href: api/NRules.Testing.IRuleInvocationRecorder.html#NRules_Testing_IRuleInvocationRecorder_Resume
  commentId: M:NRules.Testing.IRuleInvocationRecorder.Resume
  fullName: NRules.Testing.IRuleInvocationRecorder.Resume()
  nameWithType: IRuleInvocationRecorder.Resume()
- uid: NRules.Testing.IRuleInvocationRecorder.Resume*
  name: Resume
  href: api/NRules.Testing.IRuleInvocationRecorder.html#NRules_Testing_IRuleInvocationRecorder_Resume_
  commentId: Overload:NRules.Testing.IRuleInvocationRecorder.Resume
  isSpec: "True"
  fullName: NRules.Testing.IRuleInvocationRecorder.Resume
  nameWithType: IRuleInvocationRecorder.Resume
- uid: NRules.Testing.IRuleSequenceFiringVerification
  name: IRuleSequenceFiringVerification
  href: api/NRules.Testing.IRuleSequenceFiringVerification.html
  commentId: T:NRules.Testing.IRuleSequenceFiringVerification
  fullName: NRules.Testing.IRuleSequenceFiringVerification
  nameWithType: IRuleSequenceFiringVerification
- uid: NRules.Testing.IRulesFiringVerification
  name: IRulesFiringVerification
  href: api/NRules.Testing.IRulesFiringVerification.html
  commentId: T:NRules.Testing.IRulesFiringVerification
  fullName: NRules.Testing.IRulesFiringVerification
  nameWithType: IRulesFiringVerification
- uid: NRules.Testing.IRulesFiringVerification`1
  name: IRulesFiringVerification<TVerification>
  href: api/NRules.Testing.IRulesFiringVerification-1.html
  commentId: T:NRules.Testing.IRulesFiringVerification`1
  name.vb: IRulesFiringVerification(Of TVerification)
  fullName: NRules.Testing.IRulesFiringVerification<TVerification>
  fullName.vb: NRules.Testing.IRulesFiringVerification(Of TVerification)
  nameWithType: IRulesFiringVerification<TVerification>
  nameWithType.vb: IRulesFiringVerification(Of TVerification)
- uid: NRules.Testing.IRulesFiringVerification`1.Rule
  name: Rule()
  href: api/NRules.Testing.IRulesFiringVerification-1.html#NRules_Testing_IRulesFiringVerification_1_Rule
  commentId: M:NRules.Testing.IRulesFiringVerification`1.Rule
  fullName: NRules.Testing.IRulesFiringVerification<TVerification>.Rule()
  fullName.vb: NRules.Testing.IRulesFiringVerification(Of TVerification).Rule()
  nameWithType: IRulesFiringVerification<TVerification>.Rule()
  nameWithType.vb: IRulesFiringVerification(Of TVerification).Rule()
- uid: NRules.Testing.IRulesFiringVerification`1.Rule(System.Type)
  name: Rule(Type)
  href: api/NRules.Testing.IRulesFiringVerification-1.html#NRules_Testing_IRulesFiringVerification_1_Rule_System_Type_
  commentId: M:NRules.Testing.IRulesFiringVerification`1.Rule(System.Type)
  fullName: NRules.Testing.IRulesFiringVerification<TVerification>.Rule(System.Type)
  fullName.vb: NRules.Testing.IRulesFiringVerification(Of TVerification).Rule(System.Type)
  nameWithType: IRulesFiringVerification<TVerification>.Rule(Type)
  nameWithType.vb: IRulesFiringVerification(Of TVerification).Rule(Type)
- uid: NRules.Testing.IRulesFiringVerification`1.Rule*
  name: Rule
  href: api/NRules.Testing.IRulesFiringVerification-1.html#NRules_Testing_IRulesFiringVerification_1_Rule_
  commentId: Overload:NRules.Testing.IRulesFiringVerification`1.Rule
  isSpec: "True"
  fullName: NRules.Testing.IRulesFiringVerification<TVerification>.Rule
  fullName.vb: NRules.Testing.IRulesFiringVerification(Of TVerification).Rule
  nameWithType: IRulesFiringVerification<TVerification>.Rule
  nameWithType.vb: IRulesFiringVerification(Of TVerification).Rule
- uid: NRules.Testing.IRulesFiringVerification`1.Rule``1
  name: Rule<TRule>()
  href: api/NRules.Testing.IRulesFiringVerification-1.html#NRules_Testing_IRulesFiringVerification_1_Rule__1
  commentId: M:NRules.Testing.IRulesFiringVerification`1.Rule``1
  name.vb: Rule(Of TRule)()
  fullName: NRules.Testing.IRulesFiringVerification<TVerification>.Rule<TRule>()
  fullName.vb: NRules.Testing.IRulesFiringVerification(Of TVerification).Rule(Of TRule)()
  nameWithType: IRulesFiringVerification<TVerification>.Rule<TRule>()
  nameWithType.vb: IRulesFiringVerification(Of TVerification).Rule(Of TRule)()
- uid: NRules.Testing.IRulesTestSetup
  name: IRulesTestSetup
  href: api/NRules.Testing.IRulesTestSetup.html
  commentId: T:NRules.Testing.IRulesTestSetup
  fullName: NRules.Testing.IRulesTestSetup
  nameWithType: IRulesTestSetup
- uid: NRules.Testing.IRulesTestSetup.CompilerSetupAction
  name: CompilerSetupAction
  href: api/NRules.Testing.IRulesTestSetup.html#NRules_Testing_IRulesTestSetup_CompilerSetupAction
  commentId: P:NRules.Testing.IRulesTestSetup.CompilerSetupAction
  fullName: NRules.Testing.IRulesTestSetup.CompilerSetupAction
  nameWithType: IRulesTestSetup.CompilerSetupAction
- uid: NRules.Testing.IRulesTestSetup.CompilerSetupAction*
  name: CompilerSetupAction
  href: api/NRules.Testing.IRulesTestSetup.html#NRules_Testing_IRulesTestSetup_CompilerSetupAction_
  commentId: Overload:NRules.Testing.IRulesTestSetup.CompilerSetupAction
  isSpec: "True"
  fullName: NRules.Testing.IRulesTestSetup.CompilerSetupAction
  nameWithType: IRulesTestSetup.CompilerSetupAction
- uid: NRules.Testing.IRulesTestSetup.Rule(NRules.Fluent.Dsl.Rule)
  name: Rule(Rule)
  href: api/NRules.Testing.IRulesTestSetup.html#NRules_Testing_IRulesTestSetup_Rule_NRules_Fluent_Dsl_Rule_
  commentId: M:NRules.Testing.IRulesTestSetup.Rule(NRules.Fluent.Dsl.Rule)
  fullName: NRules.Testing.IRulesTestSetup.Rule(NRules.Fluent.Dsl.Rule)
  nameWithType: IRulesTestSetup.Rule(Rule)
- uid: NRules.Testing.IRulesTestSetup.Rule(System.Type)
  name: Rule(Type)
  href: api/NRules.Testing.IRulesTestSetup.html#NRules_Testing_IRulesTestSetup_Rule_System_Type_
  commentId: M:NRules.Testing.IRulesTestSetup.Rule(System.Type)
  fullName: NRules.Testing.IRulesTestSetup.Rule(System.Type)
  nameWithType: IRulesTestSetup.Rule(Type)
- uid: NRules.Testing.IRulesTestSetup.Rule*
  name: Rule
  href: api/NRules.Testing.IRulesTestSetup.html#NRules_Testing_IRulesTestSetup_Rule_
  commentId: Overload:NRules.Testing.IRulesTestSetup.Rule
  isSpec: "True"
  fullName: NRules.Testing.IRulesTestSetup.Rule
  nameWithType: IRulesTestSetup.Rule
- uid: NRules.Testing.IRulesTestSetup.Rule``1
  name: Rule<T>()
  href: api/NRules.Testing.IRulesTestSetup.html#NRules_Testing_IRulesTestSetup_Rule__1
  commentId: M:NRules.Testing.IRulesTestSetup.Rule``1
  name.vb: Rule(Of T)()
  fullName: NRules.Testing.IRulesTestSetup.Rule<T>()
  fullName.vb: NRules.Testing.IRulesTestSetup.Rule(Of T)()
  nameWithType: IRulesTestSetup.Rule<T>()
  nameWithType.vb: IRulesTestSetup.Rule(Of T)()
- uid: NRules.Testing.IRulesTestSetup.Rules
  name: Rules
  href: api/NRules.Testing.IRulesTestSetup.html#NRules_Testing_IRulesTestSetup_Rules
  commentId: P:NRules.Testing.IRulesTestSetup.Rules
  fullName: NRules.Testing.IRulesTestSetup.Rules
  nameWithType: IRulesTestSetup.Rules
- uid: NRules.Testing.IRulesTestSetup.Rules*
  name: Rules
  href: api/NRules.Testing.IRulesTestSetup.html#NRules_Testing_IRulesTestSetup_Rules_
  commentId: Overload:NRules.Testing.IRulesTestSetup.Rules
  isSpec: "True"
  fullName: NRules.Testing.IRulesTestSetup.Rules
  nameWithType: IRulesTestSetup.Rules
- uid: NRules.Testing.IRulesUnderTest
  name: IRulesUnderTest
  href: api/NRules.Testing.IRulesUnderTest.html
  commentId: T:NRules.Testing.IRulesUnderTest
  fullName: NRules.Testing.IRulesUnderTest
  nameWithType: IRulesUnderTest
- uid: NRules.Testing.IRulesUnderTest.GetRuleInfo(System.Type)
  name: GetRuleInfo(Type)
  href: api/NRules.Testing.IRulesUnderTest.html#NRules_Testing_IRulesUnderTest_GetRuleInfo_System_Type_
  commentId: M:NRules.Testing.IRulesUnderTest.GetRuleInfo(System.Type)
  fullName: NRules.Testing.IRulesUnderTest.GetRuleInfo(System.Type)
  nameWithType: IRulesUnderTest.GetRuleInfo(Type)
- uid: NRules.Testing.IRulesUnderTest.GetRuleInfo*
  name: GetRuleInfo
  href: api/NRules.Testing.IRulesUnderTest.html#NRules_Testing_IRulesUnderTest_GetRuleInfo_
  commentId: Overload:NRules.Testing.IRulesUnderTest.GetRuleInfo
  isSpec: "True"
  fullName: NRules.Testing.IRulesUnderTest.GetRuleInfo
  nameWithType: IRulesUnderTest.GetRuleInfo
- uid: NRules.Testing.IRulesUnderTest.GetSingle
  name: GetSingle()
  href: api/NRules.Testing.IRulesUnderTest.html#NRules_Testing_IRulesUnderTest_GetSingle
  commentId: M:NRules.Testing.IRulesUnderTest.GetSingle
  fullName: NRules.Testing.IRulesUnderTest.GetSingle()
  nameWithType: IRulesUnderTest.GetSingle()
- uid: NRules.Testing.IRulesUnderTest.GetSingle*
  name: GetSingle
  href: api/NRules.Testing.IRulesUnderTest.html#NRules_Testing_IRulesUnderTest_GetSingle_
  commentId: Overload:NRules.Testing.IRulesUnderTest.GetSingle
  isSpec: "True"
  fullName: NRules.Testing.IRulesUnderTest.GetSingle
  nameWithType: IRulesUnderTest.GetSingle
- uid: NRules.Testing.IRulesUnderTest.Rules
  name: Rules
  href: api/NRules.Testing.IRulesUnderTest.html#NRules_Testing_IRulesUnderTest_Rules
  commentId: P:NRules.Testing.IRulesUnderTest.Rules
  fullName: NRules.Testing.IRulesUnderTest.Rules
  nameWithType: IRulesUnderTest.Rules
- uid: NRules.Testing.IRulesUnderTest.Rules*
  name: Rules
  href: api/NRules.Testing.IRulesUnderTest.html#NRules_Testing_IRulesUnderTest_Rules_
  commentId: Overload:NRules.Testing.IRulesUnderTest.Rules
  isSpec: "True"
  fullName: NRules.Testing.IRulesUnderTest.Rules
  nameWithType: IRulesUnderTest.Rules
- uid: NRules.Testing.IRulesVerification
  name: IRulesVerification
  href: api/NRules.Testing.IRulesVerification.html
  commentId: T:NRules.Testing.IRulesVerification
  fullName: NRules.Testing.IRulesVerification
  nameWithType: IRulesVerification
- uid: NRules.Testing.IRulesVerification.Verify(System.Action{NRules.Testing.IRulesFiringVerification})
  name: Verify(Action<IRulesFiringVerification>)
  href: api/NRules.Testing.IRulesVerification.html#NRules_Testing_IRulesVerification_Verify_System_Action_NRules_Testing_IRulesFiringVerification__
  commentId: M:NRules.Testing.IRulesVerification.Verify(System.Action{NRules.Testing.IRulesFiringVerification})
  name.vb: Verify(Action(Of IRulesFiringVerification))
  fullName: NRules.Testing.IRulesVerification.Verify(System.Action<NRules.Testing.IRulesFiringVerification>)
  fullName.vb: NRules.Testing.IRulesVerification.Verify(System.Action(Of NRules.Testing.IRulesFiringVerification))
  nameWithType: IRulesVerification.Verify(Action<IRulesFiringVerification>)
  nameWithType.vb: IRulesVerification.Verify(Action(Of IRulesFiringVerification))
- uid: NRules.Testing.IRulesVerification.Verify*
  name: Verify
  href: api/NRules.Testing.IRulesVerification.html#NRules_Testing_IRulesVerification_Verify_
  commentId: Overload:NRules.Testing.IRulesVerification.Verify
  isSpec: "True"
  fullName: NRules.Testing.IRulesVerification.Verify
  nameWithType: IRulesVerification.Verify
- uid: NRules.Testing.IRulesVerification.VerifySequence(System.Action{NRules.Testing.IRuleSequenceFiringVerification})
  name: VerifySequence(Action<IRuleSequenceFiringVerification>)
  href: api/NRules.Testing.IRulesVerification.html#NRules_Testing_IRulesVerification_VerifySequence_System_Action_NRules_Testing_IRuleSequenceFiringVerification__
  commentId: M:NRules.Testing.IRulesVerification.VerifySequence(System.Action{NRules.Testing.IRuleSequenceFiringVerification})
  name.vb: VerifySequence(Action(Of IRuleSequenceFiringVerification))
  fullName: NRules.Testing.IRulesVerification.VerifySequence(System.Action<NRules.Testing.IRuleSequenceFiringVerification>)
  fullName.vb: NRules.Testing.IRulesVerification.VerifySequence(System.Action(Of NRules.Testing.IRuleSequenceFiringVerification))
  nameWithType: IRulesVerification.VerifySequence(Action<IRuleSequenceFiringVerification>)
  nameWithType.vb: IRulesVerification.VerifySequence(Action(Of IRuleSequenceFiringVerification))
- uid: NRules.Testing.IRulesVerification.VerifySequence*
  name: VerifySequence
  href: api/NRules.Testing.IRulesVerification.html#NRules_Testing_IRulesVerification_VerifySequence_
  commentId: Overload:NRules.Testing.IRulesVerification.VerifySequence
  isSpec: "True"
  fullName: NRules.Testing.IRulesVerification.VerifySequence
  nameWithType: IRulesVerification.VerifySequence
- uid: NRules.Testing.Matched
  name: Matched
  href: api/NRules.Testing.Matched.html
  commentId: T:NRules.Testing.Matched
  fullName: NRules.Testing.Matched
  nameWithType: Matched
- uid: NRules.Testing.Matched.Fact*
  name: Fact
  href: api/NRules.Testing.Matched.html#NRules_Testing_Matched_Fact_
  commentId: Overload:NRules.Testing.Matched.Fact
  isSpec: "True"
  fullName: NRules.Testing.Matched.Fact
  nameWithType: Matched.Fact
- uid: NRules.Testing.Matched.Fact``1
  name: Fact<TFact>()
  href: api/NRules.Testing.Matched.html#NRules_Testing_Matched_Fact__1
  commentId: M:NRules.Testing.Matched.Fact``1
  name.vb: Fact(Of TFact)()
  fullName: NRules.Testing.Matched.Fact<TFact>()
  fullName.vb: NRules.Testing.Matched.Fact(Of TFact)()
  nameWithType: Matched.Fact<TFact>()
  nameWithType.vb: Matched.Fact(Of TFact)()
- uid: NRules.Testing.Matched.Fact``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: Fact<TFact>(Expression<Func<TFact, bool>>)
  href: api/NRules.Testing.Matched.html#NRules_Testing_Matched_Fact__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  commentId: M:NRules.Testing.Matched.Fact``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name.vb: Fact(Of TFact)(Expression(Of Func(Of TFact, Boolean)))
  fullName: NRules.Testing.Matched.Fact<TFact>(System.Linq.Expressions.Expression<System.Func<TFact, bool>>)
  fullName.vb: NRules.Testing.Matched.Fact(Of TFact)(System.Linq.Expressions.Expression(Of System.Func(Of TFact, Boolean)))
  nameWithType: Matched.Fact<TFact>(Expression<Func<TFact, bool>>)
  nameWithType.vb: Matched.Fact(Of TFact)(Expression(Of Func(Of TFact, Boolean)))
- uid: NRules.Testing.Matched.Fact``1(``0)
  name: Fact<TFact>(TFact)
  href: api/NRules.Testing.Matched.html#NRules_Testing_Matched_Fact__1___0_
  commentId: M:NRules.Testing.Matched.Fact``1(``0)
  name.vb: Fact(Of TFact)(TFact)
  fullName: NRules.Testing.Matched.Fact<TFact>(TFact)
  fullName.vb: NRules.Testing.Matched.Fact(Of TFact)(TFact)
  nameWithType: Matched.Fact<TFact>(TFact)
  nameWithType.vb: Matched.Fact(Of TFact)(TFact)
- uid: NRules.Testing.RuleAssertResult
  name: RuleAssertResult
  href: api/NRules.Testing.RuleAssertResult.html
  commentId: T:NRules.Testing.RuleAssertResult
  fullName: NRules.Testing.RuleAssertResult
  nameWithType: RuleAssertResult
- uid: NRules.Testing.RuleAssertResult.#ctor(System.String,NRules.Testing.RuleAssertStatus,System.String,System.Object,System.Object)
  name: RuleAssertResult(string, RuleAssertStatus, string, object, object)
  href: api/NRules.Testing.RuleAssertResult.html#NRules_Testing_RuleAssertResult__ctor_System_String_NRules_Testing_RuleAssertStatus_System_String_System_Object_System_Object_
  commentId: M:NRules.Testing.RuleAssertResult.#ctor(System.String,NRules.Testing.RuleAssertStatus,System.String,System.Object,System.Object)
  name.vb: New(String, RuleAssertStatus, String, Object, Object)
  fullName: NRules.Testing.RuleAssertResult.RuleAssertResult(string, NRules.Testing.RuleAssertStatus, string, object, object)
  fullName.vb: NRules.Testing.RuleAssertResult.New(String, NRules.Testing.RuleAssertStatus, String, Object, Object)
  nameWithType: RuleAssertResult.RuleAssertResult(string, RuleAssertStatus, string, object, object)
  nameWithType.vb: RuleAssertResult.New(String, RuleAssertStatus, String, Object, Object)
- uid: NRules.Testing.RuleAssertResult.#ctor*
  name: RuleAssertResult
  href: api/NRules.Testing.RuleAssertResult.html#NRules_Testing_RuleAssertResult__ctor_
  commentId: Overload:NRules.Testing.RuleAssertResult.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Testing.RuleAssertResult.RuleAssertResult
  fullName.vb: NRules.Testing.RuleAssertResult.New
  nameWithType: RuleAssertResult.RuleAssertResult
  nameWithType.vb: RuleAssertResult.New
- uid: NRules.Testing.RuleAssertResult.Actual
  name: Actual
  href: api/NRules.Testing.RuleAssertResult.html#NRules_Testing_RuleAssertResult_Actual
  commentId: P:NRules.Testing.RuleAssertResult.Actual
  fullName: NRules.Testing.RuleAssertResult.Actual
  nameWithType: RuleAssertResult.Actual
- uid: NRules.Testing.RuleAssertResult.Actual*
  name: Actual
  href: api/NRules.Testing.RuleAssertResult.html#NRules_Testing_RuleAssertResult_Actual_
  commentId: Overload:NRules.Testing.RuleAssertResult.Actual
  isSpec: "True"
  fullName: NRules.Testing.RuleAssertResult.Actual
  nameWithType: RuleAssertResult.Actual
- uid: NRules.Testing.RuleAssertResult.AssertionText
  name: AssertionText
  href: api/NRules.Testing.RuleAssertResult.html#NRules_Testing_RuleAssertResult_AssertionText
  commentId: P:NRules.Testing.RuleAssertResult.AssertionText
  fullName: NRules.Testing.RuleAssertResult.AssertionText
  nameWithType: RuleAssertResult.AssertionText
- uid: NRules.Testing.RuleAssertResult.AssertionText*
  name: AssertionText
  href: api/NRules.Testing.RuleAssertResult.html#NRules_Testing_RuleAssertResult_AssertionText_
  commentId: Overload:NRules.Testing.RuleAssertResult.AssertionText
  isSpec: "True"
  fullName: NRules.Testing.RuleAssertResult.AssertionText
  nameWithType: RuleAssertResult.AssertionText
- uid: NRules.Testing.RuleAssertResult.Expected
  name: Expected
  href: api/NRules.Testing.RuleAssertResult.html#NRules_Testing_RuleAssertResult_Expected
  commentId: P:NRules.Testing.RuleAssertResult.Expected
  fullName: NRules.Testing.RuleAssertResult.Expected
  nameWithType: RuleAssertResult.Expected
- uid: NRules.Testing.RuleAssertResult.Expected*
  name: Expected
  href: api/NRules.Testing.RuleAssertResult.html#NRules_Testing_RuleAssertResult_Expected_
  commentId: Overload:NRules.Testing.RuleAssertResult.Expected
  isSpec: "True"
  fullName: NRules.Testing.RuleAssertResult.Expected
  nameWithType: RuleAssertResult.Expected
- uid: NRules.Testing.RuleAssertResult.GetMessage
  name: GetMessage()
  href: api/NRules.Testing.RuleAssertResult.html#NRules_Testing_RuleAssertResult_GetMessage
  commentId: M:NRules.Testing.RuleAssertResult.GetMessage
  fullName: NRules.Testing.RuleAssertResult.GetMessage()
  nameWithType: RuleAssertResult.GetMessage()
- uid: NRules.Testing.RuleAssertResult.GetMessage*
  name: GetMessage
  href: api/NRules.Testing.RuleAssertResult.html#NRules_Testing_RuleAssertResult_GetMessage_
  commentId: Overload:NRules.Testing.RuleAssertResult.GetMessage
  isSpec: "True"
  fullName: NRules.Testing.RuleAssertResult.GetMessage
  nameWithType: RuleAssertResult.GetMessage
- uid: NRules.Testing.RuleAssertResult.RuleName
  name: RuleName
  href: api/NRules.Testing.RuleAssertResult.html#NRules_Testing_RuleAssertResult_RuleName
  commentId: P:NRules.Testing.RuleAssertResult.RuleName
  fullName: NRules.Testing.RuleAssertResult.RuleName
  nameWithType: RuleAssertResult.RuleName
- uid: NRules.Testing.RuleAssertResult.RuleName*
  name: RuleName
  href: api/NRules.Testing.RuleAssertResult.html#NRules_Testing_RuleAssertResult_RuleName_
  commentId: Overload:NRules.Testing.RuleAssertResult.RuleName
  isSpec: "True"
  fullName: NRules.Testing.RuleAssertResult.RuleName
  nameWithType: RuleAssertResult.RuleName
- uid: NRules.Testing.RuleAssertResult.Status
  name: Status
  href: api/NRules.Testing.RuleAssertResult.html#NRules_Testing_RuleAssertResult_Status
  commentId: P:NRules.Testing.RuleAssertResult.Status
  fullName: NRules.Testing.RuleAssertResult.Status
  nameWithType: RuleAssertResult.Status
- uid: NRules.Testing.RuleAssertResult.Status*
  name: Status
  href: api/NRules.Testing.RuleAssertResult.html#NRules_Testing_RuleAssertResult_Status_
  commentId: Overload:NRules.Testing.RuleAssertResult.Status
  isSpec: "True"
  fullName: NRules.Testing.RuleAssertResult.Status
  nameWithType: RuleAssertResult.Status
- uid: NRules.Testing.RuleAssertStatus
  name: RuleAssertStatus
  href: api/NRules.Testing.RuleAssertStatus.html
  commentId: T:NRules.Testing.RuleAssertStatus
  fullName: NRules.Testing.RuleAssertStatus
  nameWithType: RuleAssertStatus
- uid: NRules.Testing.RuleAssertStatus.Failed
  name: Failed
  href: api/NRules.Testing.RuleAssertStatus.html#NRules_Testing_RuleAssertStatus_Failed
  commentId: F:NRules.Testing.RuleAssertStatus.Failed
  fullName: NRules.Testing.RuleAssertStatus.Failed
  nameWithType: RuleAssertStatus.Failed
- uid: NRules.Testing.RuleAssertStatus.Passed
  name: Passed
  href: api/NRules.Testing.RuleAssertStatus.html#NRules_Testing_RuleAssertStatus_Passed
  commentId: F:NRules.Testing.RuleAssertStatus.Passed
  fullName: NRules.Testing.RuleAssertStatus.Passed
  nameWithType: RuleAssertStatus.Passed
- uid: NRules.Testing.RuleInfo
  name: RuleInfo
  href: api/NRules.Testing.RuleInfo.html
  commentId: T:NRules.Testing.RuleInfo
  fullName: NRules.Testing.RuleInfo
  nameWithType: RuleInfo
- uid: NRules.Testing.RuleInfo.#ctor(System.Type,System.Object,NRules.RuleModel.IRuleDefinition)
  name: RuleInfo(Type, object, IRuleDefinition)
  href: api/NRules.Testing.RuleInfo.html#NRules_Testing_RuleInfo__ctor_System_Type_System_Object_NRules_RuleModel_IRuleDefinition_
  commentId: M:NRules.Testing.RuleInfo.#ctor(System.Type,System.Object,NRules.RuleModel.IRuleDefinition)
  name.vb: New(Type, Object, IRuleDefinition)
  fullName: NRules.Testing.RuleInfo.RuleInfo(System.Type, object, NRules.RuleModel.IRuleDefinition)
  fullName.vb: NRules.Testing.RuleInfo.New(System.Type, Object, NRules.RuleModel.IRuleDefinition)
  nameWithType: RuleInfo.RuleInfo(Type, object, IRuleDefinition)
  nameWithType.vb: RuleInfo.New(Type, Object, IRuleDefinition)
- uid: NRules.Testing.RuleInfo.#ctor*
  name: RuleInfo
  href: api/NRules.Testing.RuleInfo.html#NRules_Testing_RuleInfo__ctor_
  commentId: Overload:NRules.Testing.RuleInfo.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Testing.RuleInfo.RuleInfo
  fullName.vb: NRules.Testing.RuleInfo.New
  nameWithType: RuleInfo.RuleInfo
  nameWithType.vb: RuleInfo.New
- uid: NRules.Testing.RuleInfo.Definition
  name: Definition
  href: api/NRules.Testing.RuleInfo.html#NRules_Testing_RuleInfo_Definition
  commentId: P:NRules.Testing.RuleInfo.Definition
  fullName: NRules.Testing.RuleInfo.Definition
  nameWithType: RuleInfo.Definition
- uid: NRules.Testing.RuleInfo.Definition*
  name: Definition
  href: api/NRules.Testing.RuleInfo.html#NRules_Testing_RuleInfo_Definition_
  commentId: Overload:NRules.Testing.RuleInfo.Definition
  isSpec: "True"
  fullName: NRules.Testing.RuleInfo.Definition
  nameWithType: RuleInfo.Definition
- uid: NRules.Testing.RuleInfo.Instance
  name: Instance
  href: api/NRules.Testing.RuleInfo.html#NRules_Testing_RuleInfo_Instance
  commentId: P:NRules.Testing.RuleInfo.Instance
  fullName: NRules.Testing.RuleInfo.Instance
  nameWithType: RuleInfo.Instance
- uid: NRules.Testing.RuleInfo.Instance*
  name: Instance
  href: api/NRules.Testing.RuleInfo.html#NRules_Testing_RuleInfo_Instance_
  commentId: Overload:NRules.Testing.RuleInfo.Instance
  isSpec: "True"
  fullName: NRules.Testing.RuleInfo.Instance
  nameWithType: RuleInfo.Instance
- uid: NRules.Testing.RuleInfo.Type
  name: Type
  href: api/NRules.Testing.RuleInfo.html#NRules_Testing_RuleInfo_Type
  commentId: P:NRules.Testing.RuleInfo.Type
  fullName: NRules.Testing.RuleInfo.Type
  nameWithType: RuleInfo.Type
- uid: NRules.Testing.RuleInfo.Type*
  name: Type
  href: api/NRules.Testing.RuleInfo.html#NRules_Testing_RuleInfo_Type_
  commentId: Overload:NRules.Testing.RuleInfo.Type
  isSpec: "True"
  fullName: NRules.Testing.RuleInfo.Type
  nameWithType: RuleInfo.Type
- uid: NRules.Testing.RulesTestFixture
  name: RulesTestFixture
  href: api/NRules.Testing.RulesTestFixture.html
  commentId: T:NRules.Testing.RulesTestFixture
  fullName: NRules.Testing.RulesTestFixture
  nameWithType: RulesTestFixture
- uid: NRules.Testing.RulesTestFixture.#ctor
  name: RulesTestFixture()
  href: api/NRules.Testing.RulesTestFixture.html#NRules_Testing_RulesTestFixture__ctor
  commentId: M:NRules.Testing.RulesTestFixture.#ctor
  name.vb: New()
  fullName: NRules.Testing.RulesTestFixture.RulesTestFixture()
  fullName.vb: NRules.Testing.RulesTestFixture.New()
  nameWithType: RulesTestFixture.RulesTestFixture()
  nameWithType.vb: RulesTestFixture.New()
- uid: NRules.Testing.RulesTestFixture.#ctor*
  name: RulesTestFixture
  href: api/NRules.Testing.RulesTestFixture.html#NRules_Testing_RulesTestFixture__ctor_
  commentId: Overload:NRules.Testing.RulesTestFixture.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Testing.RulesTestFixture.RulesTestFixture
  fullName.vb: NRules.Testing.RulesTestFixture.New
  nameWithType: RulesTestFixture.RulesTestFixture
  nameWithType.vb: RulesTestFixture.New
- uid: NRules.Testing.RulesTestFixture.Asserter
  name: Asserter
  href: api/NRules.Testing.RulesTestFixture.html#NRules_Testing_RulesTestFixture_Asserter
  commentId: P:NRules.Testing.RulesTestFixture.Asserter
  fullName: NRules.Testing.RulesTestFixture.Asserter
  nameWithType: RulesTestFixture.Asserter
- uid: NRules.Testing.RulesTestFixture.Asserter*
  name: Asserter
  href: api/NRules.Testing.RulesTestFixture.html#NRules_Testing_RulesTestFixture_Asserter_
  commentId: Overload:NRules.Testing.RulesTestFixture.Asserter
  isSpec: "True"
  fullName: NRules.Testing.RulesTestFixture.Asserter
  nameWithType: RulesTestFixture.Asserter
- uid: NRules.Testing.RulesTestFixture.Recorder
  name: Recorder
  href: api/NRules.Testing.RulesTestFixture.html#NRules_Testing_RulesTestFixture_Recorder
  commentId: P:NRules.Testing.RulesTestFixture.Recorder
  fullName: NRules.Testing.RulesTestFixture.Recorder
  nameWithType: RulesTestFixture.Recorder
- uid: NRules.Testing.RulesTestFixture.Recorder*
  name: Recorder
  href: api/NRules.Testing.RulesTestFixture.html#NRules_Testing_RulesTestFixture_Recorder_
  commentId: Overload:NRules.Testing.RulesTestFixture.Recorder
  isSpec: "True"
  fullName: NRules.Testing.RulesTestFixture.Recorder
  nameWithType: RulesTestFixture.Recorder
- uid: NRules.Testing.RulesTestFixture.Session
  name: Session
  href: api/NRules.Testing.RulesTestFixture.html#NRules_Testing_RulesTestFixture_Session
  commentId: P:NRules.Testing.RulesTestFixture.Session
  fullName: NRules.Testing.RulesTestFixture.Session
  nameWithType: RulesTestFixture.Session
- uid: NRules.Testing.RulesTestFixture.Session*
  name: Session
  href: api/NRules.Testing.RulesTestFixture.html#NRules_Testing_RulesTestFixture_Session_
  commentId: Overload:NRules.Testing.RulesTestFixture.Session
  isSpec: "True"
  fullName: NRules.Testing.RulesTestFixture.Session
  nameWithType: RulesTestFixture.Session
- uid: NRules.Testing.RulesTestFixture.Setup
  name: Setup
  href: api/NRules.Testing.RulesTestFixture.html#NRules_Testing_RulesTestFixture_Setup
  commentId: P:NRules.Testing.RulesTestFixture.Setup
  fullName: NRules.Testing.RulesTestFixture.Setup
  nameWithType: RulesTestFixture.Setup
- uid: NRules.Testing.RulesTestFixture.Setup*
  name: Setup
  href: api/NRules.Testing.RulesTestFixture.html#NRules_Testing_RulesTestFixture_Setup_
  commentId: Overload:NRules.Testing.RulesTestFixture.Setup
  isSpec: "True"
  fullName: NRules.Testing.RulesTestFixture.Setup
  nameWithType: RulesTestFixture.Setup
- uid: NRules.Testing.RulesTestFixture.Verify(System.Action{NRules.Testing.IRulesFiringVerification})
  name: Verify(Action<IRulesFiringVerification>)
  href: api/NRules.Testing.RulesTestFixture.html#NRules_Testing_RulesTestFixture_Verify_System_Action_NRules_Testing_IRulesFiringVerification__
  commentId: M:NRules.Testing.RulesTestFixture.Verify(System.Action{NRules.Testing.IRulesFiringVerification})
  name.vb: Verify(Action(Of IRulesFiringVerification))
  fullName: NRules.Testing.RulesTestFixture.Verify(System.Action<NRules.Testing.IRulesFiringVerification>)
  fullName.vb: NRules.Testing.RulesTestFixture.Verify(System.Action(Of NRules.Testing.IRulesFiringVerification))
  nameWithType: RulesTestFixture.Verify(Action<IRulesFiringVerification>)
  nameWithType.vb: RulesTestFixture.Verify(Action(Of IRulesFiringVerification))
- uid: NRules.Testing.RulesTestFixture.Verify*
  name: Verify
  href: api/NRules.Testing.RulesTestFixture.html#NRules_Testing_RulesTestFixture_Verify_
  commentId: Overload:NRules.Testing.RulesTestFixture.Verify
  isSpec: "True"
  fullName: NRules.Testing.RulesTestFixture.Verify
  nameWithType: RulesTestFixture.Verify
- uid: NRules.Testing.RulesTestFixture.VerifySequence(System.Action{NRules.Testing.IRuleSequenceFiringVerification})
  name: VerifySequence(Action<IRuleSequenceFiringVerification>)
  href: api/NRules.Testing.RulesTestFixture.html#NRules_Testing_RulesTestFixture_VerifySequence_System_Action_NRules_Testing_IRuleSequenceFiringVerification__
  commentId: M:NRules.Testing.RulesTestFixture.VerifySequence(System.Action{NRules.Testing.IRuleSequenceFiringVerification})
  name.vb: VerifySequence(Action(Of IRuleSequenceFiringVerification))
  fullName: NRules.Testing.RulesTestFixture.VerifySequence(System.Action<NRules.Testing.IRuleSequenceFiringVerification>)
  fullName.vb: NRules.Testing.RulesTestFixture.VerifySequence(System.Action(Of NRules.Testing.IRuleSequenceFiringVerification))
  nameWithType: RulesTestFixture.VerifySequence(Action<IRuleSequenceFiringVerification>)
  nameWithType.vb: RulesTestFixture.VerifySequence(Action(Of IRuleSequenceFiringVerification))
- uid: NRules.Testing.RulesTestFixture.VerifySequence*
  name: VerifySequence
  href: api/NRules.Testing.RulesTestFixture.html#NRules_Testing_RulesTestFixture_VerifySequence_
  commentId: Overload:NRules.Testing.RulesTestFixture.VerifySequence
  isSpec: "True"
  fullName: NRules.Testing.RulesTestFixture.VerifySequence
  nameWithType: RulesTestFixture.VerifySequence
- uid: NRules.Testing.RulesTestHarness
  name: RulesTestHarness
  href: api/NRules.Testing.RulesTestHarness.html
  commentId: T:NRules.Testing.RulesTestHarness
  fullName: NRules.Testing.RulesTestHarness
  nameWithType: RulesTestHarness
- uid: NRules.Testing.RulesTestHarness.#ctor(NRules.Testing.IRulesTestSetup)
  name: RulesTestHarness(IRulesTestSetup)
  href: api/NRules.Testing.RulesTestHarness.html#NRules_Testing_RulesTestHarness__ctor_NRules_Testing_IRulesTestSetup_
  commentId: M:NRules.Testing.RulesTestHarness.#ctor(NRules.Testing.IRulesTestSetup)
  name.vb: New(IRulesTestSetup)
  fullName: NRules.Testing.RulesTestHarness.RulesTestHarness(NRules.Testing.IRulesTestSetup)
  fullName.vb: NRules.Testing.RulesTestHarness.New(NRules.Testing.IRulesTestSetup)
  nameWithType: RulesTestHarness.RulesTestHarness(IRulesTestSetup)
  nameWithType.vb: RulesTestHarness.New(IRulesTestSetup)
- uid: NRules.Testing.RulesTestHarness.#ctor*
  name: RulesTestHarness
  href: api/NRules.Testing.RulesTestHarness.html#NRules_Testing_RulesTestHarness__ctor_
  commentId: Overload:NRules.Testing.RulesTestHarness.#ctor
  isSpec: "True"
  name.vb: New
  fullName: NRules.Testing.RulesTestHarness.RulesTestHarness
  fullName.vb: NRules.Testing.RulesTestHarness.New
  nameWithType: RulesTestHarness.RulesTestHarness
  nameWithType.vb: RulesTestHarness.New
- uid: NRules.Testing.RulesTestHarness.GetRulesVerification
  name: GetRulesVerification()
  href: api/NRules.Testing.RulesTestHarness.html#NRules_Testing_RulesTestHarness_GetRulesVerification
  commentId: M:NRules.Testing.RulesTestHarness.GetRulesVerification
  fullName: NRules.Testing.RulesTestHarness.GetRulesVerification()
  nameWithType: RulesTestHarness.GetRulesVerification()
- uid: NRules.Testing.RulesTestHarness.GetRulesVerification*
  name: GetRulesVerification
  href: api/NRules.Testing.RulesTestHarness.html#NRules_Testing_RulesTestHarness_GetRulesVerification_
  commentId: Overload:NRules.Testing.RulesTestHarness.GetRulesVerification
  isSpec: "True"
  fullName: NRules.Testing.RulesTestHarness.GetRulesVerification
  nameWithType: RulesTestHarness.GetRulesVerification
- uid: NRules.Testing.RulesTestHarness.Recorder
  name: Recorder
  href: api/NRules.Testing.RulesTestHarness.html#NRules_Testing_RulesTestHarness_Recorder
  commentId: P:NRules.Testing.RulesTestHarness.Recorder
  fullName: NRules.Testing.RulesTestHarness.Recorder
  nameWithType: RulesTestHarness.Recorder
- uid: NRules.Testing.RulesTestHarness.Recorder*
  name: Recorder
  href: api/NRules.Testing.RulesTestHarness.html#NRules_Testing_RulesTestHarness_Recorder_
  commentId: Overload:NRules.Testing.RulesTestHarness.Recorder
  isSpec: "True"
  fullName: NRules.Testing.RulesTestHarness.Recorder
  nameWithType: RulesTestHarness.Recorder
- uid: NRules.Testing.RulesTestHarness.RuleSet
  name: RuleSet
  href: api/NRules.Testing.RulesTestHarness.html#NRules_Testing_RulesTestHarness_RuleSet
  commentId: P:NRules.Testing.RulesTestHarness.RuleSet
  fullName: NRules.Testing.RulesTestHarness.RuleSet
  nameWithType: RulesTestHarness.RuleSet
- uid: NRules.Testing.RulesTestHarness.RuleSet*
  name: RuleSet
  href: api/NRules.Testing.RulesTestHarness.html#NRules_Testing_RulesTestHarness_RuleSet_
  commentId: Overload:NRules.Testing.RulesTestHarness.RuleSet
  isSpec: "True"
  fullName: NRules.Testing.RulesTestHarness.RuleSet
  nameWithType: RulesTestHarness.RuleSet
- uid: NRules.Testing.RulesTestHarness.Session
  name: Session
  href: api/NRules.Testing.RulesTestHarness.html#NRules_Testing_RulesTestHarness_Session
  commentId: P:NRules.Testing.RulesTestHarness.Session
  fullName: NRules.Testing.RulesTestHarness.Session
  nameWithType: RulesTestHarness.Session
- uid: NRules.Testing.RulesTestHarness.Session*
  name: Session
  href: api/NRules.Testing.RulesTestHarness.html#NRules_Testing_RulesTestHarness_Session_
  commentId: Overload:NRules.Testing.RulesTestHarness.Session
  isSpec: "True"
  fullName: NRules.Testing.RulesTestHarness.Session
  nameWithType: RulesTestHarness.Session
- uid: NRules.Testing.Times
  name: Times
  href: api/NRules.Testing.Times.html
  commentId: T:NRules.Testing.Times
  fullName: NRules.Testing.Times
  nameWithType: Times
- uid: NRules.Testing.Times.Exactly(System.Int32)
  name: Exactly(int)
  href: api/NRules.Testing.Times.html#NRules_Testing_Times_Exactly_System_Int32_
  commentId: M:NRules.Testing.Times.Exactly(System.Int32)
  name.vb: Exactly(Integer)
  fullName: NRules.Testing.Times.Exactly(int)
  fullName.vb: NRules.Testing.Times.Exactly(Integer)
  nameWithType: Times.Exactly(int)
  nameWithType.vb: Times.Exactly(Integer)
- uid: NRules.Testing.Times.Exactly*
  name: Exactly
  href: api/NRules.Testing.Times.html#NRules_Testing_Times_Exactly_
  commentId: Overload:NRules.Testing.Times.Exactly
  isSpec: "True"
  fullName: NRules.Testing.Times.Exactly
  nameWithType: Times.Exactly
- uid: NRules.Testing.Times.Never
  name: Never
  href: api/NRules.Testing.Times.html#NRules_Testing_Times_Never
  commentId: P:NRules.Testing.Times.Never
  fullName: NRules.Testing.Times.Never
  nameWithType: Times.Never
- uid: NRules.Testing.Times.Never*
  name: Never
  href: api/NRules.Testing.Times.html#NRules_Testing_Times_Never_
  commentId: Overload:NRules.Testing.Times.Never
  isSpec: "True"
  fullName: NRules.Testing.Times.Never
  nameWithType: Times.Never
- uid: NRules.Testing.Times.Once
  name: Once
  href: api/NRules.Testing.Times.html#NRules_Testing_Times_Once
  commentId: P:NRules.Testing.Times.Once
  fullName: NRules.Testing.Times.Once
  nameWithType: Times.Once
- uid: NRules.Testing.Times.Once*
  name: Once
  href: api/NRules.Testing.Times.html#NRules_Testing_Times_Once_
  commentId: Overload:NRules.Testing.Times.Once
  isSpec: "True"
  fullName: NRules.Testing.Times.Once
  nameWithType: Times.Once
- uid: NRules.Testing.Times.Twice
  name: Twice
  href: api/NRules.Testing.Times.html#NRules_Testing_Times_Twice
  commentId: P:NRules.Testing.Times.Twice
  fullName: NRules.Testing.Times.Twice
  nameWithType: Times.Twice
- uid: NRules.Testing.Times.Twice*
  name: Twice
  href: api/NRules.Testing.Times.html#NRules_Testing_Times_Twice_
  commentId: Overload:NRules.Testing.Times.Twice
  isSpec: "True"
  fullName: NRules.Testing.Times.Twice
  nameWithType: Times.Twice
